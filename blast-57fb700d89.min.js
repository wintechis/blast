/*
 https://www.gnu.org/licenses/agpl-3.0.de.html AGPLv3
*/
'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.ISOLATE_POLYFILLS=!1;$jscomp.FORCE_POLYFILL_PROMISE=!1;$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};
$jscomp.getGlobal=function(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");};$jscomp.global=$jscomp.getGlobal(this);$jscomp.IS_SYMBOL_NATIVE="function"===typeof Symbol&&"symbol"===typeof Symbol("x");$jscomp.TRUST_ES6_POLYFILLS=!$jscomp.ISOLATE_POLYFILLS||$jscomp.IS_SYMBOL_NATIVE;$jscomp.polyfills={};
$jscomp.propertyToPolyfillSymbol={};$jscomp.POLYFILL_PREFIX="$jscp$";var $jscomp$lookupPolyfilledValue=function(a,b){var c=$jscomp.propertyToPolyfillSymbol[b];if(null==c)return a[b];c=a[c];return void 0!==c?c:a[b]};$jscomp.polyfill=function(a,b,c,d){b&&($jscomp.ISOLATE_POLYFILLS?$jscomp.polyfillIsolated(a,b,c,d):$jscomp.polyfillUnisolated(a,b,c,d))};
$jscomp.polyfillUnisolated=function(a,b,c,d){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var f=a[d];if(!(f in c))return;c=c[f]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})};
$jscomp.polyfillIsolated=function(a,b,c,d){var f=a.split(".");a=1===f.length;d=f[0];d=!a&&d in $jscomp.polyfills?$jscomp.polyfills:$jscomp.global;for(var g=0;g<f.length-1;g++){var h=f[g];if(!(h in d))return;d=d[h]}f=f[f.length-1];c=$jscomp.IS_SYMBOL_NATIVE&&"es6"===c?d[f]:null;b=b(c);null!=b&&(a?$jscomp.defineProperty($jscomp.polyfills,f,{configurable:!0,writable:!0,value:b}):b!==c&&(void 0===$jscomp.propertyToPolyfillSymbol[f]&&($jscomp.propertyToPolyfillSymbol[f]=$jscomp.IS_SYMBOL_NATIVE?$jscomp.global.Symbol(f):
$jscomp.POLYFILL_PREFIX+f),$jscomp.defineProperty(d,$jscomp.propertyToPolyfillSymbol[f],{configurable:!0,writable:!0,value:b})))};$jscomp.underscoreProtoCanBeSet=function(){var a={a:!0},b={};try{return b.__proto__=a,b.a}catch(c){}return!1};$jscomp.setPrototypeOf=$jscomp.TRUST_ES6_POLYFILLS&&"function"==typeof Object.setPrototypeOf?Object.setPrototypeOf:$jscomp.underscoreProtoCanBeSet()?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null;
$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};$jscomp.generator={};
$jscomp.generator.ensureIteratorResultIsObject_=function(a){if(!(a instanceof Object))throw new TypeError("Iterator result "+a+" is not an object");};$jscomp.generator.Context=function(){this.isRunning_=!1;this.yieldAllIterator_=null;this.yieldResult=void 0;this.nextAddress=1;this.finallyAddress_=this.catchAddress_=0;this.finallyContexts_=this.abruptCompletion_=null};
$jscomp.generator.Context.prototype.start_=function(){if(this.isRunning_)throw new TypeError("Generator is already running");this.isRunning_=!0};$jscomp.generator.Context.prototype.stop_=function(){this.isRunning_=!1};$jscomp.generator.Context.prototype.jumpToErrorHandler_=function(){this.nextAddress=this.catchAddress_||this.finallyAddress_};$jscomp.generator.Context.prototype.next_=function(a){this.yieldResult=a};
$jscomp.generator.Context.prototype.throw_=function(a){this.abruptCompletion_={exception:a,isException:!0};this.jumpToErrorHandler_()};$jscomp.generator.Context.prototype.return=function(a){this.abruptCompletion_={return:a};this.nextAddress=this.finallyAddress_};$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks=function(a){this.abruptCompletion_={jumpTo:a};this.nextAddress=this.finallyAddress_};$jscomp.generator.Context.prototype.yield=function(a,b){this.nextAddress=b;return{value:a}};
$jscomp.generator.Context.prototype.yieldAll=function(a,b){a=$jscomp.makeIterator(a);var c=a.next();$jscomp.generator.ensureIteratorResultIsObject_(c);if(c.done)this.yieldResult=c.value,this.nextAddress=b;else return this.yieldAllIterator_=a,this.yield(c.value,b)};$jscomp.generator.Context.prototype.jumpTo=function(a){this.nextAddress=a};$jscomp.generator.Context.prototype.jumpToEnd=function(){this.nextAddress=0};
$jscomp.generator.Context.prototype.setCatchFinallyBlocks=function(a,b){this.catchAddress_=a;void 0!=b&&(this.finallyAddress_=b)};$jscomp.generator.Context.prototype.setFinallyBlock=function(a){this.catchAddress_=0;this.finallyAddress_=a||0};$jscomp.generator.Context.prototype.leaveTryBlock=function(a,b){this.nextAddress=a;this.catchAddress_=b||0};
$jscomp.generator.Context.prototype.enterCatchBlock=function(a){this.catchAddress_=a||0;a=this.abruptCompletion_.exception;this.abruptCompletion_=null;return a};$jscomp.generator.Context.prototype.enterFinallyBlock=function(a,b,c){c?this.finallyContexts_[c]=this.abruptCompletion_:this.finallyContexts_=[this.abruptCompletion_];this.catchAddress_=a||0;this.finallyAddress_=b||0};
$jscomp.generator.Context.prototype.leaveFinallyBlock=function(a,b){b=this.finallyContexts_.splice(b||0)[0];if(b=this.abruptCompletion_=this.abruptCompletion_||b){if(b.isException)return this.jumpToErrorHandler_();void 0!=b.jumpTo&&this.finallyAddress_<b.jumpTo?(this.nextAddress=b.jumpTo,this.abruptCompletion_=null):this.nextAddress=this.finallyAddress_}else this.nextAddress=a};$jscomp.generator.Context.prototype.forIn=function(a){return new $jscomp.generator.Context.PropertyIterator(a)};
$jscomp.generator.Context.PropertyIterator=function(a){this.object_=a;this.properties_=[];for(var b in a)this.properties_.push(b);this.properties_.reverse()};$jscomp.generator.Context.PropertyIterator.prototype.getNext=function(){for(;0<this.properties_.length;){var a=this.properties_.pop();if(a in this.object_)return a}return null};$jscomp.generator.Engine_=function(a){this.context_=new $jscomp.generator.Context;this.program_=a};
$jscomp.generator.Engine_.prototype.next_=function(a){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_.next,a,this.context_.next_);this.context_.next_(a);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.return_=function(a){this.context_.start_();var b=this.context_.yieldAllIterator_;if(b)return this.yieldAllStep_("return"in b?b["return"]:function(c){return{value:c,done:!0}},a,this.context_.return);this.context_.return(a);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.throw_=function(a){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"],a,this.context_.next_);this.context_.throw_(a);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.yieldAllStep_=function(a,b,c){try{var d=a.call(this.context_.yieldAllIterator_,b);$jscomp.generator.ensureIteratorResultIsObject_(d);if(!d.done)return this.context_.stop_(),d;var f=d.value}catch(g){return this.context_.yieldAllIterator_=null,this.context_.throw_(g),this.nextStep_()}this.context_.yieldAllIterator_=null;c.call(this.context_,f);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.nextStep_=function(){for(;this.context_.nextAddress;)try{var a=this.program_(this.context_);if(a)return this.context_.stop_(),{value:a.value,done:!1}}catch(b){this.context_.yieldResult=void 0,this.context_.throw_(b)}this.context_.stop_();if(this.context_.abruptCompletion_){a=this.context_.abruptCompletion_;this.context_.abruptCompletion_=null;if(a.isException)throw a.exception;return{value:a.return,done:!0}}return{value:void 0,done:!0}};
$jscomp.generator.Generator_=function(a){this.next=function(b){return a.next_(b)};this.throw=function(b){return a.throw_(b)};this.return=function(b){return a.return_(b)};this[Symbol.iterator]=function(){return this}};$jscomp.generator.createGenerator=function(a,b){b=new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(b));$jscomp.setPrototypeOf&&a.prototype&&$jscomp.setPrototypeOf(b,a.prototype);return b};
$jscomp.asyncExecutePromiseGenerator=function(a){function b(d){return a.next(d)}function c(d){return a.throw(d)}return new Promise(function(d,f){function g(h){h.done?d(h.value):Promise.resolve(h.value).then(b,c).then(g,f)}g(a.next())})};$jscomp.asyncExecutePromiseGeneratorFunction=function(a){return $jscomp.asyncExecutePromiseGenerator(a())};$jscomp.asyncExecutePromiseGeneratorProgram=function(a){return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(a)))};
$jscomp.polyfill("Array.prototype.includes",function(a){return a?a:function(b,c){var d=this;d instanceof String&&(d=String(d));var f=d.length;c=c||0;for(0>c&&(c=Math.max(c+f,0));c<f;c++){var g=d[c];if(g===b||Object.is(g,b))return!0}return!1}},"es7","es3");$jscomp.owns=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};$jscomp.polyfill("Object.values",function(a){return a?a:function(b){var c=[],d;for(d in b)$jscomp.owns(b,d)&&c.push(b[d]);return c}},"es8","es3");var Blast={Toolbox:{}};
const module$contents$Blast$Toolbox_defaultToolbox={kind:"categoryToolbox",contents:[{kind:"CATEGORY",contents:[],name:"Things and Resources",custom:"THINGS",colour:"60"},{kind:"sep",gap:"32"},{kind:"CATEGORY",contents:[],name:"Properties",colour:"255"},{kind:"CATEGORY",contents:[],name:"Actions",colour:"0"},{kind:"CATEGORY",contents:[],name:"States and Events",custom:"STATES",colour:"180"},{kind:"sep",gap:"32"},{kind:"CATEGORY",contents:[],name:"Requests and Queries",colour:"0"},{kind:"sep",gap:"32"},
{kind:"CATEGORY",contents:[{kind:"BLOCK",type:"while_until"},{kind:"BLOCK",type:"break_continue"},{kind:"BLOCK",type:"conditional_statement"},{kind:"BLOCK",type:"controls_forEach"}],name:"Control Flow",colour:"120"},{kind:"CATEGORY",contents:[{kind:"BLOCK",type:"logic_compare"},{kind:"BLOCK",type:"logic_operation"},{kind:"BLOCK",type:"logic_negate"}],name:"Boolean Expressions",colour:"210"},{kind:"CATEGORY",contents:[],name:"Functions",colour:"290",custom:"PROCEDURE"},{kind:"CATEGORY",contents:[],
name:"Variables",custom:"VARIABLE",colour:"330"},{kind:"sep",gap:"32"},{kind:"CATEGORY",contents:[{kind:"BLOCK",type:"lists_create_empty"},{kind:"BLOCK",type:"lists_create_with"},{kind:"BLOCK",type:"lists_repeat"},{kind:"BLOCK",type:"lists_length"},{kind:"BLOCK",type:"lists_isEmpty"},{kind:"BLOCK",type:"lists_indexOf"},{kind:"BLOCK",type:"lists_getIndex"},{kind:"BLOCK",type:"lists_setIndex"},{kind:"BLOCK",type:"lists_getSublist"},{kind:"BLOCK",type:"lists_sort"},{kind:"BLOCK",type:"lists_split"},
{kind:"BLOCK",type:"lists_reverse"}],name:"Lists",colour:"310"},{kind:"CATEGORY",contents:[{kind:"BLOCK",type:"string"},{kind:"BLOCK",type:"string_multiline"},{kind:"BLOCK",type:"string_join"},{kind:"BLOCK",type:"string_length"},{kind:"BLOCK",type:"string_isEmpty"},{kind:"BLOCK",type:"string_indexOf"},{kind:"BLOCK",type:"string_charAt"},{kind:"BLOCK",type:"string_getSubstring"},{kind:"BLOCK",type:"string_changeCase"},{kind:"BLOCK",type:"string_trim"},{kind:"BLOCK",type:"string_count"},{kind:"BLOCK",
type:"string_replace"},{kind:"BLOCK",type:"string_reverse"},{kind:"BLOCK",type:"string_showPrompt"}],name:"Strings",colour:"160"},{kind:"CATEGORY",contents:[{kind:"BLOCK",type:"number_value"},{kind:"BLOCK",type:"number_arithmetic"},{kind:"BLOCK",type:"number_single"},{kind:"BLOCK",type:"number_trig"},{kind:"BLOCK",type:"number_constant"},{kind:"BLOCK",type:"number_property"},{kind:"BLOCK",type:"number_round"},{kind:"BLOCK",type:"number_on_list"},{kind:"BLOCK",type:"number_modulo"},{kind:"BLOCK",type:"number_constrain"},
{kind:"BLOCK",type:"number_random"},{kind:"BLOCK",type:"number_random_float"},{kind:"BLOCK",type:"number_atan2"}],name:"Numbers",colour:"230"},{kind:"CATEGORY",contents:[{kind:"BLOCK",type:"logic_boolean"}],name:"Booleans",colour:"210"},{kind:"CATEGORY",contents:[{kind:"BLOCK",type:"colour_picker"},{kind:"BLOCK",type:"colour_random"}],name:"Colours",colour:"20"}]},module$contents$Blast$Toolbox_currentToolbox=module$contents$Blast$Toolbox_defaultToolbox;Blast.Toolbox.currentToolbox=module$contents$Blast$Toolbox_defaultToolbox;
const module$contents$Blast$Toolbox_getCategory=function(a){return module$contents$Blast$Toolbox_defaultToolbox.contents.find(function(b){return b.name?b.name.toLowerCase()===a.toLowerCase():!1})};Blast.Toolbox.getCategory=module$contents$Blast$Toolbox_getCategory;const module$contents$Blast$Toolbox_addBlock=function(a,b,c){a={kind:"BLOCK",type:a,blockxml:c};(b=module$contents$Blast$Toolbox_getCategory(b))&&b.contents.push(a)};Blast.Toolbox.addBlock=module$contents$Blast$Toolbox_addBlock;Blast.Interpreter={};let module$contents$Blast$Interpreter_interpreter=null;Blast.Interpreter.interpreter=module$contents$Blast$Interpreter_interpreter;const module$contents$Blast$Interpreter_getInterpreter=function(){return module$contents$Blast$Interpreter_interpreter};Blast.Interpreter.getInterpreter=module$contents$Blast$Interpreter_getInterpreter;const module$contents$Blast$Interpreter_apiFunctions=[];Blast.Interpreter.apiFunctions=module$contents$Blast$Interpreter_apiFunctions;
const module$contents$Blast$Interpreter_asyncApiFunctions=[];Blast.Interpreter.asyncApiFunctions=module$contents$Blast$Interpreter_asyncApiFunctions;let module$contents$Blast$Interpreter_interrupted=!1;const module$contents$Blast$Interpreter_getInterrupted=function(){return module$contents$Blast$Interpreter_interrupted};Blast.Interpreter.getInterrupted=module$contents$Blast$Interpreter_getInterrupted;
const module$contents$Blast$Interpreter_setInterrupted=function(a){module$contents$Blast$Interpreter_interrupted=a};Blast.Interpreter.setInterrupted=module$contents$Blast$Interpreter_setInterrupted;module$contents$Blast$Interpreter_apiFunctions.push(["setInterrupted",module$contents$Blast$Interpreter_setInterrupted]);const module$contents$Blast$Interpreter_statusValues={READY:"ready",RUNNING:"running",STOPPED:"stopped",ERROR:"error"};Blast.Interpreter.statusValues=module$contents$Blast$Interpreter_statusValues;
let module$contents$Blast$Interpreter_status=module$contents$Blast$Interpreter_statusValues.READY;const module$contents$Blast$Interpreter_onStatusChange={ready:[],running:[],stopped:[],error:[]};Blast.Interpreter.onStatusChange=module$contents$Blast$Interpreter_onStatusChange;const module$contents$Blast$Interpreter_setStatus=function(a){if(module$contents$Blast$Interpreter_status!==a){module$contents$Blast$Interpreter_status=a;for(const b of module$contents$Blast$Interpreter_onStatusChange[module$contents$Blast$Interpreter_status])b()}};
let module$contents$Blast$Interpreter_latestCode="";const module$contents$Blast$Interpreter_getLatestCode=function(){return module$contents$Blast$Interpreter_latestCode};Blast.Interpreter.getLatestCode=module$contents$Blast$Interpreter_getLatestCode;let module$contents$Blast$Interpreter_runner_=null,module$contents$Blast$Interpreter_workspace=null;const module$contents$Blast$Interpreter_getWorkspace=function(){return module$contents$Blast$Interpreter_workspace};Blast.Interpreter.getWorkspace=module$contents$Blast$Interpreter_getWorkspace;
const module$contents$Blast$Interpreter_intervalEvents=[];Blast.Interpreter.intervalEvents=module$contents$Blast$Interpreter_intervalEvents;const module$contents$Blast$Interpreter_eventsInWorkspace=[];Blast.Interpreter.eventsInWorkspace=module$contents$Blast$Interpreter_eventsInWorkspace;let module$contents$Blast$Interpreter_deviceEventHandlers=[];Blast.Interpreter.deviceEventHandlers=module$contents$Blast$Interpreter_deviceEventHandlers;
const module$contents$Blast$Interpreter_cleanUpFunctions=[],module$contents$Blast$Interpreter_addCleanUpFunction=function(a){module$contents$Blast$Interpreter_cleanUpFunctions.push(a)};Blast.Interpreter.addCleanUpFunction=module$contents$Blast$Interpreter_addCleanUpFunction;let module$contents$Blast$Interpreter_statesInterpreterRunning=!1;const module$contents$Blast$Interpreter_setStatesInterpreterRunning=function(a){module$contents$Blast$Interpreter_statesInterpreterRunning=a};
Blast.Interpreter.setStatesInterpreterRunning=module$contents$Blast$Interpreter_setStatesInterpreterRunning;let module$contents$Blast$Interpreter_stdOut=prompt;const module$contents$Blast$Interpreter_setStdOut=function(a){module$contents$Blast$Interpreter_stdOut=a};Blast.Interpreter.setStdOut=module$contents$Blast$Interpreter_setStdOut;const module$contents$Blast$Interpreter_getStdOut=function(){return module$contents$Blast$Interpreter_stdOut};Blast.Interpreter.getStdOut=module$contents$Blast$Interpreter_getStdOut;
let module$contents$Blast$Interpreter_stdInfo=prompt;const module$contents$Blast$Interpreter_setStdInfo=function(a){module$contents$Blast$Interpreter_stdInfo=a};Blast.Interpreter.setStdInfo=module$contents$Blast$Interpreter_setStdInfo;const module$contents$Blast$Interpreter_getStdInfo=function(){return module$contents$Blast$Interpreter_stdInfo};Blast.Interpreter.getStdInfo=module$contents$Blast$Interpreter_getStdInfo;let module$contents$Blast$Interpreter_stdErr=prompt;
const module$contents$Blast$Interpreter_setStdError=function(a){module$contents$Blast$Interpreter_stdErr=a};Blast.Interpreter.setStdError=module$contents$Blast$Interpreter_setStdError;const module$contents$Blast$Interpreter_getStdError=function(){return module$contents$Blast$Interpreter_stdErr};Blast.Interpreter.getStdError=module$contents$Blast$Interpreter_getStdError;
const module$contents$Blast$Interpreter_clipboard={},module$contents$Blast$Interpreter_removeDeviceHandlers=function(){for(const a of module$contents$Blast$Interpreter_deviceEventHandlers)a.device.removeEventListener(a.type,a.fn);module$contents$Blast$Interpreter_deviceEventHandlers=[]},module$contents$Blast$Interpreter_clearIntervalEvents=function(){for(const a of module$contents$Blast$Interpreter_intervalEvents)clearInterval(a);module$contents$Blast$Interpreter_intervalEvents.length=0},module$contents$Blast$Interpreter_resetInterpreter=
function(){module$contents$Blast$Interpreter_interpreter=null;module$contents$Blast$Interpreter_runner_&&(clearTimeout(module$contents$Blast$Interpreter_runner_),module$contents$Blast$Interpreter_runner_=null);module$contents$Blast$Interpreter_removeDeviceHandlers();module$contents$Blast$Interpreter_clearIntervalEvents();for(const a of module$contents$Blast$Interpreter_cleanUpFunctions)a()};Blast.Interpreter.resetInterpreter=module$contents$Blast$Interpreter_resetInterpreter;
const module$contents$Blast$Interpreter_stopJS=function(){module$contents$Blast$Interpreter_resetInterpreter();module$contents$Blast$Interpreter_setStatus(module$contents$Blast$Interpreter_statusValues.STOPPED)};Blast.Interpreter.stopJS=module$contents$Blast$Interpreter_stopJS;
const module$contents$Blast$Interpreter_throwError=function(a){a||(a="Error executing program - See console for details.");module$contents$Blast$Interpreter_stdErr(a);module$contents$Blast$Interpreter_setStatus(module$contents$Blast$Interpreter_statusValues.ERROR);module$contents$Blast$Interpreter_resetInterpreter();module$contents$Blast$Interpreter_stdInfo("Execution stopped")};Blast.Interpreter.throwError=module$contents$Blast$Interpreter_throwError;
const module$contents$Blast$Interpreter_generateCode=function(){Blockly.JavaScript.STATEMENT_PREFIX="highlightBlock(%1);\n";Blockly.JavaScript.addReservedWords("highlightBlock");module$contents$Blast$Interpreter_latestCode="";module$contents$Blast$Interpreter_latestCode=Blockly.JavaScript.workspaceToCode(module$contents$Blast$Interpreter_workspace)};
function module$contents$Blast$Interpreter_initApi(a,b){for(const c of module$contents$Blast$Interpreter_apiFunctions)Blockly.JavaScript.addReservedWords(c[0]),a.setProperty(b,c[0],a.createNativeFunction(c[1]));for(const c of module$contents$Blast$Interpreter_asyncApiFunctions)a.setProperty(b,c[0],a.createAsyncFunction(c[1]))}
const module$contents$Blast$Interpreter_initInterpreter=function(){module$contents$Blast$Interpreter_workspace=Blockly.inject("content_workspace",{media:"media/",toolbox:module$contents$Blast$Toolbox_defaultToolbox,zoom:{controls:!0,wheel:!0}});module$contents$Blast$Interpreter_generateCode();module$contents$Blast$Interpreter_workspace.addChangeListener(function(a){a instanceof Blockly.Events.Ui||module$contents$Blast$Interpreter_generateCode()})};Blast.Interpreter.initInterpreter=module$contents$Blast$Interpreter_initInterpreter;
const module$contents$Blast$Interpreter_disableWorkspace=function(){const a=document.getElementById("content_workspace"),b=document.createElement("div");b.id="workspace-disabled";b.style.position="absolute";b.style.top="0";b.style.left="0";b.style.width="100%";b.style.height="100%";b.style.zIndex="1";b.style.backgroundColor="rgba(0, 0, 0, 0.1)";a.appendChild(b);Blockly.selected=null;module$contents$Blast$Interpreter_clipboard.clipboard_=Blockly.clipboard_;module$contents$Blast$Interpreter_clipboard.clipboardSource_=
Blockly.clipboardSource_;module$contents$Blast$Interpreter_clipboard.clipboardXml=Blockly.clipboardXml;module$contents$Blast$Interpreter_clipboard.clipboardTypeCounts_=Blockly.clipboardTypeCounts_;Blockly.clipboard_=null;Blockly.clipboardSource_=null;Blockly.clipboardXml=null;Blockly.clipboardTypeCounts_=null},module$contents$Blast$Interpreter_enableWorkspace=function(){const a=document.getElementById("content_workspace"),b=document.getElementById("workspace-disabled");a.removeChild(b);Blockly.clipboard_=
module$contents$Blast$Interpreter_clipboard.clipboard_;Blockly.clipboardSource_=module$contents$Blast$Interpreter_clipboard.clipboardSource_;Blockly.clipboardXml=module$contents$Blast$Interpreter_clipboard.clipboardXml;Blockly.clipboardTypeCounts_=module$contents$Blast$Interpreter_clipboard.clipboardTypeCounts_};module$contents$Blast$Interpreter_onStatusChange.ready.push(module$contents$Blast$Interpreter_enableWorkspace);module$contents$Blast$Interpreter_onStatusChange.stopped.push(module$contents$Blast$Interpreter_enableWorkspace);
module$contents$Blast$Interpreter_onStatusChange.error.push(module$contents$Blast$Interpreter_enableWorkspace);
const module$contents$Blast$Interpreter_runJS=function(){module$contents$Blast$Interpreter_setStatus(module$contents$Blast$Interpreter_statusValues.RUNNING);module$contents$Blast$Interpreter_stdInfo("execution started");module$contents$Blast$Interpreter_disableWorkspace();null==module$contents$Blast$Interpreter_interpreter&&(module$contents$Blast$Interpreter_interpreter=new Interpreter(module$contents$Blast$Interpreter_latestCode,module$contents$Blast$Interpreter_initApi),module$contents$Blast$Interpreter_runner_=
function(){if(module$contents$Blast$Interpreter_interpreter)try{module$contents$Blast$Interpreter_interrupted?setTimeout(module$contents$Blast$Interpreter_runner_,1):module$contents$Blast$Interpreter_interpreter.step()?setTimeout(module$contents$Blast$Interpreter_runner_,1):module$contents$Blast$Interpreter_statesInterpreterRunning||0<module$contents$Blast$Interpreter_eventsInWorkspace.length||(module$contents$Blast$Interpreter_setStatus(module$contents$Blast$Interpreter_statusValues.READY),module$contents$Blast$Interpreter_stdInfo("execution completed"),
module$contents$Blast$Interpreter_resetInterpreter())}catch(a){module$contents$Blast$Interpreter_throwError(a),module$contents$Blast$Interpreter_resetInterpreter(),console.error(a)}},module$contents$Blast$Interpreter_runner_())};Blast.Interpreter.runJS=module$contents$Blast$Interpreter_runJS;Blast.States={};let module$contents$Blast$States_StateBlock;Blast.States.StateBlock=module$contents$Blast$States_StateBlock;const module$contents$Blast$States_eventValues=new Map,module$contents$Blast$States_eventChecker=function(a,b){const c=module$contents$Blast$States_eventValues.get(a);module$contents$Blast$States_eventValues.set(a,b);return void 0!=c?!c&&b:!1};module$contents$Blast$Interpreter_apiFunctions.push(["eventChecker",module$contents$Blast$States_eventChecker]);
const module$contents$Blast$States_allStates=function(a){return a.getBlocksByType("state_definition",!1).map(function(b){return b.getStateDef()[0]})},module$contents$Blast$States_findLegalName=function(a,b){if(b.isInFlyout)return a;for(a=a||Blockly.Msg.UNNAMED_KEY||"unnamed";!module$contents$Blast$States_isLegalName_(a,b.workspace,b);){const c=a.match(/^(.*?)(\d+)$/);a=c?c[1]+(parseInt(c[2],10)+1):a+"2"}return a};Blast.States.findLegalName=module$contents$Blast$States_findLegalName;
const module$contents$Blast$States_isLegalName_=function(a,b,c){return!module$contents$Blast$States_isNameUsed(a,b,c)},module$contents$Blast$States_isNameUsed=function(a,b,c){b=b.getAllBlocks(!1);for(const d of b)if(d!=c&&d.getStateDef&&(b=d.getStateDef()[0],Blockly.Names.equals(b,a)))return!0;return!1},module$contents$Blast$States_rename=function(a){a=a.trim();const b=module$contents$Blast$States_findLegalName(a,this.getSourceBlock()),c=this.getValue();if(c!=a&&c!=b){a=this.getSourceBlock().workspace.getAllBlocks(!1);
for(const d of a)d.renameState&&d.renameState(c,b)}return b};Blast.States.rename=module$contents$Blast$States_rename;
const module$contents$Blast$States_flyoutCategory=function(a){const b=[];var c=Blockly.utils.xml.createElement("block");c.setAttribute("type","event_every_minutes");b.push(c);if(Blockly.Blocks.state_definition){c=Blockly.utils.xml.createElement("block");c.setAttribute("type","state_definition");c.setAttribute("gap",16);var d=Blockly.utils.xml.createElement("field");d.setAttribute("name","NAME");d.appendChild(Blockly.utils.xml.createTextNode("state name"));c.appendChild(d);b.push(c)}b.length&&b[b.length-
1].setAttribute("gap",24);a=module$contents$Blast$States_allStates(a);0==a.length&&(c=Blockly.utils.xml.createElement("block"),c.setAttribute("type","event"),c.setAttribute("gap",16),c.setAttribute("disabled",!0),d=Blockly.utils.xml.createElement("mutation"),d.setAttribute("name","state name"),c.appendChild(d),b.push(c));for(var f of a)a=Blockly.utils.xml.createElement("block"),a.setAttribute("type","event"),a.setAttribute("gap",16),c=Blockly.utils.xml.createElement("mutation"),c.setAttribute("name",
f),a.appendChild(c),b.push(a);if(f=module$contents$Blast$Toolbox_getCategory("States and Events"))for(const g of f.contents)f=Blockly.utils.xml.createElement("block"),f.setAttribute("type",g.type),f.setAttribute("gap",16),b.push(f);return b};Blast.States.flyoutCategory=module$contents$Blast$States_flyoutCategory;const module$contents$Blast$States_getDefinition=function(a,b){b=b.getTopBlocks(!1);for(const c of b)if(c.getStateDef&&(b=c.getStateDef()[0])&&Blockly.Names.equals(b,a))return c;return null};
Blast.States.getDefinition=module$contents$Blast$States_getDefinition;Blast.States.Interpreter={};let module$contents$Blast$States$Interpreter_stateInterpreter=null,module$contents$Blast$States$Interpreter_workspace=null,module$contents$Blast$States$Interpreter_runner_=null,module$contents$Blast$States$Interpreter_latestCode="";const module$contents$Blast$States$Interpreter_eventCode=new Map,module$contents$Blast$States$Interpreter_addEventCode=function(a,b){module$contents$Blast$States$Interpreter_eventCode.set(a,b)};Blast.States.Interpreter.addEventCode=module$contents$Blast$States$Interpreter_addEventCode;
const module$contents$Blast$States$Interpreter_removeEventCode=function(a){module$contents$Blast$States$Interpreter_eventCode.delete(a)};Blast.States.Interpreter.removeEventCode=module$contents$Blast$States$Interpreter_removeEventCode;
const module$contents$Blast$States$Interpreter_generateCode=function(){let a="while (true) {\n \n}";const b=module$contents$Blast$States$Interpreter_workspace.getBlocksByType("event",!1).map(function(c){return c.id});for(const [c,d]of module$contents$Blast$States$Interpreter_eventCode)b.includes(c)&&(a=a.slice(0,-2)+d+"\n"+a.slice(-1));module$contents$Blast$States$Interpreter_latestCode=Blockly.JavaScript.finish(a)};Blast.States.Interpreter.generateEventCode=module$contents$Blast$States$Interpreter_generateCode;
const module$contents$Blast$States$Interpreter_startEventChecker=function(){module$contents$Blast$States$Interpreter_stateInterpreter=null;module$contents$Blast$States$Interpreter_stateInterpreter=new Interpreter("");module$contents$Blast$States$Interpreter_stateInterpreter.stateStack[0].scope=module$contents$Blast$Interpreter_getInterpreter().globalScope;module$contents$Blast$States$Interpreter_stateInterpreter.appendCode(module$contents$Blast$States$Interpreter_latestCode);module$contents$Blast$Interpreter_setStatesInterpreterRunning(!0);
module$contents$Blast$States$Interpreter_runner_=function(){if(module$contents$Blast$States$Interpreter_stateInterpreter)try{module$contents$Blast$States$Interpreter_stateInterpreter.step(),setTimeout(module$contents$Blast$States$Interpreter_runner_,1)}catch(a){module$contents$Blast$Interpreter_throwError("Error executing program:\n%e".replace("%e",a)),module$contents$Blast$Interpreter_resetInterpreter(),console.error(a)}};module$contents$Blast$States$Interpreter_runner_()};
module$contents$Blast$Interpreter_apiFunctions.push(["startEventChecker",module$contents$Blast$States$Interpreter_startEventChecker]);const module$contents$Blast$States$Interpreter_resetInterpreter=function(){clearTimeout(module$contents$Blast$States$Interpreter_runner_);module$contents$Blast$States$Interpreter_runner_=null;module$contents$Blast$Interpreter_setStatesInterpreterRunning(!1)};module$contents$Blast$Interpreter_onStatusChange.stopped.push(module$contents$Blast$States$Interpreter_resetInterpreter);
const module$contents$Blast$States$Interpreter_init=function(a){module$contents$Blast$States$Interpreter_workspace=a;module$contents$Blast$States$Interpreter_workspace.addChangeListener(function(b){b instanceof Blockly.Events.Ui||module$contents$Blast$States$Interpreter_generateCode()})};Blast.States.Interpreter.initStatesInterpreter=module$contents$Blast$States$Interpreter_init;Blast.Things={};const module$contents$Blast$Things_webBluetoothDevices=new Map,module$contents$Blast$Things_webHidNames=new Map,module$contents$Blast$Things_webHidDevices=new Map;let module$contents$Blast$Things_webBluetoothButtonHandler=null;const module$contents$Blast$Things_setWebBluetoothButtonHandler=function(a){module$contents$Blast$Things_webBluetoothButtonHandler=a};Blast.Things.setWebBluetoothButtonHandler=module$contents$Blast$Things_setWebBluetoothButtonHandler;
let module$contents$Blast$Things_thingsLog=function(a,b,c){console.log({adapter:b},{device:c},a)};const module$contents$Blast$Things_getThingsLog=function(){return module$contents$Blast$Things_thingsLog};Blast.Things.getThingsLog=module$contents$Blast$Things_getThingsLog;const module$contents$Blast$Things_setThingsLog=function(a){module$contents$Blast$Things_thingsLog=a};Blast.Things.setThingsLog=module$contents$Blast$Things_setThingsLog;
const module$contents$Blast$Things_resetThings=function(){module$contents$Blast$Things_webBluetoothDevices.clear();module$contents$Blast$Things_webHidNames.clear();module$contents$Blast$Things_webHidDevices.clear()};Blast.Things.resetThings=module$contents$Blast$Things_resetThings;const module$contents$Blast$Things_getWebHidDevice=function(a){return module$contents$Blast$Things_webHidDevices.get(a)};Blast.Things.getWebHidDevice=module$contents$Blast$Things_getWebHidDevice;
const module$contents$Blast$Things_flyoutCategory=function(a){let b=[];var c=document.createElement("label");c.setAttribute("text","WebBluetooth Blocks");b.push(c);c=document.createElement("button");c.setAttribute("text","pair via webBluetooth");c.setAttribute("callbackKey","CREATE_WEBBLUETOOTH");a.registerButtonCallback("CREATE_WEBBLUETOOTH",function(d){module$contents$Blast$Things_webBluetoothButtonHandler()});b.push(c);c=module$contents$Blast$Things_flyoutCategoryBlocksWB(a);b=b.concat(c);c=document.createElement("label");
c.setAttribute("text","WebHID Blocks");b.push(c);c=document.createElement("button");c.setAttribute("text","connect via webHID");c.setAttribute("callbackKey","CREATE_WEBHID");a.registerButtonCallback("CREATE_WEBHID",function(d){module$contents$Blast$Things_createWebHidButtonHandler()});b.push(c);a=module$contents$Blast$Things_flyoutCategoryBlocksWHid(a);b=b.concat(a);a=document.createElement("label");a.setAttribute("text","additional identifiers");b.push(a);a=Blockly.utils.xml.createElement("block");
a.setAttribute("type","uri");b.push(a);a=Blockly.utils.xml.createElement("block");a.setAttribute("type","uri_from_string");b.push(a);a=document.createElement("label");a.setAttribute("text","example audio URIs");b.push(a);a=["https://studio.code.org/blockly/media/skins/dance/win.mp3","https://studio.code.org/blockly/media/click.mp3","https://upload.wikimedia.org/wikipedia/commons/2/25/243020_plasterbrain_game-start.ogg","https://upload.wikimedia.org/wikipedia/commons/d/d9/Wilhelm_Scream.ogg"];for(const d of a)a=
Blockly.utils.xml.createElement("block"),a.setAttribute("type","uri"),c=Blockly.utils.xml.createElement("field"),c.setAttribute("name","URI"),c.textContent=d,a.appendChild(c),b.push(a);return b};Blast.Things.flyoutCategory=module$contents$Blast$Things_flyoutCategory;
const module$contents$Blast$Things_flyoutCategoryBlocksWHid=function(){const a=[];if(0<module$contents$Blast$Things_webHidDevices.size&&Blockly.Blocks.things_webHID){const b=Blockly.utils.xml.createElement("block");b.setAttribute("type","things_webHID");b.setAttribute("gap",8);a.push(b)}return a},module$contents$Blast$Things_flyoutCategoryBlocksWB=function(){const a=[];if(0<module$contents$Blast$Things_webBluetoothDevices.size&&Blockly.Blocks.things_webBluetooth){const b=Blockly.utils.xml.createElement("block");
b.setAttribute("type","things_webBluetooth");b.setAttribute("gap",8);a.push(b)}return a},module$contents$Blast$Things_getWebBluetoothDevices=function(){var a=[...module$contents$Blast$Things_webBluetoothDevices.keys()].sort();if(0===a.legnth)return[];const b=[];for(const c of a)a=module$contents$Blast$Things_webBluetoothDevices.get(c),b.push([c,a]);return b};Blast.Things.getWebBluetoothDevices=module$contents$Blast$Things_getWebBluetoothDevices;
const module$contents$Blast$Things_getWebHIDDevices=function(){var a=[...module$contents$Blast$Things_webHidNames.keys()].sort();if(0===a.legnth)return[];const b=[];for(const c of a)a=module$contents$Blast$Things_webHidNames.get(c),b.push([c,a]);return b};Blast.Things.getWebHIDDevices=module$contents$Blast$Things_getWebHIDDevices;
const module$contents$Blast$Things_addWebBluetoothDevice=function(a,b){const c=function(d,f){Blockly.Variables.promptName("Pair successful! Now give your device a name.",d,function(g){if(g)if(module$contents$Blast$Things_webBluetoothDevices.has(g)){const h="Name %1 already exists".replace("%1",g);Blockly.alert(h,function(){c(g,f)})}else module$contents$Blast$Things_webBluetoothDevices.set(g,f);else Blockly.alert("Name cannot be empty",function(){c(g,f)})})};c(b,a)};
Blast.Things.addWebBluetoothDevice=module$contents$Blast$Things_addWebBluetoothDevice;
const module$contents$Blast$Things_createWebHidButtonHandler=function(){const a=module$contents$Blast$Interpreter_getWorkspace();module$contents$Blast$Things_thingsLog("Requesting webHID device...","HID");navigator.hid.requestDevice({filters:[]}).then(b=>{if(0===b.length)module$contents$Blast$Interpreter_throwError("Connection failed or cancelled by User.");else{var c=Date.now().toString(36)+Math.random().toString(36).substring(2);module$contents$Blast$Things_addWebHidDevice(c,b[0].productName,b[0]);
a.refreshToolboxSelection();module$contents$Blast$Things_thingsLog("Connected","HID",b[0].productName)}}).catch(b=>{module$contents$Blast$Interpreter_throwError(b)})},module$contents$Blast$Things_addWebHidDevice=function(a,b,c){const d=function(f,g){Blockly.Variables.promptName("Connection established! Now give your device a name.",f,function(h){if(h)if(module$contents$Blast$Things_webHidNames.has(h)){const k="Name %1 already exists".replace("%1",h);Blockly.alert(k,function(){d(h,g)})}else module$contents$Blast$Things_webHidDevices.set(g,
c),module$contents$Blast$Things_webHidNames.set(h,g);else Blockly.alert("Name cannot be empty",function(){d(h,g)})})};d(b,a)};Blast.Things.addWebHidDevice=module$contents$Blast$Things_addWebHidDevice;Blast.Bluetooth={};const module$contents$Blast$Bluetooth_optionalServices=[];Blast.Bluetooth.optionalServices=module$contents$Blast$Bluetooth_optionalServices;const module$contents$Blast$Bluetooth_scanBlocks=[];Blast.Bluetooth.scanBlocks=module$contents$Blast$Bluetooth_scanBlocks;let module$contents$Blast$Bluetooth_LEScanResults={};Blast.Bluetooth.LEScanResults=module$contents$Blast$Bluetooth_LEScanResults;let module$contents$Blast$Bluetooth_isLEScanRunning=!1;
const module$contents$Blast$Bluetooth_eventListeners=[];let module$contents$Blast$Bluetooth_charEventListeners={};
const module$contents$Blast$Bluetooth_hexStringToArrayBuffer=function(a){a=a.replace(/^0x/,"");0!=a.length%2&&(a="0"+a);const b=a.match(/[G-Z\s]/i);b&&console.log("WARNING: found non-hex characters",b);a=a.match(/[\dA-F]{2}/gi).map(function(c){return parseInt(c,16)});return(new Uint8Array(a)).buffer},module$contents$Blast$Bluetooth_requestDevice=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=module$contents$Blast$Things_getThingsLog();c("Requesting device...",
"Bluetooth");if(navigator.bluetooth){a||(a={acceptAllDevices:!0},a.optionalServices=module$contents$Blast$Bluetooth_optionalServices);try{const d=yield navigator.bluetooth.requestDevice(a);c("Device paired","Bluetooth",d.id);module$contents$Blast$Things_addWebBluetoothDevice(d.id,b||d.name);module$contents$Blast$Interpreter_getWorkspace().refreshToolboxSelection();return d}catch(d){module$contents$Blast$Interpreter_throwError(d)}}})};Blast.Bluetooth.requestDevice=module$contents$Blast$Bluetooth_requestDevice;
module$contents$Blast$Things_setWebBluetoothButtonHandler(module$contents$Blast$Bluetooth_requestDevice);
const module$contents$Blast$Bluetooth_getDeviceById=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const b=yield navigator.bluetooth.getDevices();for(const c of b)if(c.id==a)return c;module$contents$Blast$Interpreter_throwError(`Bluetooth device ${a} wasn't found in paired devices.`)})},module$contents$Blast$Bluetooth_connect=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){try{const b=yield module$contents$Blast$Bluetooth_getDeviceById(a),c=
module$contents$Blast$Things_getThingsLog();c(`Connecting to <code>${a}</code>`,"Bluetooth");const d=yield b.gatt.connect();c("Connected","Bluetooth",a);return d}catch(b){module$contents$Blast$Interpreter_throwError(`Error connecting to Bluetooth device ${a}`),console.error(b)}})},module$contents$Blast$Bluetooth_disconnect=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){try{const b=yield module$contents$Blast$Bluetooth_getDeviceById(a),c=module$contents$Blast$Things_getThingsLog();
c("Disconnecting...","Bluetooth",a);const d=yield b.gatt.disconnect();c(`Disconnected from <code>${a}</code>`,"Bluetooth");return d}catch(b){module$contents$Blast$Interpreter_throwError(`Error disconnecting from Bluetooth device ${a}`),console.error(b)}})},module$contents$Blast$Bluetooth_writeWithoutResponse=function(a,b,c,d){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const f=yield module$contents$Blast$Bluetooth_getCharacteristic(a,b,c);if(f){"string"===typeof d&&(d=module$contents$Blast$Bluetooth_hexStringToArrayBuffer(d));
try{const g=module$contents$Blast$Things_getThingsLog();g("Invoke <code>WriteValueWithoutResponse</code> on characteristic "+`<code>${c}</code> with value <code>${d.toString()}</code>`,"Bluetooth",a);yield f.writeValueWithoutResponse(d);g("Finished <code>WriteValueWithoutResponse</code> on characteristic "+`<code>${c}</code> with value <code>${d.toString()}</code>`,"Bluetooth",a)}catch(g){console.error(g),module$contents$Blast$Interpreter_throwError("Error writing to Bluetooth device.\nMake sure the device is compatible with the connected block.")}}})};
Blast.Bluetooth.writeWithoutResponse=module$contents$Blast$Bluetooth_writeWithoutResponse;
const module$contents$Blast$Bluetooth_writeWithResponse=function(a,b,c,d){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const f=yield module$contents$Blast$Bluetooth_getCharacteristic(a,b,c);if(f){"string"===typeof d&&(d=module$contents$Blast$Bluetooth_hexStringToArrayBuffer(d));try{const g=module$contents$Blast$Things_getThingsLog();g("Invoke <code>WriteValueWithResponse</code> on characteristic "+`<code>${c}</code> with value <code>${d.toString()}</code>`,"Bluetooth",a);yield f.writeValueWithResponse(d);
g("Finished <code>WriteValueWithResponse</code> on characteristic "+`<code>${c}</code> with value <code>${d.toString()}</code>`,"Bluetooth",a)}catch(g){console.error(g),module$contents$Blast$Interpreter_throwError("Error writing to Bluetooth device.\nMake sure the device is compatible with the connected block.")}}})};Blast.Bluetooth.writeWithResponse=module$contents$Blast$Bluetooth_writeWithResponse;
const module$contents$Blast$Bluetooth_getPrimaryService=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=yield module$contents$Blast$Bluetooth_connect(a);let d;try{const f=module$contents$Blast$Things_getThingsLog();f(`Getting primary service <code>${b}</code>`,"Bluetooth",a);d=yield c.getPrimaryService(b);f(`Got primary service <code>${b}</code>`,"Bluetooth",a)}catch(f){console.error(f),module$contents$Blast$Interpreter_throwError("The device is not compatible with the connected block.")}return d})};
Blast.Bluetooth.getPrimaryService=module$contents$Blast$Bluetooth_getPrimaryService;
const module$contents$Blast$Bluetooth_getCharacteristic=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const d=yield module$contents$Blast$Bluetooth_getPrimaryService(a,b);if(d){try{const g=module$contents$Blast$Things_getThingsLog();g(`Getting characteristic <code>${c}</code> from service <code>${b}</code>`,"Bluetooth",a);var f=yield d.getCharacteristic(c);g(`Got characteristic <code>${c}</code> from service <code>${b}</code>`,"Bluetooth",a)}catch(g){console.error(g),
module$contents$Blast$Interpreter_throwError("The device is not compatible with the connected block.")}return f}})};Blast.Bluetooth.getCharacteristic=module$contents$Blast$Bluetooth_getCharacteristic;
const module$contents$Blast$Bluetooth_read=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const d=yield module$contents$Blast$Bluetooth_getCharacteristic(a,b,c);try{const f=module$contents$Blast$Things_getThingsLog();f(`Invoke <code>ReadValue</code> on characteristic <code>${c}</code>`+` from service <code>${b}</code>`,"Bluetooth",a);const g=yield d.readValue();f(`Finished <code>ReadValue</code> on characteristic <code>${c}</code>`+` from service <code>${b}</code> - value: <code>${g.toString()}</code>`,
"Bluetooth",a);return g}catch(f){console.error(f),module$contents$Blast$Interpreter_throwError(`Error reading from Bluetooth device ${a}`)}})};Blast.Bluetooth.read=module$contents$Blast$Bluetooth_read;const module$contents$Blast$Bluetooth_readText=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const d=yield module$contents$Blast$Bluetooth_read(a,b,c);return(new TextDecoder).decode(d)})};Blast.Bluetooth.readText=module$contents$Blast$Bluetooth_readText;
const module$contents$Blast$Bluetooth_readNumber=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){var d=yield module$contents$Blast$Bluetooth_read(a,b,c);d instanceof DataView||(d=new DataView(d));d=new Uint8Array(d.buffer);const f=d.length;return buffer.Buffer.from(d).readUIntBE(0,f)})};Blast.Bluetooth.readNumber=module$contents$Blast$Bluetooth_readNumber;
const module$contents$Blast$Bluetooth_readHex=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const d=yield module$contents$Blast$Bluetooth_read(a,b,c);return(new Uint8Array(d.buffer)).reduce((f,g)=>f+("0"+g.toString(16)).slice(-2),"")})};Blast.Bluetooth.readHex=module$contents$Blast$Bluetooth_readHex;
const module$contents$Blast$Bluetooth_subscribe=function(a,b,c,d){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const f=yield module$contents$Blast$Bluetooth_getCharacteristic(a,b,c),g=module$contents$Blast$Things_getThingsLog();g(`Add 'characteristicvaluechanged' listener to characteristic ${c}`+` of service <code>${b}</code>`,"Bluetooth",a);f.addEventListener("characteristicvaluechanged",d);module$contents$Blast$Bluetooth_charEventListeners[c]=[f,"characteristicvaluechanged",d];
try{g(`Invoke <code>startNotifications</code> on characteristic ${c}`+` from service <code>${b}</code>`,"Bluetooth",a),yield f.startNotifications(),g(`Finished <code>startNotifications</code> on characteristic ${c}`+` from service <code>${b}</code>`,"Bluetooth",a)}catch(h){console.error(h),module$contents$Blast$Interpreter_throwError(`Error subscribing to Bluetooth device ${a}`)}})};Blast.Bluetooth.subscribe=module$contents$Blast$Bluetooth_subscribe;
const module$contents$Blast$Bluetooth_startLEScan=function(){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){module$contents$Blast$Bluetooth_isLEScanRunning||(module$contents$Blast$Bluetooth_cacheLEScanResults(),module$contents$Blast$Bluetooth_isLEScanRunning=!0,module$contents$Blast$Things_getThingsLog()("Requesting LE Scan","Bluetooth"),Blockly.alert("Please click allow on the LE Scan prompt now, then close this dialog.",navigator.bluetooth.requestLEScan({acceptAllAdvertisements:!0,
keepRepeatedDevices:!0})),setTimeout(module$contents$Blast$Bluetooth_stopLEScan,3E4))})};Blast.Bluetooth.startLEScan=module$contents$Blast$Bluetooth_startLEScan;const module$contents$Blast$Bluetooth_stopLEScan=function(){module$contents$Blast$Bluetooth_isLEScanRunning&&(module$contents$Blast$Things_getThingsLog()("Stopping LE Scan","Bluetooth"),navigator.bluetooth.stopLEScan(),module$contents$Blast$Bluetooth_isLEScanRunning=!1)};Blast.Bluetooth.stopLEScan=module$contents$Blast$Bluetooth_stopLEScan;
const module$contents$Blast$Bluetooth_cacheLEScanResults=function(){module$contents$Blast$Bluetooth_addEventListener("advertisementreceived",function(a){const b=a.device.id;module$contents$Blast$Bluetooth_LEScanResults[b]||(module$contents$Blast$Bluetooth_LEScanResults[b]=[]);module$contents$Blast$Bluetooth_LEScanResults[b].unshift(a)})},module$contents$Blast$Bluetooth_addEventListener=function(a,b){module$contents$Blast$Bluetooth_eventListeners.push([a,b]);navigator.bluetooth.addEventListener(a,
b)},module$contents$Blast$Bluetooth_removeEventListener=function(a,b){const c=module$contents$Blast$Bluetooth_eventListeners.findIndex(function(d){return d[0]===a&&d[1]===b});-1!==c&&module$contents$Blast$Bluetooth_eventListeners.splice(c,1);navigator.bluetooth.removeEventListener(a,b)},module$contents$Blast$Bluetooth_tearDown=function(){module$contents$Blast$Bluetooth_isLEScanRunning&&(module$contents$Blast$Bluetooth_isLEScanRunning=!1);if(module$contents$Blast$Bluetooth_eventListeners){for(var a of module$contents$Blast$Bluetooth_eventListeners)module$contents$Blast$Bluetooth_removeEventListener(a[0],
a[1]);module$contents$Blast$Bluetooth_eventListeners.length=0}if(module$contents$Blast$Bluetooth_charEventListeners){for(const c of Object.keys(module$contents$Blast$Bluetooth_charEventListeners)){var b=module$contents$Blast$Bluetooth_charEventListeners[c];a=b[0];const d=b[1];b=b[2];a.stopNotifications();a.removeEventListener(d,b)}module$contents$Blast$Bluetooth_charEventListeners={}}module$contents$Blast$Bluetooth_LEScanResults={}};module$contents$Blast$Interpreter_addCleanUpFunction(module$contents$Blast$Bluetooth_tearDown);Blast.Storage={};let module$contents$Blast$Storage_saveAs=null;const module$contents$Blast$Storage_HTTPREQUEST_ERROR="There was a problem with the request.\n",module$contents$Blast$Storage_LINK_ALERT="Load your blocks with this link:\n\n%1",module$contents$Blast$Storage_NOT_FOUND_ERROR='Sorry, couldn\'t find "%1".',module$contents$Blast$Storage_XML_ERROR="Could not load your saved file.\nPerhaps it was created with a different version of Blast?";let module$contents$Blast$Storage_filename="BLAST.xml";
const module$contents$Blast$Storage_link=function(a){var b=module$contents$Blast$Interpreter_getWorkspace(),c=Blockly.Xml.workspaceToDom(b,!0);1==b.getTopBlocks(!1).length&&c.querySelector&&(b=c.querySelector("block"))&&(b.removeAttribute("x"),b.removeAttribute("y"));c=module$contents$Blast$Storage_removeDeviceId_(c);c=Blockly.Xml.domToPrettyText(c);!0===a?(c=new Blob([c],{type:"text/xml"}),module$contents$Blast$Storage_saveAs(c,module$contents$Blast$Storage_filename)):((a=document.getElementById("loadWorkspace-input").value)&&
0!=a.length||(a="storage/"+module$contents$Blast$Storage_generatePath()),c=Blockly.Xml.domToText(c),module$contents$Blast$Storage_saveXML_(a,c))};Blast.Storage.link=module$contents$Blast$Storage_link;
const module$contents$Blast$Storage_removeDeviceId_=function(a){var b=a.querySelectorAll("block");for(const d of b){var c=d.getAttribute("type");if("things_webBluetooth"==c||"things_webHID"==c)if(b=d.firstElementChild){const f=b.textContent;c="things_webBluetooth"==c?module$contents$Blast$Things_getWebBluetoothDevices():module$contents$Blast$Things_getWebHIDDevices();let g;for(const h of c){const [k,l]=h;if(l===f){g=k;break}}b.textContent=g}}return a},module$contents$Blast$Storage_saveXML_=function(a,
b){Blockly.hideChaff();fetch(a,{method:"PUT",body:b}).then(c=>{c.ok?(location.hash=a,Blockly.alert(module$contents$Blast$Storage_LINK_ALERT.replace("%1",window.location.href))):module$contents$Blast$Interpreter_throwError(module$contents$Blast$Storage_HTTPREQUEST_ERROR)})},module$contents$Blast$Storage_load=function(){const a=document.getElementById("loadWorkspace-input").value;if(""==a)Blockly.alert("Enter a URI first.");else{var b=a.split("/").pop();-1<b.indexOf(".")&&(module$contents$Blast$Storage_filename=
b);module$contents$Blast$Storage_retrieveXML_(a)}};Blast.Storage.load=module$contents$Blast$Storage_load;const module$contents$Blast$Storage_loadXMLFromFile=function(a){return new Promise(function(b,c){var d=a.target.files[0].name;-1<d.indexOf(".")&&(module$contents$Blast$Storage_filename=d);d=new FileReader;d.onload=function(f){module$contents$Blast$Storage_loadXML(f.target.result);b()};d.onerror=function(f){c(f.target.error)};d.readAsText(a.target.files[0])})};Blast.Storage.loadXMLFromFile=module$contents$Blast$Storage_loadXMLFromFile;
const module$contents$Blast$Storage_resetFileInput=function(){const a=document.getElementById("file-selector");a&&(a.value="");module$contents$Blast$Storage_filename="BLAST.xml"},module$contents$Blast$Storage_retrieveXML_=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){Blockly.hideChaff();module$contents$Blast$Interpreter_resetInterpreter();module$contents$Blast$Things_resetThings();module$contents$Blast$Storage_resetFileInput();fetch(a).then(b=>{if(b.ok)return b.text();
module$contents$Blast$Interpreter_throwError(module$contents$Blast$Storage_NOT_FOUND_ERROR.replace("%1",a))}).then(module$contents$Blast$Storage_loadXML)})},module$contents$Blast$Storage_loadXML=function(a){let b;const c=module$contents$Blast$Interpreter_getWorkspace();c.clear();try{b=Blockly.Xml.textToDom(a)}catch(d){module$contents$Blast$Interpreter_throwError(module$contents$Blast$Storage_XML_ERROR+"\nXML: "+b);return}b.querySelector('block[type="things_webBluetooth"]')||b.querySelector('block[type="things_webHID"]')?
(module$contents$Blast$Storage_generatePairButtons(b),document.getElementById("rcModal")&&(document.getElementById("rcModal").style.display="block")):(Blockly.Xml.domToWorkspace(b,c),module$contents$Blast$Storage_monitorChanges_(c))},module$contents$Blast$Storage_generatePairButtons=function(a){window.location.href.includes("mobile")?(window.app.openReconnectDialog(),module$contents$Blast$Storage_generatePairButtonsMobile_(a)):module$contents$Blast$Storage_generatePairButtonsDesktop_(a)},module$contents$Blast$Storage_generatePairButtonsDesktop_=
function(a){var b=a.querySelectorAll("block");const c=document.getElementById("rc-tbody");for(;c.firstChild;)c.removeChild(c.firstChild);const d=[];for(const f of b){const g=f.getAttribute("type");if("things_webBluetooth"==g||"things_webHID"==g){const h=f.firstElementChild.textContent;if(d.includes(h))continue;b=document.createElement("tr");const k=document.createElement("td");k.appendChild(document.createTextNode(h));const l=document.createElement("td"),m=document.createElement("input");m.setAttribute("type",
"button");m.setAttribute("id","pairButton-"+h);m.setAttribute("value","Pair");const p=document.createElement("td"),n=document.createElement("span");n.setAttribute("id","pairStatus-"+h);n.innerHTML="&#x2718;";n.style.color="red";n.style.fontSize="20px";n.style.fontWeight="bold";n.style.marginRight="10px";p.appendChild(n);m.addEventListener("click",function(){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if("things_webBluetooth"==g){const q=yield module$contents$Blast$Bluetooth_requestDevice();
document.getElementById("pairStatus-"+h).innerHTML="&#x2714;";document.getElementById("pairStatus-"+h).style.color="green";f.firstElementChild.textContent=q.id;module$contents$Blast$Storage_allConnectedDesktop_()&&(document.getElementById("rc-done").disabled=!1,document.getElementById("rc-done").addEventListener("click",()=>module$contents$Blast$Storage_reconnectDoneHandler_(a)))}else"things_webHID"==g&&navigator.hid.requestDevice({filters:[]}).then(q=>{0===q.length&&module$contents$Blast$Interpreter_throwError("Connection failed or cancelled by User.");
const r=Date.now().toString(36)+Math.random().toString(36).substr(2);module$contents$Blast$Things_addWebHidDevice(r,h,q[0]);document.getElementById("pairStatus-"+h).innerHTML="&#x2714;";document.getElementById("pairStatus-"+h).style.color="green";f.firstElementChild.textContent=r;module$contents$Blast$Storage_allConnectedDesktop_()&&(document.getElementById("rc-done").disabled=!1,document.getElementById("rc-done").addEventListener("click",()=>module$contents$Blast$Storage_reconnectDoneHandler_(a)))}).catch(q=>
{module$contents$Blast$Interpreter_throwError("Connection failed or cancelled by User.");console.error(q)})})});l.appendChild(m);b.appendChild(k);b.appendChild(l);b.appendChild(p);c.appendChild(b);d.push(h)}document.getElementById("rc-cancel").addEventListener("click",()=>module$contents$Blast$Storage_reconnectCancelHandler_())}},module$contents$Blast$Storage_generatePairButtonsMobile_=function(a){var b=a.querySelectorAll("block");const c=document.getElementById("rc-list");for(;c.firstChild;)c.removeChild(c.firstChild);
const d=[];for(const h of b){const k=h.getAttribute("type");if("things_webBluetooth"==k||"things_webHID"==k){const l=h.firstElementChild.textContent;if(!d.includes(l)){b=document.createElement("li");b.setAttribute("id","rc-item-"+l);b.setAttribute("class","mdc-list-item");var f=document.createElement("span");f.setAttribute("id","rc-icon-"+l);f.setAttribute("class","mdc-list-item__graphic material-icons");f.setAttribute("aria-hidden","true");f.innerHTML="things_webBluetooth"==k?"bluetooth_disabled":
"usb_off";b.appendChild(f);f=document.createElement("span");f.setAttribute("class","mdc-list-item__text");var g=document.createElement("span");g.setAttribute("class","mdc-list-item__primary-text");g.innerHTML=l;f.appendChild(g);g=document.createElement("span");g.setAttribute("class","mdc-list-item__secondary-text");g.setAttribute("id","rc-status-"+l);g.innerHTML="disconnected";f.appendChild(g);b.appendChild(f);b.addEventListener("click",function(){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if("things_webBluetooth"==
k){const m=yield module$contents$Blast$Bluetooth_requestDevice();module$contents$Blast$Things_addWebBluetoothDevice(m.id,l);document.getElementById("rc-status-"+l).innerHTML="connected";document.getElementById("rc-icon-"+l).innerHTML="bluetooth";document.getElementById("rc-icon-"+l).style.color="#0d30b1";h.firstElementChild.textContent=m.id;module$contents$Blast$Storage_allConnectedMobile_()&&(document.getElementById("rc-done").disabled=!1,document.getElementById("rc-done").addEventListener("click",
()=>module$contents$Blast$Storage_reconnectDoneHandler_(a)))}else"things_webHID"==k&&navigator.hid.requestDevice({filters:[]}).then(m=>{0===m.length&&module$contents$Blast$Interpreter_throwError("Connection failed or cancelled by User.");const p=Date.now().toString(36)+Math.random().toString(36).substr(2);module$contents$Blast$Things_addWebHidDevice(p,l,m[0]);document.getElementById("rc-status-"+l).innerHTML="connected";document.getElementById("rc-icon-"+l).innerHTML="usb";document.getElementById("rc-icon-"+
l).style.color="#0d30b1";h.firstElementChild.textContent=p;module$contents$Blast$Storage_allConnectedMobile_()&&(document.getElementById("rc-done").disabled=!1,document.getElementById("rc-done").addEventListener("click",()=>module$contents$Blast$Storage_reconnectDoneHandler_(a)))}).catch(m=>{module$contents$Blast$Interpreter_throwError("Connection failed or cancelled by User.");console.error(m)})})});c.appendChild(b);d.push(l)}}}window.app.initLists()},module$contents$Blast$Storage_allConnectedDesktop_=
function(){const a=document.getElementById("rc-tbody").querySelectorAll("tr");for(const b of a)if("\u2718"==document.getElementById("pairStatus-"+b.firstElementChild.textContent).innerHTML)return!1;return!0},module$contents$Blast$Storage_allConnectedMobile_=function(){const a=document.getElementById("rc-list").querySelectorAll("[id=rc-status-]");for(const b of a)if("disconnected"==document.getElementById("rc-status-"+b.textContent).innerHTML)return!1;return!0},module$contents$Blast$Storage_reconnectDoneHandler_=
function(a){const b=module$contents$Blast$Interpreter_getWorkspace();window.location.href.includes("mobile")?document.getElementById("rc-dialog").style.display="none":document.getElementById("rcModal").style.display="none";const c=document.getElementById("rc-done"),d=c.cloneNode(!0);d.disabled=!0;c.parentNode.replaceChild(d,c);Blockly.Xml.domToWorkspace(a,b);module$contents$Blast$Storage_monitorChanges_(b)},module$contents$Blast$Storage_reconnectCancelHandler_=function(){document.getElementById("rcModal").style.display=
"none"},module$contents$Blast$Storage_monitorChanges_=function(a){function b(){var f=Blockly.Xml.workspaceToDom(a);f=Blockly.Xml.domToText(f);d!=f&&(window.location.hash="",a.removeChangeListener(b))}const c=Blockly.Xml.workspaceToDom(a),d=Blockly.Xml.domToText(c);a.addChangeListener(b)},module$contents$Blast$Storage_generatePath=function(){const a=[];for(let b=0;12>b;b++)a.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(62*Math.random())));return a.join("")};
window.addEventListener("load",function(){var a=window.location.hash;if(a){a=a.substring(1);try{module$contents$Blast$Storage_retrieveXML_(a)}catch(b){module$contents$Blast$Interpreter_throwError("Could not load file."),console.error(b)}}});Blast.Ui={};const module$contents$Blast$Ui_TABS_=["workspace","javascript","xml","deviceLogs"];Blast.Ui.TABS_=module$contents$Blast$Ui_TABS_;let module$contents$Blast$Ui_selected_="workspace";const module$contents$Blast$Ui_playIcon_='<span class="icon material-icons">play_arrow</span>',module$contents$Blast$Ui_stopIcon_='<span class="icon material-icons">stop</span>';
let module$contents$Blast$Ui_messageCounter_=0,module$contents$Blast$Ui_messageOutputContainer=null,module$contents$Blast$Ui_statusContainer=null,module$contents$Blast$Ui_runButton=null,module$contents$Blast$Ui_workspace=null;const module$contents$Blast$Ui_bindClick=function(a,b){"string"==typeof a&&(a=document.getElementById(a));a.addEventListener("click",b,!0);a.addEventListener("touchend",b,!0)};Blast.Ui.bindClick=module$contents$Blast$Ui_bindClick;
const module$contents$Blast$Ui_setStatus=function(a){let b,c,d;a===module$contents$Blast$Interpreter_statusValues.RUNNING?(c=module$contents$Blast$Interpreter_stopJS,b=module$contents$Blast$Ui_stopIcon_,d="Stop the execution"):(c=module$contents$Blast$Interpreter_runJS,b=module$contents$Blast$Ui_playIcon_,d="Run block program");module$contents$Blast$Ui_runButton.onclick=c;module$contents$Blast$Ui_runButton.title=d;module$contents$Blast$Ui_runButton.innerHTML=b;module$contents$Blast$Ui_statusContainer.innerHTML=
a};module$contents$Blast$Interpreter_onStatusChange.stopped.push(()=>module$contents$Blast$Ui_setStatus(module$contents$Blast$Interpreter_statusValues.STOPPED));module$contents$Blast$Interpreter_onStatusChange.running.push(()=>module$contents$Blast$Ui_setStatus(module$contents$Blast$Interpreter_statusValues.RUNNING));const module$contents$Blast$Ui_resetUi=function(a){module$contents$Blast$Ui_workspace.highlightBlock(null);module$contents$Blast$Ui_setStatus(a)};
module$contents$Blast$Interpreter_onStatusChange.stopped.push(()=>module$contents$Blast$Ui_resetUi(module$contents$Blast$Interpreter_statusValues.STOPPED));module$contents$Blast$Interpreter_onStatusChange.running.push(()=>module$contents$Blast$Ui_resetUi(module$contents$Blast$Interpreter_statusValues.RUNNING));module$contents$Blast$Interpreter_onStatusChange.ready.push(()=>module$contents$Blast$Ui_resetUi(module$contents$Blast$Interpreter_statusValues.READY));
module$contents$Blast$Interpreter_onStatusChange.error.push(()=>module$contents$Blast$Ui_resetUi(module$contents$Blast$Interpreter_statusValues.ERROR));
const module$contents$Blast$Ui_addElementToOutputContainer=function(a){100<module$contents$Blast$Ui_messageCounter_&&module$contents$Blast$Ui_messageOutputContainer.firstChild.remove();module$contents$Blast$Ui_messageOutputContainer.appendChild(a,module$contents$Blast$Ui_messageOutputContainer.firstChild);module$contents$Blast$Ui_messageOutputContainer.scrollTop=module$contents$Blast$Ui_messageOutputContainer.scrollHeight};Blast.Ui.addElementToOutputContainer=module$contents$Blast$Ui_addElementToOutputContainer;
const module$contents$Blast$Ui_addMessage=function(a,b){let c="media/logo-512x512.png";window.location.href.includes("mobile")&&(c="../"+c);document.hasFocus()||navigator.serviceWorker.ready.then(function(g){g.showNotification("Blast",{body:a,icon:c,vibrate:[200,100,200,100,200,100,200]})});const d=document.createElement("div");d.classList.add("message");b&&d.classList.add(`${b}-message`);d.id="message-"+module$contents$Blast$Ui_messageCounter_++;var f=document.createTextNode(a);d.appendChild(f);
f=document.createElement("span");f.classList.add("time");f.innerHTML=(new Date).toLocaleTimeString();d.appendChild(f);f=function(){document.getElementById("debugModal").style.display="block";const g=document.getElementById("debug-tbody");g.innerHTML="";var h=document.createElement("tr");h.innerHTML=`<td>BLAST</td><td>${rev}</td>`;g.appendChild(h);for(const k in navigator)if("string"===typeof navigator[k]){h=document.createElement("tr");const l=document.createElement("td"),m=document.createElement("td");
l.innerHTML=k;m.innerHTML=navigator[k];h.appendChild(l);h.appendChild(m);g.appendChild(h)}};if("error"===b){b=document.createElement("span");b.classList.add("debug-info");const g=document.createElement("a");g.innerHTML="show debug info";g.href="#";g.onclick=f;b.appendChild(g);d.appendChild(b)}module$contents$Blast$Ui_addElementToOutputContainer(d)};module$contents$Blast$Interpreter_setStdError(a=>module$contents$Blast$Ui_addMessage(a,"error"));
module$contents$Blast$Interpreter_setStdInfo(a=>module$contents$Blast$Ui_addMessage(a,"info"));module$contents$Blast$Interpreter_setStdOut(a=>module$contents$Blast$Ui_addMessage(a));
const module$contents$Blast$Ui_tabClick_=function(a){for(var b of module$contents$Blast$Ui_TABS_){const c=document.getElementById("tab_"+b);c.classList.add("taboff");c.classList.remove("tabon");document.getElementById("content_"+b).style.visibility="hidden"}module$contents$Blast$Ui_selected_=a;b=document.getElementById("tab_"+a);b.classList.remove("taboff");b.classList.add("tabon");document.getElementById("content_"+a).style.visibility="visible";Blockly.svgResize(module$contents$Blast$Ui_workspace)},
module$contents$Blast$Ui_renderContent_=function(){var a=document.getElementById("content_xml"),b=Blockly.Xml.workspaceToDom(module$contents$Blast$Ui_workspace);b=Blockly.Xml.domToPrettyText(b);a.value=b;a.focus();a=document.getElementById("content_javascript");a.textContent=module$contents$Blast$Interpreter_getLatestCode().replace(/highlightBlock\('.*'\);\n/gm,"");a.className=a.className.replace("prettyprinted","");"object"==typeof PR&&PR.prettyPrint()},module$contents$Blast$Ui_addToLog=function(a,
b,c){const d=document.getElementById("content_deviceLogs"),f=document.createElement("div");f.className="logItem";if(b){const g=document.createElement("span");g.classList.add("log-adapter");"bluetooth"===b.toLowerCase()?(g.textContent="Bluetooth",g.classList.add("log-bluetooth")):"HID"===b.toUpperCase()?(g.textContent="HID",g.classList.add("log-hid")):"eddystone"===b.toLowerCase()?(g.textContent="Eddystone",g.classList.add("log-eddystone")):g.textContent=b;f.appendChild(g)}c&&(b=document.createElement("span"),
b.classList.add("log-device"),b.textContent=c,f.appendChild(b));c=new Date;c="["+(("0"+c.getHours()).slice(-2)+":"+("0"+c.getMinutes()).slice(-2)+":"+("0"+c.getSeconds()).slice(-2))+"] ";b=document.createElement("span");b.classList.add("log-timestamp");b.textContent=c;f.appendChild(b);c=document.createElement("span");c.classList.add("log-message");c.innerHTML=a;f.appendChild(c);d.appendChild(f);d.scrollTop=d.scrollHeight};
module$contents$Blast$Things_setThingsLog((a,b,c)=>module$contents$Blast$Ui_addToLog(a,b,c));
const module$contents$Blast$Ui_ClearOutputContainer=function(){const a=module$contents$Blast$Ui_messageOutputContainer;for(;"clearOutputButton"!==a.lastChild.id;)a.removeChild(a.lastChild)},module$contents$Blast$Ui_ClearLog=function(){const a=document.getElementById("content_deviceLogs");for(;"clearDeviceLogsButton"!==a.lastChild.id;)a.removeChild(a.lastChild)},module$contents$Blast$Ui_importPrettify=function(){const a=document.createElement("script");a.setAttribute("src","https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js");
document.head.appendChild(a)},module$contents$Blast$Ui_init=function(a){module$contents$Blast$Ui_workspace=a;module$contents$Blast$Ui_runButton=document.getElementById("runButton");module$contents$Blast$Ui_messageOutputContainer=document.getElementById("msgOutputContainer");module$contents$Blast$Ui_statusContainer=document.getElementById("statusContainer");if(!window.location.href.includes("mobile")){module$contents$Blast$Ui_tabClick_(module$contents$Blast$Ui_selected_);for(const b of module$contents$Blast$Ui_TABS_)module$contents$Blast$Ui_bindClick("tab_"+
b,function(c){return function(){module$contents$Blast$Ui_tabClick_(c)}}(b));a=function(){for(const b of module$contents$Blast$Ui_TABS_){const c=document.getElementById("content_"+b);c.style.top="35px";c.style.left="0px";c.style.height=window.innerHeight-35+"px";c.style.width=window.innerWidth-450+"px"}module$contents$Blast$Ui_workspace&&module$contents$Blast$Ui_workspace.getToolbox().width&&(document.getElementById("tab_workspace").style.minWidth=module$contents$Blast$Ui_workspace.getToolbox().width-
38+"px");Blockly.svgResize(module$contents$Blast$Ui_workspace)};window.addEventListener("resize",a,!1);a();Blockly.svgResize(module$contents$Blast$Ui_workspace);module$contents$Blast$Ui_workspace.addChangeListener(function(b){b instanceof Blockly.Events.Ui||module$contents$Blast$Ui_renderContent_()});module$contents$Blast$Ui_bindClick("saveButton",()=>{module$contents$Blast$Storage_link(!0)});module$contents$Blast$Ui_bindClick("clearDeviceLogsButton",module$contents$Blast$Ui_ClearLog);module$contents$Blast$Ui_bindClick("clearOutputButton",
module$contents$Blast$Ui_ClearOutputContainer);window.setTimeout(module$contents$Blast$Ui_importPrettify,1);module$contents$Blast$Ui_setStatus(module$contents$Blast$Interpreter_statusValues.READY)}};Blast.Ui.initUi=module$contents$Blast$Ui_init;const module$contents$Blast_init=function(){if(!window.location.href.includes("mobile")){module$contents$Blast$Interpreter_initInterpreter();var a=module$contents$Blast$Interpreter_getWorkspace();module$contents$Blast$States$Interpreter_init(a);module$contents$Blast$Ui_init(a);module$contents$Blast$Ui_bindClick("UriLoadButton",module$contents$Blast$Storage_load);module$contents$Blast$Ui_bindClick("UriSaveButton",module$contents$Blast$Storage_link);document.getElementById("loadWorkspace-input").addEventListener("keyup",
b=>{13===b.keyCode&&module$contents$Blast$Storage_load()});a.registerToolboxCategoryCallback("THINGS",module$contents$Blast$Things_flyoutCategory);a.registerToolboxCategoryCallback("STATES",module$contents$Blast$States_flyoutCategory);module$contents$Blast$Interpreter_getStdInfo()("Actionblock output will be displayed here")}},module$contents$Blast_highlightBlock=function(a){module$contents$Blast$Interpreter_getWorkspace().highlightBlock(a)};
module$contents$Blast$Interpreter_apiFunctions.push(["highlightBlock",module$contents$Blast_highlightBlock]);window.addEventListener("load",module$contents$Blast_init);Blast.Eddystone={};
const module$contents$Blast$Eddystone_UUIDS={CONFIG_SERVICE:"a3c87500-8ed3-4bdf-8a39-a01bebede295",CAPABILITIES_CHARACTERISTIC:"a3c87501-8ed3-4bdf-8a39-a01bebede295",ACTIVE_SLOT_CHARACTERISTIC:"a3c87502-8ed3-4bdf-8a39-a01bebede295",ADVERTISING_INTERVAL_CHARACTERISTIC:"a3c87503-8ed3-4bdf-8a39-a01bebede295",RADIO_TX_POWER_CHARACTERISTIC:"a3c87504-8ed3-4bdf-8a39-a01bebede295",ADVERTISED_TX_POWER_CHARACTERISTIC:"a3c87505-8ed3-4bdf-8a39-a01bebede295",LOCK_STATE_CHARACTERISTIC:"a3c87506-8ed3-4bdf-8a39-a01bebede295",UNLOCK_STATE_CHARACTERISTIC:"a3c87507-8ed3-4bdf-8a39-a01bebede295",
PUBLIC_ECDH_KEY_CHARACTERISTIC:"a3c87508-8ed3-4bdf-8a39-a01bebede295",EID_IDENTITY_KEY_CHARACTERISTIC:"a3c87509-8ed3-4bdf-8a39-a01bebede295",ADV_SLOT_DATA_CHARACTERISTIC:"a3c8750a-8ed3-4bdf-8a39-a01bebede295",FACTORY_RESET_CHARACTERISTIC:"a3c8750b-8ed3-4bdf-8a39-a01bebede295",REMAIN_CONNECTABLE_CHARACTERISTIC:"a3c8750c-8ed3-4bdf-8a39-a01bebede295"};module$contents$Blast$Bluetooth_optionalServices.push(module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE);
const module$contents$Blast$Eddystone_getCapabilities=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const b=module$contents$Blast$Things_getThingsLog();b("Reading Eddystone capabilities...","Eddystone",a);var c=yield module$contents$Blast$Bluetooth_read(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.CAPABILITIES_CHARACTERISTIC);c=new Int8Array(c.buffer);const d=[];for(let f=6;f<c.length;f++){const g=d[d.length-1];if(g&&g>=
c[f])break;d.push(c[f])}c={specVersion:c[0],maxSlots:c[1],maxEidPerSlot:c[2],isVarriableAdvIntervalSupported:0!==(c[3]&1),isVariableTxPowerSupported:0!==(c[3]&2),isUIDSupported:0!==(c[5]&1),isURLSupported:0!==(c[5]&2),isTLMSupported:0!==(c[5]&4),isEIDSupported:0!==(c[5]&8),supportedTxPowerLevels:d};b(`Eddystone capabilities: <code>${JSON.stringify(c)}</code>`,"Eddystone",a);return c})},module$contents$Blast$Eddystone_getActiveSlot=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const b=
module$contents$Blast$Things_getThingsLog();b("Reading Eddystone active slot...","Eddystone",a);const c=yield module$contents$Blast$Bluetooth_readNumber(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.ACTIVE_SLOT_CHARACTERISTIC);b(`Got Eddystone active slot: <code>${c}</code>`,"Eddystone",a);return c})};Blast.Eddystone.getActiveSlot=module$contents$Blast$Eddystone_getActiveSlot;
const module$contents$Blast$Eddystone_setActiveSlot=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=module$contents$Blast$Things_getThingsLog();c(`Setting Eddystone active slot to <code>${b}</code>...`,"Eddystone",a);const d=yield module$contents$Blast$Eddystone_getCapabilities(a);(0>b||b>=d.maxSlots)&&module$contents$Blast$Interpreter_throwError(`Eddystone slot is not valid.
         On this device the slot must be between 0 and ${d.maxSlots-1}.`);yield module$contents$Blast$Bluetooth_writeWithResponse(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.ACTIVE_SLOT_CHARACTERISTIC,b.toString(16));c(`Eddystone active slot set to <code>${b}</code>`,"Eddystone",a)})};Blast.Eddystone.setActiveSlot=module$contents$Blast$Eddystone_setActiveSlot;
const module$contents$Blast$Eddystone_getAdvertisingInterval=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const b=module$contents$Blast$Things_getThingsLog();b("Reading Eddystone advertising interval...","Eddystone",a);const c=yield module$contents$Blast$Bluetooth_readNumber(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.ADVERTISING_INTERVAL_CHARACTERISTIC);b(`Got Eddystone advertising interval: <code>${c}</code>`,"Eddystone",
a);return c})};Blast.Eddystone.getAdvertisingInterval=module$contents$Blast$Eddystone_getAdvertisingInterval;
const module$contents$Blast$Eddystone_setAdvertisingInterval=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=module$contents$Blast$Things_getThingsLog();c(`Setting Eddystone advertising interval to <code>${b}</code>...`,"Eddystone",a);yield module$contents$Blast$Bluetooth_writeWithResponse(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.ADVERTISING_INTERVAL_CHARACTERISTIC,b.toString(16));c(`Eddystone advertising interval set to <code>${b}</code>`,
"Eddystone",a)})};Blast.Eddystone.setAdvertisingInterval=module$contents$Blast$Eddystone_setAdvertisingInterval;
const module$contents$Blast$Eddystone_getTxPowerLevel=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const b=module$contents$Blast$Things_getThingsLog();b("Reading Eddystone TX power level...","Eddystone",a);const c=yield module$contents$Blast$Bluetooth_readNumber(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.RADIO_TX_POWER_CHARACTERISTIC);b(`Got Eddystone TX power level: <code>${c}</code>`,"Eddystone",a);return c})};
Blast.Eddystone.getTxPowerLevel=module$contents$Blast$Eddystone_getTxPowerLevel;const module$contents$Blast$Eddystone_setTxPowerLevel=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=module$contents$Blast$Things_getThingsLog();c(`Setting Eddystone TX power level to <code>${b}</code>...`,"Eddystone",a);const d=yield module$contents$Blast$Eddystone_getCapabilities(a);-1===d.supportedTxPowerLevels.indexOf(b)?module$contents$Blast$Interpreter_throwError(`Eddystone TX power level is not valid.
         On this device the TX power level must be one of ${d.supportedTxPowerLevels}.`):(yield module$contents$Blast$Bluetooth_writeWithResponse(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.RADIO_TX_POWER_CHARACTERISTIC,b.toString(16)),c(`Eddystone TX power level set to <code>${b}</code>`,"Eddystone",a))})};Blast.Eddystone.setTxPowerLevel=module$contents$Blast$Eddystone_setTxPowerLevel;
const module$contents$Blast$Eddystone_getAdvertisedTxPower=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const b=module$contents$Blast$Things_getThingsLog();b("Reading Eddystone advertised TX power...","Eddystone",a);const c=yield module$contents$Blast$Bluetooth_readNumber(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.ADVERTISED_TX_POWER_CHARACTERISTIC);b(`Got Eddystone advertised TX power: <code>${c}</code>`,"Eddystone",
a);return c})};Blast.Eddystone.getAdvertisedTxPower=module$contents$Blast$Eddystone_getAdvertisedTxPower;
const module$contents$Blast$Eddystone_setAdvertisedTxPower=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=module$contents$Blast$Things_getThingsLog();c(`Setting Eddystone advertised TX power to <code>${b}</code>...`,"Eddystone",a);yield module$contents$Blast$Bluetooth_writeWithResponse(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.ADVERTISED_TX_POWER_CHARACTERISTIC,b.toString(16));c(`Eddystone advertised TX power set to <code>${b}</code>`,
"Eddystone",a)})};Blast.Eddystone.setAdvertisedTxPower=module$contents$Blast$Eddystone_setAdvertisedTxPower;
const module$contents$Blast$Eddystone_getLockState=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const b=module$contents$Blast$Things_getThingsLog();b("Reading Eddystone lock state...","Eddystone",a);const c=yield module$contents$Blast$Bluetooth_readNumber(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.LOCK_STATE_CHARACTERISTIC);b(`Got Eddystone lock state: <code>${c}</code>`,"Eddystone",a);return c})};
Blast.Eddystone.getLockState=module$contents$Blast$Eddystone_getLockState;
const module$contents$Blast$Eddystone_getPublicECDHKey=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const b=module$contents$Blast$Things_getThingsLog();b("Reading Eddystone public ECDH key...","Eddystone",a);const c=yield module$contents$Blast$Bluetooth_readHex(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.PUBLIC_ECDH_KEY_CHARACTERISTIC);b(`Got Eddystone public ECDH key: <code>${c}</code>`,"Eddystone",a);return c})};
Blast.Eddystone.getPublicECDHKey=module$contents$Blast$Eddystone_getPublicECDHKey;
const module$contents$Blast$Eddystone_getAdvertisingData=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){var b=module$contents$Blast$Things_getThingsLog();b("Reading Eddystone advertising data...","Eddystone",a);const c=function(h){const k=parseInt(h.substring(2,4),16),l=h.substring(4,24);h=h.substring(25,37);return{frameType:"UID",txPower:k,namespace:l,instance:h}},d=function(h){const k=parseInt(h.substring(2,4),16);switch(h.substring(4,6)){case "00":var l="http://www.";
break;case "01":l="https://www.";break;case "02":l="http://";break;case "03":l="https://";break;default:module$contents$Blast$Interpreter_throwError("Eddystone URL scheme is not valid.");return}const m=".com/ .org/ .edu/ .net/ .info/ .biz/ .gov/ .com .org .edu .net .info .biz .gov".split(" ");h=h.substring(6,h.length);for(let p=0;p<h.length;p+=2){const n=parseInt(h.substring(p,p+2),16);l=n<m.length?l+m[n]:l+String.fromCharCode(n)}return{frameType:"URL",txPower:k,url:l}},f=function(h){const k=parseInt(h.substring(4,
8),16),l=parseInt(h.substring(8,10),16)+parseInt(h.substring(10,12),16)/100,m=parseInt(h.substring(12,20),16);h=parseInt(h.substring(20,28),16);return{frameType:"TLM",batteryVoltage:k,beaconTemperature:l,pduCount:m,timeSinceReboot:h}},g=yield module$contents$Blast$Bluetooth_readHex(a,module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.ADV_SLOT_DATA_CHARACTERISTIC);b(`Got Eddystone advertising data: <code>${g}</code>`,"Eddystone",a);switch(g.substring(0,2)){case "00":return b=
c(g),b.namespace+b.instance;case "10":return b=d(g),b.url;case "20":return b=f(g),b.beaconTemperature;case "30":module$contents$Blast$Interpreter_throwError("EID frame type is not supported by blast.");break;default:module$contents$Blast$Interpreter_throwError("Eddystone frame type is not valid.")}})};Blast.Eddystone.getAdvertisingData=module$contents$Blast$Eddystone_getAdvertisingData;
const module$contents$Blast$Eddystone_setAdvertisingData=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const d=module$contents$Blast$Things_getThingsLog();d("Set Eddystone advertising data...","Eddystone",a);if("URL"===b){{var f=["http://www.","https://www.","http://","https://"];var g=".com/ .org/ .edu/ .net/ .info/ .biz/ .gov/ .com .org .edu .net .info .biz .gov".split(" ");const k=[];let l=0;const m=new TextEncoder("utf-8");for(var h=0;h<f.length;h++)if(c.startsWith(f[h])){k.push(h);
l=f[h].length;break}for(;l<c.length;){f=l;for(h=0;h<g.length;h++)if(c.startsWith(g[h],l)){k.push(h);l+=g[h].length;break}f===l&&(k.push(m.encode(c[l])[0]),l++)}18<k.length?(module$contents$Blast$Interpreter_throwError("URL is too long."),g=void 0):(k.splice(0,0,16),g=new Uint8Array(k))}}else if("UID"===b){if(!/^[0-9A-Fa-f]{32}$/.test(c)){module$contents$Blast$Interpreter_throwError("Eddystone UID must be 32 hexadecimal characters.");return}g="0x00"+c}g=yield module$contents$Blast$Bluetooth_writeWithResponse(a,
module$contents$Blast$Eddystone_UUIDS.CONFIG_SERVICE,module$contents$Blast$Eddystone_UUIDS.ADV_SLOT_DATA_CHARACTERISTIC,g);d(`Eddystone advertising data set to <code>${c}</code>`,"Eddystone",a);return g})};Blast.Eddystone.setAdvertisingData=module$contents$Blast$Eddystone_setAdvertisingData;var module$exports$Blast$blocks$colours={};const module$contents$Blast$blocks$colours_COLOUR_RGB_XML='\n<block type="colour_rgb">\n    <value name="RED">\n        <block type="math_number">\n            <field name="NUM">100</field>\n        </block>\n    </value>\n    <value name="GREEN">\n        <block type="math_number">\n            <field name="NUM">50</field>\n        </block>\n    </value>\n    <value name="BLUE">\n        <block type="math_number">\n            <field name="NUM">0</field>\n        </block>\n    </value>\n</block>';
module$contents$Blast$Toolbox_addBlock("colour_rgb","colours",module$contents$Blast$blocks$colours_COLOUR_RGB_XML);const module$contents$Blast$blocks$colours_COLOUR_BLEND_XML='\n<block type="colour_blend">\n    <value name="COLOUR1">\n        <block type="colour_picker">\n            <field name="COLOUR">#ff0000</field>\n        </block>\n    </value>\n    <value name="COLOUR2">\n        <block type="colour_picker">\n            <field name="COLOUR">#3333ff</field>\n        </block>\n    </value>\n    <value name="RATIO">\n        <block type="math_number">\n            <field name="NUM">50</field>\n        </block>\n    </value>\n</block>';
module$contents$Blast$Toolbox_addBlock("colour_blend","colours",module$contents$Blast$blocks$colours_COLOUR_BLEND_XML);var module$exports$Blast$blocks$control_flow={};Blockly.Blocks.repeat=Blockly.Blocks.controls_repeat_ext;Blockly.Blocks["for"]=Blockly.Blocks.controls_for;Blockly.Blocks.while_until=Blockly.Blocks.controls_whileUntil;Blockly.Blocks.break_continue=Blockly.Blocks.controls_flow_statements;Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.LOOP_TYPES.push("repeat","while_until","for");const module$contents$Blast$blocks$control_flow_REPEAT_XML='\n<block type="repeat">\n  <value name="TIMES">\n    <block type="math_number">\n      <field name="NUM">10</field>\n    </block>\n  </value>\n</block>';
module$contents$Blast$Toolbox_addBlock("repeat","Control Flow",module$contents$Blast$blocks$control_flow_REPEAT_XML);const module$contents$Blast$blocks$control_flow_FOR_XML='\n<block type="for">\n  <value name="FROM">\n    <block type="math_number">\n      <field name="NUM">0</field>\n    </block>\n  </value>\n  <value name="TO">\n    <block type="math_number">\n      <field name="NUM">5</field>\n    </block>\n  </value>\n  <value name="BY">\n    <block type="math_number">\n      <field name="NUM">1</field>\n    </block>\n  </value>\n</block>';
module$contents$Blast$Toolbox_addBlock("for","Control Flow",module$contents$Blast$blocks$control_flow_FOR_XML);
Blockly.Blocks.conditional_statement={init:function(){this.appendValueInput("IF0").appendField("%{BKY_CONTROLS_IF_MSG_IF}").setCheck("Boolean");this.appendStatementInput("DO0").appendField("%{BKY_CONTROLS_IF_MSG_THEN}");this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setHelpUrl("%{BKY_CONTROLS_IF_HELPURL}");this.setColour(120);this.setMutator(new Blockly.Mutator(["controls_if_elseif","controls_if_else"]));this.setTooltip(function(){if(this.elseifCount_||this.elseCount_){if(!this.elseifCount_&&
this.elseCount_)return Blockly.Msg.CONTROLS_IF_TOOLTIP_2;if(this.elseifCount_&&!this.elseCount_)return Blockly.Msg.CONTROLS_IF_TOOLTIP_3;if(this.elseifCount_&&this.elseCount_)return Blockly.Msg.CONTROLS_IF_TOOLTIP_4}else return Blockly.Msg.CONTROLS_IF_TOOLTIP_1;return""}.bind(this))},elseifCount_:0,elseCount_:0,suppressPrefixSuffix:!0,mutationToDom:function(){if(!this.elseifCount_&&!this.elseCount_)return null;const a=Blockly.utils.xml.createElement("mutation");this.elseifCount_&&a.setAttribute("elseif",
this.elseifCount_);this.elseCount_&&a.setAttribute("else",1);return a},domToMutation:function(a){this.elseifCount_=parseInt(a.getAttribute("elseif"),10)||0;this.elseCount_=parseInt(a.getAttribute("else"),10)||0;this.rebuildShape_()},decompose:function(a){const b=a.newBlock("controls_if_if");b.initSvg();let c=b.nextConnection;for(let d=1;d<=this.elseifCount_;d++){const f=a.newBlock("controls_if_elseif");f.initSvg();c.connect(f.previousConnection);c=f.nextConnection}this.elseCount_&&(a=a.newBlock("controls_if_else"),
a.initSvg(),c.connect(a.previousConnection));return b},compose:function(a){a=a.nextConnection.targetBlock();this.elseCount_=this.elseifCount_=0;const b=[null],c=[null];let d=null;for(;a&&!a.isInsertionMarker();){switch(a.type){case "controls_if_elseif":this.elseifCount_++;b.push(a.valueConnection_);c.push(a.statementConnection_);break;case "controls_if_else":this.elseCount_++;d=a.statementConnection_;break;default:throw new TypeError("Unknown block type: "+a.type);}a=a.nextConnection&&a.nextConnection.targetBlock()}this.updateShape_();
this.reconnectChildBlocks_(b,c,d)},saveConnections:function(a){a=a.nextConnection.targetBlock();let b=1;for(;a;){switch(a.type){case "controls_if_elseif":const c=this.getInput("IF"+b);let d=this.getInput("DO"+b);a.valueConnection_=c&&c.connection.targetConnection;a.statementConnection_=d&&d.connection.targetConnection;b++;break;case "controls_if_else":d=this.getInput("ELSE");a.statementConnection_=d&&d.connection.targetConnection;break;default:throw new TypeError("Unknown block type: "+a.type);}a=
a.nextConnection&&a.nextConnection.targetBlock()}},rebuildShape_:function(){const a=[null],b=[null];let c=null;this.getInput("ELSE")&&(c=this.getInput("ELSE").connection.targetConnection);let d=1;for(;this.getInput("IF"+d);){const f=this.getInput("IF"+d),g=this.getInput("DO"+d);a.push(f.connection.targetConnection);b.push(g.connection.targetConnection);d++}this.updateShape_();this.reconnectChildBlocks_(a,b,c)},updateShape_:function(){this.getInput("ELSE")&&this.removeInput("ELSE");let a=1;for(;this.getInput("IF"+
a);)this.removeInput("IF"+a),this.removeInput("DO"+a),a++;for(a=1;a<=this.elseifCount_;a++)this.appendValueInput("IF"+a).setCheck("Boolean").appendField(Blockly.Msg.CONTROLS_IF_MSG_ELSEIF),this.appendStatementInput("DO"+a).appendField(Blockly.Msg.CONTROLS_IF_MSG_THEN);this.elseCount_&&this.appendStatementInput("ELSE").appendField(Blockly.Msg.CONTROLS_IF_MSG_ELSE)},reconnectChildBlocks_:function(a,b,c){for(let d=1;d<=this.elseifCount_;d++)Blockly.Mutator.reconnect(a[d],this,"IF"+d),Blockly.Mutator.reconnect(b[d],
this,"DO"+d);Blockly.Mutator.reconnect(c,this,"ELSE")}};Blockly.Blocks.wait_seconds={init:function(){this.appendValueInput("SECONDS").appendField("wait").setCheck("Number");this.appendDummyInput().appendField("seconds");this.setColour(120);this.setTooltip("Wait x seconds before executing the next block.");this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setHelpUrl("")}};const module$contents$Blast$blocks$control_flow_WAIT_SECONDS_XML='\n<block type="wait_seconds">\n  <value name="SECONDS">\n    <block type="math_number">\n      <field name="NUM">1</field>\n    </block>\n  </value>\n</block>\n';
module$contents$Blast$Toolbox_addBlock("wait_seconds","Control Flow",module$contents$Blast$blocks$control_flow_WAIT_SECONDS_XML);Blockly.Blocks.controls_if_if={init:function(){this.appendDummyInput().appendField("%{BKY_CONTROLS_IF_IF_TITLE_IF}");this.setNextStatement(!0,null);this.contextMenu=!1;this.setColour(120);this.setTooltip("%{BKY_CONTROLS_IF_IF_TOOLTIP}")}};
Blockly.Blocks.controls_if_elseif={init:function(){this.appendDummyInput().appendField("%{BKY_CONTROLS_IF_ELSEIF_TITLE_ELSEIF}");this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.contextMenu=!1;this.setColour(120);this.setTooltip("%{BKY_CONTROLS_IF_ELSEIF_TOOLTIP}")}};Blockly.Blocks.controls_if_else={init:function(){this.appendDummyInput().appendField("%{BKY_CONTROLS_IF_ELSE_TITLE_ELSE}");this.setPreviousStatement(!0,null);this.contextMenu=!1;this.setColour(120);this.setTooltip("%{BKY_CONTROLS_IF_ELSE_TOOLTIP}")}};var module$exports$Blast$blocks$events={};
Blockly.Blocks.state_definition={init:function(){var a=module$contents$Blast$States_findLegalName("",this);a=new Blockly.FieldTextInput(a,module$contents$Blast$States_rename);a.setSpellcheck(!1);this.appendValueInput("state_condition").setCheck("Boolean").appendField("define state").appendField(a,"NAME").appendField("condition");this.setColour(180);this.setTooltip("");this.setHelpUrl("")},getStateDef:function(){const a=this.getFieldValue("state_condition");return[this.getFieldValue("NAME"),a]},getConditions:function(){return this.getFieldValue("state_condition")}};
Blockly.Blocks.event={init:function(){this.appendDummyInput().appendField("when blast").appendField(new Blockly.FieldDropdown([["enters","ENTERS"],["exits","EXITS"]]),"entersExits").appendField("state").appendField(new Blockly.FieldLabelSerializable(""),"NAME");this.appendStatementInput("statements").setCheck(null);this.setColour(180);this.setTooltip("");this.setHelpUrl("")},getStateName:function(){return this.getFieldValue("NAME")},renameState:function(a,b){Blockly.Names.equals(a,this.getStateName())&&
this.setFieldValue(b,"NAME")},mutationToDom:function(){const a=Blockly.utils.xml.createElement("mutation");a.setAttribute("name",this.getStateName());return a},domToMutation:function(a){a=a.getAttribute("name");this.renameState(this.getStateName(),a)},onchange:function(a){if(this.workspace&&!this.workspace.isFlyout&&a.recordUndo)if(a.type==Blockly.Events.BLOCK_CREATE&&-1!=a.ids.indexOf(this.id)){var b=this.getStateName();(b=module$contents$Blast$States_getDefinition(b,this.workspace))&&b.type!=this.defType_&&
(b=null);if(!b){Blockly.Events.setGroup(a.group);a=Blockly.utils.xml.createElement("xml");b=Blockly.utils.xml.createElement("block");b.setAttribute("type",this.defType_);var c=this.getRelativeToSurfaceXY(),d=c.y+2*Blockly.SNAP_RADIUS;b.setAttribute("x",c.x+Blockly.SNAP_RADIUS*(this.RTL?-1:1));b.setAttribute("y",d);c=this.mutationToDom();b.appendChild(c);c=Blockly.utils.xml.createElement("field");c.setAttribute("name","NAME");d=this.getStateName();d||(d=module$contents$Blast$States_findLegalName("",
this),this.renameState("",d));c.appendChild(Blockly.utils.xml.createTextNode(d));b.appendChild(c);a.appendChild(b);Blockly.Xml.domToWorkspace(a,this.workspace);Blockly.Events.setGroup(!1)}}else a.type==Blockly.Events.BLOCK_DELETE?(b=this.getStateName(),module$contents$Blast$States_getDefinition(b,this.workspace)||(Blockly.Events.setGroup(a.group),this.dispose(!0),Blockly.Events.setGroup(!1))):a.type==Blockly.Events.CHANGE&&"disabled"==a.element&&(b=this.getStateName(),(b=module$contents$Blast$States_getDefinition(b,
this.workspace))&&b.id==a.blockId&&((b=Blockly.Events.getGroup())&&console.log("Saw an existing group while responding to a definition change"),Blockly.Events.setGroup(a.group),a.newValue?(this.previousEnabledState_=this.isEnabled(),this.setEnabled(!1)):this.setEnabled(this.previousEnabledState_),Blockly.Events.setGroup(b)))},onDispose:function(a){a.type===Blockly.Events.BLOCK_DELETE&&a.type===Blockly.Events.BLOCK_DELETE&&-1!==a.ids.indexOf(this.id)&&module$contents$Blast$States$Interpreter_removeEventCode(this.event.blockId)},
defType_:"state_definition"};
Blockly.Blocks.event_every_minutes={init:function(){this.appendValueInput("value").setCheck("Number").appendField("every");this.appendDummyInput("units").appendField(new Blockly.FieldDropdown([["seconds","seconds"],["minutes","minutes"],["hours","hours"]]),"units");this.appendStatementInput("statements").appendField("do");this.setColour(180);this.setTooltip("");this.setHelpUrl("")},addEvent:function(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){module$contents$Blast$Interpreter_eventsInWorkspace.push(a.id);module$contents$Blast$Interpreter_getWorkspace().addChangeListener(b=>
a.onDispose(b))})},onchange:function(){this.isInFlyout||this.requested||!this.rendered||this.addEvent()},onDispose:function(a){a.type===Blockly.Events.BLOCK_DELETE&&a.type===Blockly.Events.BLOCK_DELETE&&-1!==a.ids.indexOf(this.id)&&this.removeFromEvents()},removeFromEvents:function(){const a=module$contents$Blast$Interpreter_eventsInWorkspace.indexOf(this.id);-1!==a&&module$contents$Blast$Interpreter_eventsInWorkspace.splice(a,1)}};var module$exports$Blast$blocks$functions={};
Blockly.Blocks.procedures_defeval={init:function(){var a=Blockly.Procedures.findLegalName("",this);a=new Blockly.FieldTextInput(a,Blockly.Procedures.rename);a.setSpellcheck(!1);this.appendDummyInput().appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE).appendField(a,"NAME").appendField("","PARAMS");this.appendDummyInput().appendField(new Blockly.FieldMultilineInput("return 2 + 2;"),"STACK");this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"]));(this.workspace.options.comments||this.workspace.options.parentWorkspace&&
this.workspace.options.parentWorkspace.options.comments)&&Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT&&this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);this.setStyle("procedure_blocks");this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);this.arguments_=[];this.argumentVarModels_=[];this.statementConnection_=null},updateParams_:Blockly.Blocks.procedures_defnoreturn.updateParams_,mutationToDom:Blockly.Blocks.procedures_defnoreturn.mutationToDom,
domToMutation:function(a){this.arguments_=[];this.argumentVarModels_=[];for(let c=0,d;d=a.childNodes[c];c++)if("arg"==d.nodeName.toLowerCase()){const f=d.getAttribute("name");var b=d.getAttribute("varid")||d.getAttribute("varId");this.arguments_.push(f);b=Blockly.Variables.getOrCreateVariablePackage(this.workspace,b,f,"");null!=b?this.argumentVarModels_.push(b):console.log("Failed to create a variable with name "+f+", ignoring.")}this.updateParams_();Blockly.Procedures.mutateCallers(this)},decompose:Blockly.Blocks.procedures_defnoreturn.decompose,
compose:function(a){this.arguments_=[];this.paramIds_=[];this.argumentVarModels_=[];for(a=a.getInputTargetBlock("STACK");a&&!a.isInsertionMarker();){var b=a.getFieldValue("NAME");this.arguments_.push(b);b=this.workspace.getVariable(b,"");this.argumentVarModels_.push(b);this.paramIds_.push(a.id);a=a.nextConnection&&a.nextConnection.targetBlock()}this.updateParams_();Blockly.Procedures.mutateCallers(this)},getProcedureDef:function(){return[this.getFieldValue("NAME"),this.arguments_,!0]},getVars:Blockly.Blocks.procedures_defnoreturn.getVars,
getVarModels:Blockly.Blocks.procedures_defnoreturn.getVarModels,renameVarById:Blockly.Blocks.procedures_defnoreturn.renameVarById,updateVarName:Blockly.Blocks.procedures_defnoreturn.updateVarName,displayRenamedVar_:Blockly.Blocks.procedures_defnoreturn.displayRenamedVar_,customContextMenu:Blockly.Blocks.procedures_defnoreturn.customContextMenu,callType_:"procedures_callreturn"};
Blockly.Blocks.procedures_calleval={init:function(){this.appendDummyInput("TOPROW").appendField("","NAME");this.setOutput(!0);this.setStyle("procedure_blocks");this.setHelpUrl(Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL);this.arguments_=[];this.argumentVarModels_=[];this.quarkConnections_={};this.quarkIds_=null;this.previousEnabledState_=!0},getProcedureCall:Blockly.Blocks.procedures_callnoreturn.getProcedureCall,renameProcedure:Blockly.Blocks.procedures_callnoreturn.renameProcedure,setProcedureParameters_:Blockly.Blocks.procedures_callnoreturn.setProcedureParameters_,
updateShape_:Blockly.Blocks.procedures_callnoreturn.updateShape_,mutationToDom:Blockly.Blocks.procedures_callnoreturn.mutationToDom,domToMutation:Blockly.Blocks.procedures_callnoreturn.domToMutation,getVars:Blockly.Blocks.procedures_callnoreturn.getVars,getVarModels:Blockly.Blocks.procedures_callnoreturn.getVarModels,onchange:Blockly.Blocks.procedures_callnoreturn.onchange,customContextMenu:Blockly.Blocks.procedures_callnoreturn.customContextMenu,defType_:"procedures_defeval"};
Blockly.Procedures.allProcedures=function(a){const b=a.getBlocksByType("procedures_defnoreturn",!1).map(function(d){return d.getProcedureDef()}),c=a.getBlocksByType("procedures_defreturn",!1).map(function(d){return d.getProcedureDef()});a=a.getBlocksByType("procedures_defeval",!1).map(function(d){return d.getProcedureDef()});b.sort(Blockly.Procedures.procTupleComparator_);c.sort(Blockly.Procedures.procTupleComparator_);a.sort(Blockly.Procedures.procTupleComparator_);return[b,c,a]};
Blockly.Procedures.flyoutCategory=function(a){function b(g,h){for(const l of g){var k=l[0];const m=l[1];g=Blockly.utils.xml.createElement("block");g.setAttribute("type",h);g.setAttribute("gap",16);const p=Blockly.utils.xml.createElement("mutation");p.setAttribute("name",k);g.appendChild(p);for(const n of m)k=Blockly.utils.xml.createElement("arg"),k.setAttribute("name",n),p.appendChild(k);c.push(g)}}const c=[];if(Blockly.Blocks.procedures_defnoreturn){var d=Blockly.utils.xml.createElement("block");
d.setAttribute("type","procedures_defnoreturn");d.setAttribute("gap",16);var f=Blockly.utils.xml.createElement("field");f.setAttribute("name","NAME");f.appendChild(Blockly.utils.xml.createTextNode(Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE));d.appendChild(f);c.push(d)}Blockly.Blocks.procedures_defreturn&&(d=Blockly.utils.xml.createElement("block"),d.setAttribute("type","procedures_defreturn"),d.setAttribute("gap",16),f=Blockly.utils.xml.createElement("field"),f.setAttribute("name","NAME"),f.appendChild(Blockly.utils.xml.createTextNode(Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE)),
d.appendChild(f),c.push(d));Blockly.Blocks.procedures_ifreturn&&(d=Blockly.utils.xml.createElement("block"),d.setAttribute("type","procedures_ifreturn"),d.setAttribute("gap",16),c.push(d));Blockly.Blocks.procedures_defeval&&(d=Blockly.utils.xml.createElement("block"),d.setAttribute("type","procedures_defeval"),d.setAttribute("gap",16),f=Blockly.utils.xml.createElement("field"),f.setAttribute("name","NAME"),f.appendChild(Blockly.utils.xml.createTextNode(Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE)),
d.appendChild(f),c.push(d));c.length&&c[c.length-1].setAttribute("gap",24);a=Blockly.Procedures.allProcedures(a);b(a[0],"procedures_callnoreturn");b(a[1],"procedures_callreturn");b(a[2],"procedures_calleval");return c};Blockly.Procedures.getDefinition=function(a,b){b=b.getAllBlocks(!1);for(const c of b)if(c.getProcedureDef&&(b=c.getProcedureDef())&&Blockly.Names.equals(b[0],a))return c;return null};Blockly.Blocks.procedures_ifreturn.FUNCTION_TYPES.push("procedures_defeval");var module$exports$Blast$blocks$identifiers={};Blockly.Blocks.mac={init:function(){this.appendDummyInput().appendField("mac").appendField(new Blockly.FieldTextInput("deadbeef"),"MAC");this.setOutput(!0,"mac");this.setColour(60);this.setTooltip("");this.setHelpUrl("")}};Blockly.Blocks.uri={init:function(){this.appendDummyInput().appendField("URI").appendField(new Blockly.FieldTextInput("https://example.com"),"URI");this.setOutput(!0,"URI");this.setColour(60);this.setTooltip("");this.setHelpUrl("")}};
Blockly.Blocks.uri_from_string={init:function(){this.appendValueInput("URI").setCheck("String").appendField("URI from string");this.setOutput(!0,"URI");this.setColour(60);this.setTooltip("");this.setHelpUrl("")}};var module$exports$Blast$blocks$lists={};Blockly.Themes.Classic.blockStyles.list_blocks.colourPrimary=310;var module$exports$Blast$blocks$numbers={};Blockly.Blocks.number_value=Blockly.Blocks.math_number;Blockly.Blocks.number_arithmetic=Blockly.Blocks.math_arithmetic;Blockly.Blocks.number_single=Blockly.Blocks.math_single;Blockly.Blocks.number_trig=Blockly.Blocks.math_trig;Blockly.Blocks.number_constant=Blockly.Blocks.math_constant;Blockly.Blocks.number_property=Blockly.Blocks.math_number_property;Blockly.Blocks.number_round=Blockly.Blocks.math_round;Blockly.Blocks.number_on_list=Blockly.Blocks.math_on_list;
Blockly.Blocks.number_modulo=Blockly.Blocks.math_modulo;Blockly.Blocks.number_constrain=Blockly.Blocks.math_constrain;Blockly.Blocks.number_random=Blockly.Blocks.math_random_int;Blockly.Blocks.number_random_float=Blockly.Blocks.math_random_float;Blockly.Blocks.number_atan2=Blockly.Blocks.math_atan2;var module$exports$Blast$blocks$strings={};Blockly.Blocks.string=Blockly.Blocks.text;Blockly.Blocks.string_multiline=Blockly.Blocks.text_multiline;Blockly.Blocks.string_join=Blockly.Blocks.text_join;Blockly.Blocks.string_length=Blockly.Blocks.text_length;Blockly.Blocks.string_isEmpty=Blockly.Blocks.text_isEmpty;Blockly.Blocks.string_indexOf=Blockly.Blocks.text_indexOf;Blockly.Blocks.string_charAt=Blockly.Blocks.text_charAt;Blockly.Blocks.string_getSubstring=Blockly.Blocks.text_getSubstring;
Blockly.Blocks.string_changeCase=Blockly.Blocks.text_changeCase;Blockly.Blocks.string_trim=Blockly.Blocks.text_trim;Blockly.Blocks.string_count=Blockly.Blocks.text_count;Blockly.Blocks.string_replace=Blockly.Blocks.text_replace;Blockly.Blocks.string_reverse=Blockly.Blocks.text_reverse;Blockly.Blocks.string_showPrompt=Blockly.Blocks.text_prompt_ext;Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH="concatenate text";var module$exports$Blast$blocks$things={};Blockly.Blocks.things_webBluetooth={init:function(){this.appendDummyInput().appendField("webBluetooth device").appendField(new Blockly.FieldDropdown(module$contents$Blast$Things_getWebBluetoothDevices),"id");this.setOutput(!0,"Thing");this.setColour(60);this.setTooltip("");this.setHelpUrl("")}};
Blockly.Blocks.things_webHID={init:function(){this.appendDummyInput().appendField("HID device").appendField(new Blockly.FieldDropdown(module$contents$Blast$Things_getWebHIDDevices),"id");this.setOutput(!0,"Thing");this.setColour(60);this.setTooltip("");this.setHelpUrl("")}};var module$exports$Blast$generators$control_flow={};Blockly.JavaScript.repeat=Blockly.JavaScript.controls_repeat_ext;Blockly.JavaScript.while_until=Blockly.JavaScript.controls_whileUntil;Blockly.JavaScript["for"]=Blockly.JavaScript.controls_for;Blockly.JavaScript.break_continue=Blockly.JavaScript.controls_flow_statements;Blockly.JavaScript.conditional_statement=Blockly.JavaScript.controls_if;
Blockly.JavaScript.wait_seconds=function(a){return"waitForSeconds("+(Blockly.JavaScript.valueToCode(a,"SECONDS",Blockly.JavaScript.ORDER_ATOMIC)||0)+");\n"};const module$contents$Blast$generators$control_flow_waitForSeconds=function(a,b){setTimeout(b,1E3*a)};module$contents$Blast$Interpreter_asyncApiFunctions.push(["waitForSeconds",module$contents$Blast$generators$control_flow_waitForSeconds]);var module$exports$Blast$generators$events={};Blockly.JavaScript.state_definition=function(a){return null};
Blockly.JavaScript.event=function(a){const b=a.getFieldValue("entersExits");var c=a.getFieldValue("NAME");const d=Blockly.JavaScript.statementToCode(a,"statements");Blockly.JavaScript.definitions_.eventChecker="startEventChecker()";if(c=module$contents$Blast$States_getDefinition(c,module$contents$Blast$Interpreter_getWorkspace()))c=Blockly.JavaScript.valueToCode(c,"state_condition",Blockly.JavaScript.ORDER_NONE),"ENTERS"!=b&&(c=`!(${c})`),module$contents$Blast$States$Interpreter_addEventCode(a.id,
`if(eventChecker("${a.id}", ${c})) {
        setInterrupted(true);
        ${d} 
        setInterrupted(false);
      }`);return null};Blockly.JavaScript.event_every_minutes=function(a){const b=Blockly.JavaScript.valueToCode(a,"value",Blockly.JavaScript.ORDER_NONE)||0,c=a.getFieldValue("units"),d=Blockly.JavaScript.quote_(Blockly.JavaScript.statementToCode(a,"statements"));let f;"seconds"===c?f=b:"minutes"===c?f=60*b:"hours"===c&&(f=3600*b);Blockly.JavaScript.definitions_[a.id]=`addIntervalEvent(${f}, ${d});\n`;return null};
const module$contents$Blast$generators$events_addIntervalEvent=(a,b)=>{void 0===a||"number"!==typeof a||0>=a?module$contents$Blast$Interpreter_throwError("Timed event interval must be a number greater than 0."):(a=setInterval(function(){module$contents$Blast$Interpreter_setInterrupted(!1);const c=new Interpreter("");c.stateStack[0].scope=module$contents$Blast$Interpreter_getInterpreter().globalScope;c.appendCode(b);const d=function(){try{c.step()?setTimeout(d,5):module$contents$Blast$Interpreter_setInterrupted(!1)}catch(f){module$contents$Blast$Interpreter_throwError(`Error executing program:\n ${f}`),
console.error(f)}};d()},1E3*a),module$contents$Blast$Interpreter_intervalEvents.push(a))};module$contents$Blast$Interpreter_apiFunctions.push(["addIntervalEvent",module$contents$Blast$generators$events_addIntervalEvent]);var module$exports$Blast$generators$functions={};
Blockly.JavaScript.procedures_defeval=function(a){const b=Blockly.JavaScript.variableDB_.getName(a.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME);var c="";Blockly.JavaScript.STATEMENT_PREFIX&&(c+=Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_PREFIX,a));Blockly.JavaScript.STATEMENT_SUFFIX&&(c+=Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX,a));c&&(c=Blockly.JavaScript.prefixLines(c,Blockly.JavaScript.INDENT));let d="";Blockly.JavaScript.INFINITE_LOOP_TRAP&&(d=Blockly.JavaScript.prefixLines(Blockly.JavaScript.injectId(Blockly.JavaScript.INFINITE_LOOP_TRAP,
a),Blockly.JavaScript.INDENT));const f=a.getFieldValue("STACK")||"",g=[],h=a.getVars();for(let k=0;k<h.length;k++)g[k]=Blockly.JavaScript.variableDB_.getName(h[k],Blockly.VARIABLE_CATEGORY_NAME);c="function "+b+"("+g.join(", ")+") {\n"+c+d+f+"\n}";c=Blockly.JavaScript.scrub_(a,c);Blockly.JavaScript.definitions_["%"+b]=c;return null};Blockly.JavaScript.procedures_defnoreturn=Blockly.JavaScript.procedures_defreturn;
Blockly.JavaScript.procedures_calleval=function(a){const b=Blockly.JavaScript.variableDB_.getName(a.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME),c=[],d=a.getVars();for(let f=0;f<d.length;f++)c[f]=Blockly.JavaScript.valueToCode(a,"ARG"+f,Blockly.JavaScript.ORDER_NONE)||"null";return[b+"("+c.join(", ")+")",Blockly.JavaScript.ORDER_FUNCTION_CALL]};module$contents$Blast$Interpreter_apiFunctions.push(["log",console.log]);var module$exports$Blast$generators$identifiers={};Blockly.JavaScript.uri=function(a){return[Blockly.JavaScript.quote_(a.getFieldValue("URI")),Blockly.JavaScript.ORDER_NONE]};Blockly.JavaScript.uri_from_string=function(a){return[`convertToUri(${Blockly.JavaScript.valueToCode(a,"URI",Blockly.JavaScript.ORDER_NONE)})`,Blockly.JavaScript.ORDER_NONE]};const module$contents$Blast$generators$identifiers_convertToUri=function(a){try{new URL(a)}catch(b){module$contents$Blast$Interpreter_throwError("The given string is not a valid URI.")}return a};
module$contents$Blast$Interpreter_apiFunctions.push(["convertToUri",module$contents$Blast$generators$identifiers_convertToUri]);Blockly.JavaScript.mac=function(a){return[Blockly.JavaScript.quote_(a.getFieldValue("MAC")),Blockly.JavaScript.ORDER_NONE]};var module$exports$Blast$generators$numbers={};Blockly.JavaScript.number_value=Blockly.JavaScript.math_number;Blockly.JavaScript.number_arithmetic=Blockly.JavaScript.math_arithmetic;Blockly.JavaScript.number_single=Blockly.JavaScript.math_single;Blockly.JavaScript.number_trig=Blockly.JavaScript.math_trig;Blockly.JavaScript.number_constant=Blockly.JavaScript.math_constant;Blockly.JavaScript.number_property=Blockly.JavaScript.math_number_property;Blockly.JavaScript.number_round=Blockly.JavaScript.math_round;
Blockly.JavaScript.number_on_list=Blockly.JavaScript.math_on_list;Blockly.JavaScript.number_modulo=Blockly.JavaScript.math_modulo;Blockly.JavaScript.number_constrain=Blockly.JavaScript.math_constrain;Blockly.JavaScript.number_random=Blockly.JavaScript.math_random_int;Blockly.JavaScript.number_random_float=Blockly.JavaScript.math_random_float;Blockly.JavaScript.number_atan2=Blockly.JavaScript.math_atan2;var module$exports$Blast$generators$strings={};Blockly.JavaScript.string=Blockly.JavaScript.text;Blockly.JavaScript.string_multiline=Blockly.JavaScript.text_multiline;Blockly.JavaScript.string_join=Blockly.JavaScript.text_join;Blockly.JavaScript.string_length=Blockly.JavaScript.text_length;Blockly.JavaScript.string_isEmpty=Blockly.JavaScript.text_isEmpty;Blockly.JavaScript.string_indexOf=Blockly.JavaScript.text_indexOf;Blockly.JavaScript.string_charAt=Blockly.JavaScript.text_charAt;
Blockly.JavaScript.string_getSubstring=Blockly.JavaScript.text_getSubstring;Blockly.JavaScript.string_changeCase=Blockly.JavaScript.text_changeCase;Blockly.JavaScript.string_trim=Blockly.JavaScript.text_trim;Blockly.JavaScript.string_count=Blockly.JavaScript.text_count;Blockly.JavaScript.string_replace=Blockly.JavaScript.text_replace;Blockly.JavaScript.string_reverse=Blockly.JavaScript.text_reverse;Blockly.JavaScript.string_showPrompt=Blockly.JavaScript.text_prompt;
module$contents$Blast$Interpreter_apiFunctions.push(["prompt",prompt]);var module$exports$Blast$generators$things={};Blockly.JavaScript.things_webBluetooth=function(a){return[Blockly.JavaScript.quote_(a.getFieldValue("id")),Blockly.JavaScript.ORDER_NONE]};Blockly.JavaScript.things_webHID=function(a){return[Blockly.JavaScript.quote_(a.getFieldValue("id")),Blockly.JavaScript.ORDER_NONE]};var module$exports$Blast$blocks$blast={};
Blockly.Blocks.http_request={init:function(){this.appendValueInput("uri").appendField("send HTTP request to URI").setCheck("URI");this.appendDummyInput().appendField("output").appendField(new Blockly.FieldDropdown([["status","status"],["response","body"]]),"OUTPUT");this.appendDummyInput().appendField("method").appendField(new Blockly.FieldDropdown([["GET","GET"],["PUT","PUT"],["POST","POST"],["DELETE","DELETE"]],this.httpRequestValidator),"METHOD");this.appendValueInput("headers").appendField("headers").setCheck("String");this.appendValueInput("body").appendField("body").setCheck("String").setVisible(!1);
this.setOutput(!0,"String");this.setTooltip("Invokes a HTTP request.");this.setColour(0)},httpRequestValidator:function(a){this.getSourceBlock().updateInputs(a);return a},updateInputs:function(a){const b=this.getInput("body");"GET"==a?b.setVisible(!1):b.setVisible(!0)}};const module$contents$Blast$blocks$blast_HTTP_REQUEST_XML='\n<block type="http_request">\n  <value name="uri">\n    <block type="uri_from_string">\n      <value name="URI">\n        <block type="string">\n          <field name="TEXT">https://example.com</field>\n        </block>\n      </value>\n    </block>\n  </value>\n  <value name="headers">\n    <block type="string">\n      <field name="TEXT">"Content-Type": "application/json", "Accept": "application/json"</field>\n    </block>\n  </value>\n  <value name="body">\n    <block type="string_multiline">\n      <field name="TEXT">\n{\n  "object": {\n    "a": "b",\n    "c": "d",\n    "e": "f"\n  },\n  "array": [\n    1,\n    2\n  ],\n  "string": "Hello World"\n}\n      </field>\n    </block>\n  </value>\n</block>';
module$contents$Blast$Toolbox_addBlock("http_request","Requests and Queries",module$contents$Blast$blocks$blast_HTTP_REQUEST_XML);
Blockly.Blocks.sparql_query={init:function(){this.appendValueInput("uri").appendField("run SPARQL Query from URI").setCheck("URI");this.appendDummyInput().appendField("resource format").appendField(new Blockly.FieldDropdown([["JSON-LD","application/ld+json"],["Turtle (TriG)","application/trig"],["N-Quads","application/n-quads"]]),"format");this.appendDummyInput().appendField(new Blockly.FieldMultilineInput("SELECT *\n       WHERE { \n         ?s ?p ?o\n       }"),"query");this.setInputsInline(!1);
this.setColour(0);this.setOutput(!0,"Array");this.setTooltip("Executes a sparql query")}};module$contents$Blast$Toolbox_addBlock("sparql_query","Requests and Queries");
Blockly.Blocks.sparql_ask={init:function(){this.appendValueInput("uri").appendField("run SPARQL ASK Query from URI").setCheck("URI");this.appendDummyInput().appendField("resource format").appendField(new Blockly.FieldDropdown([["JSON-LD","application/ld+json"],["Turtle (TriG)","application/trig"],["N-Quads","application/n-quads"]]),"format");this.appendDummyInput().appendField(new Blockly.FieldMultilineInput("PREFIX sosa: <http://www.w3.org/ns/sosa/>\n     ASK \n     WHERE {\n       ?node sosa:hasSimpleResult ?rssiValue \n       FILTER (?rssiValue > -40)\n     }"),
"query");this.setInputsInline(!1);this.setOutput(!0,"Boolean");this.setTooltip("executes a sparql ASK query");this.setColour(0)}};module$contents$Blast$Toolbox_addBlock("sparql_ask","Requests and Queries");
Blockly.Blocks.display_text={init:function(){this.appendValueInput("text").setCheck("String Number Boolean URI Thing Array".split(" ")).appendField("display text:");this.setColour(0);this.setTooltip("Add text output to the container on the right.");this.setHelpUrl("");this.setPreviousStatement(!0,null);this.setNextStatement(!0,null)}};module$contents$Blast$Toolbox_addBlock("display_text","Actions");
Blockly.Blocks.display_table={init:function(){this.appendValueInput("table").setCheck(["Array"]).appendField("display table:");this.setColour(0);this.setTooltip("Add data output to the container on the right.");this.setHelpUrl("");this.setPreviousStatement(!0,null);this.setNextStatement(!0,null)}};module$contents$Blast$Toolbox_addBlock("display_table","Actions");
Blockly.Blocks.play_audio={init:function(){this.appendValueInput("URI").appendField("play audio from URI").setCheck("URI");this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(0);this.setTooltip("Plays an audio file from URI.");this.setHelpUrl("")}};module$contents$Blast$Toolbox_addBlock("play_audio","Actions");
Blockly.Blocks.capture_image={init:function(){this.appendDummyInput().appendField("capture image from camera");this.setOutput(!0,"Image");this.setColour(0);this.setTooltip("Captures an image from a camera.");this.setHelpUrl("")},onChange:function(){navigator.mediaDevices&&navigator.mediaDevices.getUserMedia||this.setWarningText("Your browser does not support mediaDevices.")}};module$contents$Blast$Toolbox_addBlock("capture_image","Actions");
Blockly.Blocks.display_image={init:function(){this.appendValueInput("image").setCheck("Image").appendField("display image");this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(0);this.setTooltip("Displays an image.");this.setHelpUrl("")}};module$contents$Blast$Toolbox_addBlock("display_image","Actions");
Blockly.Blocks.get_signal_strength_wb={init:function(){this.appendValueInput("Thing").setCheck("Thing").appendField("read signal-strength property of Bluetooth device");this.setOutput(!0,["String","Number"]);this.setColour(255);this.setTooltip("Reads the strength of the signal (rssiValue property) sent by a BLE device, measured at the at the BLAST client.");this.setHelpUrl("");this.firstTime=!0;this.deviceId=""},onchange:function(){!this.isInFlyout&&this.firstTime&&this.rendered&&(this.firstTime=
!1,navigator.bluetooth||(Blockly.alert("Webbluetooth is not supported by this browser.\n\n        Upgrade to Chrome version 85 or later."),this.dispose()))}};module$contents$Blast$Toolbox_addBlock("get_signal_strength_wb","Properties");
Blockly.Blocks.write_eddystone_property={init:function(){this.appendDummyInput("Property").appendField("write").appendField(new Blockly.FieldDropdown([["advertised tx power","advertisedTxPower"],["advertisement data","advertisementData"],["advertising interval","advertisingInterval"],["radio tx power","radioTxPower"]],this.propertyValidator),"Property").appendField("property at slot");this.appendValueInput("Slot").setCheck("Number");this.appendDummyInput("FrameType").appendField("frame type").appendField(new Blockly.FieldDropdown([["UID",
"UID"],["URL","URL"]],this.frameTypeValidator),"FrameType").setVisible(!1);this.appendValueInput("Value").appendField("value").setCheck("Number");this.appendValueInput("Thing").appendField("to Eddystone device").setCheck("Thing");this.setPreviousStatement(!0,null);this.setInputsInline(!0);this.setNextStatement(!0,null);this.setColour(255);this.setTooltip("Writes a property to an Eddystone device.");this.setHelpUrl("https://github.com/google/eddystone/tree/master/configuration-service")},propertyValidator:function(a){const b=
this.getSourceBlock(),c=b.getInput("FrameType");c.setVisible(!1);"advertisementData"==a?c.setVisible(!0):b.getInput("Value").setCheck("Number")},frameTypeValidator:function(a){const b=this.getSourceBlock();"UID"===a?b.getInput("Value").setCheck("String"):"URL"===a&&b.getInput("Value").setCheck("URI")}};const module$contents$Blast$blocks$blast_WRITE_EDDYSTONE_PROPERTY_XML='\n<block type="write_eddystone_property">\n  <value name="Slot">\n    <block type="math_number">\n      <field name="NUM">0</field>\n    </block>\n  </value>\n</block>';
module$contents$Blast$Toolbox_addBlock("write_eddystone_property","Properties",module$contents$Blast$blocks$blast_WRITE_EDDYSTONE_PROPERTY_XML);
Blockly.Blocks.read_eddystone_property={init:function(){this.appendDummyInput("Property").appendField("read").appendField(new Blockly.FieldDropdown([["advertised tx power","advertisedTxPower"],["advertisement data","advertisementData"],["advertising interval","advertisingInterval"],["lock state","lockState"],["public ECDH key","publicECDHKey"],["radio tx power","radioTxPower"]]),"Property").appendField("property");this.appendValueInput("Slot").setCheck("Number").appendField("at slot");this.appendValueInput("Thing").appendField("of Eddystone device").setCheck("Thing");
this.setOutput(!0,["String","Number"]);this.setColour(255);this.setInputsInline(!0);this.setTooltip("Reads a property from an Eddystone device.");this.setHelpUrl("https://github.com/google/eddystone/tree/master/configuration-service")}};const module$contents$Blast$blocks$blast_READ_EDDYSTONE_PROPERTY_XML='\n<block type="read_eddystone_property">\n  <value name="Slot">\n    <block type="math_number">\n      <field name="NUM">0</field>\n    </block>\n  </value>\n</block>';
module$contents$Blast$Toolbox_addBlock("read_eddystone_property","Properties",module$contents$Blast$blocks$blast_READ_EDDYSTONE_PROPERTY_XML);var module$exports$Blast$generators$blast={};Blockly.JavaScript.http_request=function(a){const b=Blockly.JavaScript.valueToCode(a,"uri",Blockly.JavaScript.ORDER_NONE)||null,c=a.getFieldValue("METHOD"),d=Blockly.JavaScript.valueToCode(a,"header",Blockly.JavaScript.ORDER_NONE),f=a.getFieldValue("OUTPUT");a=Blockly.JavaScript.valueToCode(a,"body",Blockly.JavaScript.ORDER_NONE);return[`sendHttpRequest(${b},'${c}', 
      '{${d}}', ${a}, '${f}')\n`,Blockly.JavaScript.ORDER_NONE]};
const module$contents$Blast$generators$blast_sendHttpRequest=function(a,b,c,d,f,g){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){null!=a&&void 0!=a&&""!=a||module$contents$Blast$Interpreter_throwError("URI input of HttpRequest blocks must not be empty");var h=JSON.parse(c);h={method:b,headers:new Headers(h)};"GET"!==b&&d&&(h.body=d);try{const l=yield fetch(a,h);if(l.ok)if("status"==f)g(l.status);else{var k=yield l.text();g(k)}else module$contents$Blast$Interpreter_throwError(`Failed to get ${a}, Error: ${l.status} ${l.statusText}`)}catch(l){module$contents$Blast$Interpreter_throwError(`Failed to get ${a}, Error: ${l.message}`)}})};
module$contents$Blast$Interpreter_asyncApiFunctions.push(["sendHttpRequest",module$contents$Blast$generators$blast_sendHttpRequest]);Blockly.JavaScript.sparql_query=function(a){let b=a.getFieldValue("query");const c=Blockly.JavaScript.valueToCode(a,"uri",Blockly.JavaScript.ORDER_NONE);a=Blockly.JavaScript.quote_(a.getFieldValue("format"))||"";b=b.replace(/"/g,'\\"').replace(/[\n\r]/g," ");return[`urdfQueryWrapper(${c}, ${a}, '${b}')`,Blockly.JavaScript.ORDER_NONE]};
Blockly.JavaScript.sparql_ask=function(a){let b=a.getFieldValue("query");const c=Blockly.JavaScript.quote_(a.getFieldValue("format"))||"";a=Blockly.JavaScript.valueToCode(a,"uri",Blockly.JavaScript.ORDER_NONE);b=b.replace(/"/g,'\\"').replace(/[\n\r]/g," ");return[`urdfQueryWrapper(${a}, ${c}, '${b}')`,Blockly.JavaScript.ORDER_NONE]};
const module$contents$Blast$generators$blast_urdfQueryWrapper=function(a,b,c,d){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){try{var f=yield fetch(a);if(!f.ok){module$contents$Blast$Interpreter_throwError(`Failed to get ${a}, Error: ${f.status} ${f.statusText}`);return}var g=yield f.text();urdf.clear();yield urdf.load(g,{format:b});f=yield urdf.query(c)}catch(k){module$contents$Blast$Interpreter_throwError(`Failed to get ${a}, Error: ${k.message}`)}if("boolean"===typeof f)d(f);
else{g=Array(f.length);for(var h of f){f=Array(Object.keys(h).length);for(const k of Object.values(h))f.push(k.value);g.push(f)}h=module$contents$Blast$Interpreter_getInterpreter().nativeToPseudo(g);d(h)}})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["urdfQueryWrapper",module$contents$Blast$generators$blast_urdfQueryWrapper]);Blockly.JavaScript.display_text=function(a){return`displayText(${Blockly.JavaScript.valueToCode(a,"text",Blockly.JavaScript.ORDER_NONE)||"''"});\n`};
const module$contents$Blast$generators$blast_displayText=function(a){module$contents$Blast$Interpreter_getStdOut()(a)};module$contents$Blast$Interpreter_apiFunctions.push(["displayText",module$contents$Blast$generators$blast_displayText]);Blockly.JavaScript.display_table=function(a){return`displayTable(${Blockly.JavaScript.valueToCode(a,"table",Blockly.JavaScript.ORDER_NONE)});\n`};
const module$contents$Blast$generators$blast_displayTable=function(a){a=module$contents$Blast$Interpreter_getInterpreter().pseudoToNative(a);if(0==a.length)module$contents$Blast$Interpreter_getStdOut()("empty table");else{var b=document.createElement("table");b.classList.add("output_table");for(const c of a)if(a=document.createElement("tr"),void 0!==c){for(const d of c){if(void 0===d)continue;const f=document.createElement("td");f.innerHTML=d;a.appendChild(f)}b.appendChild(a)}module$contents$Blast$Ui_addElementToOutputContainer(b)}};
module$contents$Blast$Interpreter_apiFunctions.push(["displayTable",module$contents$Blast$generators$blast_displayTable]);Blockly.JavaScript.play_audio=function(a){return`playAudio(${Blockly.JavaScript.valueToCode(a,"URI",Blockly.JavaScript.ORDER_NONE)});\n`};
const module$contents$Blast$generators$blast_playAudio=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield new Promise((c,d)=>{const f=new Audio(a);f.preload="auto";f.autoplay=!0;f.onerror=g=>{module$contents$Blast$Interpreter_throwError(`Error trying to play audio from \n${a}\n See console for details`);console.error(g);d(g)};f.onended=c});b()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["playAudio",module$contents$Blast$generators$blast_playAudio]);
Blockly.JavaScript.capture_image=function(a){return["captureImage()",Blockly.JavaScript.ORDER_NONE]};
const module$contents$Blast$generators$blast_captureImage=function(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const b=document.createElement("video");b.id="video";b.setAttribute("autoplay","autoplay");b.setAttribute("muted",!0);b.style.display="none";document.body.appendChild(b);var c=yield navigator.mediaDevices.getUserMedia({video:!0});b.srcObject=c;const d=document.createElement("canvas"),f=d.getContext("2d");yield new Promise((g,h)=>{b.onloadedmetadata=()=>{d.width=b.videoWidth;
d.height=b.videoHeight;f.drawImage(b,0,0,d.width,d.height);g()};b.onerror=k=>{module$contents$Blast$Interpreter_throwError("Error trying to capture image from camera. See console for details");console.error(k);h(k)}});c=d.toDataURL("image/png");b.srcObject.getTracks().forEach(g=>g.stop());b.remove();d.remove();a(c)})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["captureImage",module$contents$Blast$generators$blast_captureImage]);
Blockly.JavaScript.display_image=function(a){return`displayImage(${Blockly.JavaScript.valueToCode(a,"image",Blockly.JavaScript.ORDER_NONE)});\n`};const module$contents$Blast$generators$blast_displayImage=function(a){const b=document.createElement("img");b.src=a;b.classList.add("output_image");module$contents$Blast$Ui_addElementToOutputContainer(b)};module$contents$Blast$Interpreter_apiFunctions.push(["displayImage",module$contents$Blast$generators$blast_displayImage]);
Blockly.JavaScript.get_signal_strength_wb=function(a){return[`getRSSIWb(${Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_NONE)})`,Blockly.JavaScript.ORDER_NONE]};
const module$contents$Blast$generators$blast_getRSSIWb=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=yield navigator.bluetooth.getDevices();let d=null;for(const g of c)if(g.id===a){d=g;break}null==d&&module$contents$Blast$Interpreter_throwError("Error pairing with Bluetooth device.");const f=new AbortController;d.addEventListener("advertisementreceived",g=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){f.abort();b(g.rssi)}));yield d.watchAdvertisements({signal:f.signal})})};
module$contents$Blast$Interpreter_asyncApiFunctions.push(["getRSSIWb",module$contents$Blast$generators$blast_getRSSIWb]);
Blockly.JavaScript.write_eddystone_property=function(a){const b=Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_NONE)||null,c=Blockly.JavaScript.quote_(a.getFieldValue("Property")),d=Blockly.JavaScript.valueToCode(a,"Slot",Blockly.JavaScript.ORDER_NONE)||null,f=Blockly.JavaScript.valueToCode(a,"Value",Blockly.JavaScript.ORDER_NONE)||null;a=Blockly.JavaScript.quote_(a.getFieldValue("FrameType"));return`writeEddystoneProperty(${b}, ${d}, ${c}, ${a}, ${f});\n`};
const module$contents$Blast$generators$blast_eddystoneServiceUUID="a3c87500-8ed3-4bdf-8a39-a01bebede295";module$contents$Blast$Bluetooth_optionalServices.push(module$contents$Blast$generators$blast_eddystoneServiceUUID);
const module$contents$Blast$generators$blast_writeEddystoneProperty=function(a,b,c,d,f,g){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if(a)if(null===b||void 0===b)module$contents$Blast$Interpreter_throwError("No slot set.");else if(c)switch(yield module$contents$Blast$Eddystone_setActiveSlot(a,b),c){case "advertisedTxPower":yield module$contents$Blast$Eddystone_setAdvertisedTxPower(a,f);break;case "advertisementData":yield module$contents$Blast$Eddystone_setAdvertisingData(a,d,
f);break;case "advertisingInterval":yield module$contents$Blast$Eddystone_setAdvertisingInterval(a,f);break;case "radioTxPower":yield module$contents$Blast$Eddystone_setTxPowerLevel(a,f)}else module$contents$Blast$Interpreter_throwError("No property set.");else module$contents$Blast$Interpreter_throwError("No bluetooth device set.");g()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["writeEddystoneProperty",module$contents$Blast$generators$blast_writeEddystoneProperty]);
Blockly.JavaScript.read_eddystone_property=function(a){const b=Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_NONE)||null,c=Blockly.JavaScript.quote_(a.getFieldValue("Property"));a=Blockly.JavaScript.valueToCode(a,"Slot",Blockly.JavaScript.ORDER_NONE)||null;return[`readEddystoneProperty(${b}, ${a}, ${c})`,Blockly.JavaScript.ORDER_NONE]};
const module$contents$Blast$generators$blast_readEddystoneProperty=function(a,b,c,d){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if(a)if(null===b||void 0===b)module$contents$Blast$Interpreter_throwError("No slot set."),d();else if(c){yield module$contents$Blast$Eddystone_setActiveSlot(a,b);var f=null;switch(c){case "advertisedTxPower":f=yield module$contents$Blast$Eddystone_getAdvertisedTxPower(a);break;case "advertisementData":f=yield module$contents$Blast$Eddystone_getAdvertisingData(a);
break;case "advertisingInterval":f=yield module$contents$Blast$Eddystone_getAdvertisingInterval(a);break;case "lockState":f=yield module$contents$Blast$Eddystone_getLockState(a);break;case "publicECDHKey":f=yield module$contents$Blast$Eddystone_getPublicECDHKey(a);break;case "radioTxPower":f=yield module$contents$Blast$Eddystone_getTxPowerLevel(a)}d(f)}else module$contents$Blast$Interpreter_throwError("No property set."),d();else module$contents$Blast$Interpreter_throwError("No bluetooth device set."),
d()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["readEddystoneProperty",module$contents$Blast$generators$blast_readEddystoneProperty]);var module$exports$Blast$blocks$blinkstick={};
Blockly.Blocks.blinkstick_set_colors={init:function(){this.appendValueInput("COLOUR").setCheck("Colour").appendField("write colour property");this.appendValueInput("index").setCheck("Number").appendField("of LED #");this.appendValueInput("thing").setCheck("Thing").appendField("to BlinkStick");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(255);this.setTooltip("Set the color properties of a tulogic BlinkStick.");this.setHelpUrl("https://www.blinkstick.com/")}};
const module$contents$Blast$blocks$blinkstick_BLINKSTICK_SET_COLORS_XML='\n<block type="blinkstick_set_colors">\n  <value name="index">\n    <block type="math_number">\n      <field name="NUM">0</field>\n    </block>\n  </value>\n  <value name="COLOUR">\n    <block type="colour_picker">\n      <field name="COLOUR">#00ff00</field>\n    </block>\n  </value>\n</block>\n';module$contents$Blast$Toolbox_addBlock("blinkstick_set_colors","Properties",module$contents$Blast$blocks$blinkstick_BLINKSTICK_SET_COLORS_XML);var module$exports$Blast$generators$blinkstick={};const module$contents$Blast$generators$blinkstick_thingsLog=module$contents$Blast$Things_getThingsLog();
Blockly.JavaScript.blinkstick_set_colors=function(a){const b=Blockly.JavaScript.valueToCode(a,"COLOUR",Blockly.JavaScript.ORDER_ATOMIC)||Blockly.JavaScript.quote_("#000000"),c=Blockly.JavaScript.valueToCode(a,"index",Blockly.JavaScript.ORDER_ATOMIC)||"0";return`blinkstickSetColors(${Blockly.JavaScript.valueToCode(a,"thing",Blockly.JavaScript.ORDER_ATOMIC)||"''"}, ${c}, ${b})\n;`};
const module$contents$Blast$generators$blinkstick_blinkstickSetColors=function(a,b,c,d){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if(0>b||7<b)module$contents$Blast$Interpreter_throwError("BlinkStick index must be between 0 and 7.");else if(a){var f=module$contents$Blast$Things_getWebHidDevice(a);if(f){if(!f.opened)try{yield f.open()}catch(p){module$contents$Blast$Interpreter_throwError("Failed to open device, your browser or OS probably doesn't support webHID.")}if(8352!==f.vendorId||
16869!==f.productId)module$contents$Blast$Interpreter_throwError("The connected device is not a BlinkStick.");else{var g=parseInt(c.substring(1,3),16),h=parseInt(c.substring(3,5),16),k=parseInt(c.substring(5,7),16),l=Int8Array.from([5,b,g,h,k]),m=function(p){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){try{module$contents$Blast$generators$blinkstick_thingsLog(`Invoke <code>sendFeatureReport</code> with value <code>${l}</code>`,"hid",f.productName),yield f.sendFeatureReport(5,l),
module$contents$Blast$generators$blinkstick_thingsLog(`Finished <code>sendFeatureReport</code> with value <code>${l}</code>`,"hid",f.productName)}catch(n){0<p?yield m(--p):(console.error(n),module$contents$Blast$Interpreter_throwError("Failed to set BlinkStick colors, please check its connection."))}})};yield m(5)}}else module$contents$Blast$Interpreter_throwError("Connected device is not a HID device.\nMake sure you are connecting the Blinkstick via webHID.")}else module$contents$Blast$Interpreter_throwError("No BlinkStick block set.");
d()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["blinkstickSetColors",module$contents$Blast$generators$blinkstick_blinkstickSetColors]);var module$exports$Blast$blocks$huskyduino={};
Blockly.Blocks.huskylens_choose_algo={init:function(){this.appendValueInput("Thing").setCheck("Thing").appendField("write algorithm property").appendField(new Blockly.FieldDropdown([["Face Recognition","face_recognition"],["Object Tracking","object_tracking"],["Object Recognition","object_recognition"],["Line Tracking","line_tracking"],["Color Recognition","color_recognition"],["Tag Recognition","tag_recognition"],["Object Classification","object_classification"]]),"Algorithms").appendField("to Huskyduino");
this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(255);this.setTooltip("Choose the algorithm of a HuskyDuino");this.setHelpUrl("")},onchange:function(){!this.isInFlyout&&this.firstTime&&this.rendered&&(this.firstTime=!1,navigator.bluetooth||(Blockly.alert("Webbluetooth is not supported by this browser.\n\n                Upgrade to Chrome version 85 or later."),this.dispose()))}};module$contents$Blast$Toolbox_addBlock("huskylens_choose_algo","Properties");
Blockly.Blocks.huskylens_write_id={init:function(){this.appendValueInput("ID").setCheck("Number").appendField("write ID property");this.appendValueInput("Thing").setCheck("Thing").appendField("to HuskyDuino");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(255);this.setTooltip("Sets the ID of the object currently on camera. ID shoud be a value between 1 and 255");this.setHelpUrl("")},onchange:function(){!this.isInFlyout&&this.firstTime&&this.rendered&&
(this.firstTime=!1,navigator.bluetooth||(Blockly.alert("Webbluetooth is not supported by this browser.\n\n                Upgrade to Chrome version 85 or later."),this.dispose()))}};const module$contents$Blast$blocks$huskyduino_HUSKYLENS_WRITE_ID_XML='\n<block type="huskylens_write_id">\n  <value name="ID">\n    <block type="math_number">\n      <field name="NUM">1</field>\n    </block>\n  </value>\n</block>\n';module$contents$Blast$Toolbox_addBlock("huskylens_write_id","Properties",module$contents$Blast$blocks$huskyduino_HUSKYLENS_WRITE_ID_XML);
Blockly.Blocks.huskylens_write_forget_flag={init:function(){this.appendValueInput("forgetFlag").setCheck("Boolean").appendField("write forget flag property");this.appendValueInput("Thing").setCheck("Thing").appendField("to HuskyDuino");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(255);this.setTooltip("forget all values of the currently selected algorithm");this.setHelpUrl("")},onchange:function(){!this.isInFlyout&&this.firstTime&&this.rendered&&
(this.firstTime=!1,navigator.bluetooth||(Blockly.alert("Webbluetooth is not supported by this browser.\n\n                Upgrade to Chrome version 85 or later."),this.dispose()))}};const module$contents$Blast$blocks$huskyduino_HUSKYLENS_FORGET_FLAG_XML='\n<block type="huskylens_write_forget_flag">\n  <value name="forgetFlag">\n    <block type="logic_boolean">\n      <field name="BOOL">TRUE</field>\n    </block>\n  </value>\n</block>\n';
module$contents$Blast$Toolbox_addBlock("huskylens_write_forget_flag","Properties",module$contents$Blast$blocks$huskyduino_HUSKYLENS_FORGET_FLAG_XML);
Blockly.Blocks.huskylens_read_id={init:function(){this.appendValueInput("Thing").setCheck("Thing").appendField("read ID property of HuskyDuino");this.setOutput(!0,"String");this.setColour(255);this.setTooltip("returns up to 5 IDs of the objects currently visible to the HuskyLens");this.setHelpUrl("")},onchange:function(){!this.isInFlyout&&this.firstTime&&this.rendered&&(this.firstTime=!1,navigator.bluetooth||(Blockly.alert("Webbluetooth is not supported by this browser.\n\n                Upgrade to Chrome version 85 or later."),
this.dispose()))}};module$contents$Blast$Toolbox_addBlock("huskylens_read_id","Properties");var module$exports$Blast$generators$huskyduino={};Blockly.JavaScript.huskylens_choose_algo=function(a){const b=a.getFieldValue("Algorithms");return`chooseAlgo(${Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_ATOMIC)}, '${({face_recognition:"0x01",object_tracking:"0x02",object_recognition:"0x03",line_tracking:"0x04",color_recognition:"0x05",tag_recognition:"0x06",object_classification:"0x07"})[b]}');\n`};
Blockly.JavaScript.huskylens_write_id=function(a){var b=Blockly.JavaScript.valueToCode(a,"ID",Blockly.JavaScript.ORDER_ATOMIC);b="0x"+parseInt(b).toString(16);return`learnID(${Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_ATOMIC)}, '${b}');\n`};
Blockly.JavaScript.huskylens_write_forget_flag=function(a){const b=Blockly.JavaScript.valueToCode(a,"forgetFlag",Blockly.JavaScript.ORDER_ATOMIC);return`forgetAll(${Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_ATOMIC)}, '${"0x"+(b?"01":"00")}');\n`};Blockly.JavaScript.huskylens_read_id=function(a){return[`readID(${Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_ATOMIC)})`,Blockly.JavaScript.ORDER_NONE]};
const module$contents$Blast$generators$huskyduino_HuskyServiceUUID="5be35d20-f9b0-11eb-9a03-0242ac130003";module$contents$Blast$Bluetooth_optionalServices.push(module$contents$Blast$generators$huskyduino_HuskyServiceUUID);
const module$contents$Blast$generators$huskyduino_chooseAlgo=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield module$contents$Blast$Bluetooth_writeWithoutResponse(a,module$contents$Blast$generators$huskyduino_HuskyServiceUUID,"5be35d26-f9b0-11eb-9a03-0242ac130003",b);c()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["chooseAlgo",module$contents$Blast$generators$huskyduino_chooseAlgo]);
const module$contents$Blast$generators$huskyduino_learnID=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield module$contents$Blast$Bluetooth_writeWithoutResponse(a,module$contents$Blast$generators$huskyduino_HuskyServiceUUID,"5be35eca-f9b0-11eb-9a03-0242ac130003",b);c()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["learnID",module$contents$Blast$generators$huskyduino_learnID]);
const module$contents$Blast$generators$huskyduino_forgetAll=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield module$contents$Blast$Bluetooth_writeWithoutResponse(a,module$contents$Blast$generators$huskyduino_HuskyServiceUUID,"5be361b8-f9b0-11eb-9a03-0242ac130003",b);c()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["forgetAll",module$contents$Blast$generators$huskyduino_forgetAll]);
const module$contents$Blast$generators$huskyduino_readID=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=yield module$contents$Blast$Bluetooth_readText(a,module$contents$Blast$generators$huskyduino_HuskyServiceUUID,"5be3628a-f9b0-11eb-9a03-0242ac130003");b(c)})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["readID",module$contents$Blast$generators$huskyduino_readID]);var module$exports$Blast$blocks$joycon={};
Blockly.Blocks.joycon_read_property={init:function(){this.appendValueInput("Thing").setCheck("Thing").appendField("read").appendField(new Blockly.FieldDropdown([["accelerometers","accelerometers"],["actual accelerometer","actualAccelerometer"],["actual gyroscope","actualGyroscope"],["actual orientation","actualOrientation"],["actual orientation quaternion","actualOrientationQuaternion"],["gyroscopes","gyroscopes"],["quaternion","quaternion"]],this.propertyValidator),"property").appendField("property of Nintendo JoyCon");
this.setInputsInline(!1);this.setOutput(!0,["String","Number"]);this.setColour(255);this.setTooltip("Reads a property of a Nintendo JoyCon controller.");this.setHelpUrl("");this.firstTime=!0},propertyValidator:function(a){this.getSourceBlock().updateInputs(a);return a},updateInputs:function(a){this.removeInput("propertySubValue",!0);this.removeInput("propertySubValue2",!0);this.removeInput("propertySubValue3",!0);"accelerometers"===a&&(this.appendDummyInput("propertySubValue").appendField("accelerometer").appendField(new Blockly.FieldDropdown([["0",
"0"],["1","1"],["2","2"]]),"propertySubValue"),this.appendDummyInput("propertySubValue2").appendField("axis").appendField(new Blockly.FieldDropdown([["x","x"],["y","y"],["z","z"]]),"propertySubValue2"));"actualAccelerometer"===a&&this.appendDummyInput("propertySubValue").appendField("axis").appendField(new Blockly.FieldDropdown([["x","x"],["y","y"],["z","z"]]),"propertySubValue");"actualGyroscope"===a&&(this.appendDummyInput("propertySubValue").appendField("unit").appendField(new Blockly.FieldDropdown([["rps",
"rps"],["dps","dps"]]),"propertySubValue"),this.appendDummyInput("propertySubValue2").appendField("axis").appendField(new Blockly.FieldDropdown([["x","x"],["y","y"],["z","z"]]),"propertySubValue2"));"actualOrientation"===a&&this.appendDummyInput("propertySubValue").appendField("degrees").appendField(new Blockly.FieldDropdown([["alpa","alpha"],["beta","beta"],["gamma","gamma"]]),"propertySubValue");"actualOrientationQuaternion"===a&&this.appendDummyInput("propertySubValue").appendField("degrees").appendField(new Blockly.FieldDropdown([["alpa",
"alpha"],["beta","beta"],["gamma","gamma"]]),"propertySubValue");"gyroscopes"===a&&(this.appendDummyInput("propertySubValue").appendField("gyroscope").appendField(new Blockly.FieldDropdown([["0","0"],["1","1"],["2","2"]]),"propertySubValue"),this.appendDummyInput("propertySubValue2").appendField("axis").appendField(new Blockly.FieldDropdown([["x","0"],["y","1"],["z","2"]]),"propertySubValue2"),this.appendDummyInput("propertySubValue3").appendField("unit").appendField(new Blockly.FieldDropdown([["dps",
"dps"],["rps","rps"]]),"propertySubValue3"));"quaternion"===a&&this.appendDummyInput("propertySubValue").appendField("axis").appendField(new Blockly.FieldDropdown([["w","w"],["x","x"],["y","y"],["z","z"]]),"propertySubValue")}};module$contents$Blast$Toolbox_addBlock("joycon_read_property","Properties");
Blockly.Blocks.joycon_button_events={init:function(){this.appendValueInput("Thing").setCheck("Thing").appendField("Nintendo JoyCon");this.appendDummyInput().appendField("when").appendField(new Blockly.FieldDropdown([["A","a"],["B","b"],["X","x"],["Y","y"],["up","up"],["left","left"],["down","down"],["right","right"],["R","r"],["L","l"],["ZR","zr"],["ZL","zl"]]),"button").appendField("pressed");this.appendStatementInput("statements").setCheck(null);this.setInputsInline(!1);this.setColour(180);this.setTooltip("");
this.setHelpUrl("");this.requested=!1},addEvent:function(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){module$contents$Blast$Interpreter_eventsInWorkspace.push(a.id);module$contents$Blast$Interpreter_getWorkspace().addChangeListener(b=>a.onDispose(b))})},onchange:function(){this.isInFlyout||this.requested||!this.rendered||this.addEvent()},onDispose:function(a){a.type===Blockly.Events.BLOCK_DELETE&&a.type===Blockly.Events.BLOCK_DELETE&&-1!==a.ids.indexOf(this.id)&&
this.removeFromEvents()},removeFromEvents:function(){const a=module$contents$Blast$Interpreter_eventsInWorkspace.indexOf(this.id);-1!==a&&module$contents$Blast$Interpreter_eventsInWorkspace.splice(a,1)}};module$contents$Blast$Toolbox_addBlock("joycon_button_events","States and Events");function Madgwick$$module$src$things$joycon$joycon_webhid$madgwick(a,b){function c(p,n,q,r,u,A,x,z,t,J){m=J||m;if(!f){J=r;var H=u,y=A,C=x,K=z,F=t;f=!0;var D=d;d=.4;for(var I=0;9>=I;I+=1)c(0,0,0,J,H,y,C,K,F,1);d=D}let S,T;let E,R,L;if(void 0===x||void 0===z||void 0===t||0===x&&0===z&&0===t){t=A;A=.5*(-h*p-k*n-l*q);x=.5*(g*p+k*q-l*n);z=.5*(g*n-h*q+l*p);J=.5*(g*q+h*n-k*p);if(0!==r||0!==u||0!==t){y=Math.pow(r*r+u*u+t*t,-.5);r*=y;u*=y;t*=y;K=2*g;y=2*h;p=2*k;F=2*l;H=4*g;C=4*h;D=4*k;var B=8*h;I=8*k;var G=
g*g;n=h*h;q=k*k;var N=l*l;H=H*q+p*r+H*n-y*u;C=C*N-F*r+4*G*h-K*u-C+B*n+B*q+C*t;t=4*G*k+K*r+D*N-F*u-D+I*n+I*q+D*t;u=4*n*l-y*r+4*q*l-p*u;y=Math.pow(H*H+C*C+t*t+u*u,-.5);A-=d*H*y;x-=d*C*y;z-=d*t*y;J-=d*u*y}g+=A*m;h+=x*m;k+=z*m;l+=J*m;y=Math.pow(g*g+h*h+k*k+l*l,-.5);g*=y;h*=y;k*=y;l*=y}else{J=.5*(-h*p-k*n-l*q);H=.5*(g*p+k*q-l*n);y=.5*(g*n-h*q+l*p);p=.5*(g*q+h*n-k*p);if(0!==r||0!==u||0!==A){n=Math.pow(r*r+u*u+A*A,-.5);r*=n;u*=n;A*=n;n=Math.pow(x*x+z*z+t*t,-.5);x*=n;z*=n;t*=n;var O=2*g*x;var P=2*g*z;var M=
2*g*t;var v=2*h*x;S=2*g;n=2*h;q=2*k;T=2*l;C=2*g*k;K=2*k*l;var Q=g*g;F=g*h;D=g*k;I=g*l;G=h*h;N=h*k;B=h*l;E=k*k;R=k*l;L=l*l;var w=x*Q-P*l+M*k+x*G+n*z*k+n*t*l-x*E-x*L;M=O*l+z*Q-M*h+v*k-z*G+z*E+q*t*l-z*L;w=Math.sqrt(w*w+M*M);v=-O*k+P*h+t*Q+v*l-t*G+q*z*l-t*E+t*L;Q=2*w;M=2*v;O=-q*(2*B-C-r)+n*(2*F+K-u)-v*k*(w*(.5-E-L)+v*(B-D)-x)+(-w*l+v*h)*(w*(N-I)+v*(F+R)-z)+w*k*(w*(D+B)+v*(.5-G-E)-t);P=T*(2*B-C-r)+S*(2*F+K-u)-4*h*(1-2*G-2*E-A)+v*l*(w*(.5-E-L)+v*(B-D)-x)+(w*k+v*g)*(w*(N-I)+v*(F+R)-z)+(w*l-M*h)*(w*(D+B)+
v*(.5-G-E)-t);A=-S*(2*B-C-r)+T*(2*F+K-u)-4*k*(1-2*G-2*E-A)+(-Q*k-v*g)*(w*(.5-E-L)+v*(B-D)-x)+(w*h+v*l)*(w*(N-I)+v*(F+R)-z)+(w*g-M*k)*(w*(D+B)+v*(.5-G-E)-t);u=n*(2*B-C-r)+q*(2*F+K-u)+(-Q*l+v*h)*(w*(.5-E-L)+v*(B-D)-x)+(-w*g+v*k)*(w*(N-I)+v*(F+R)-z)+w*h*(w*(D+B)+v*(.5-G-E)-t);n=Math.pow(O*O+P*P+A*A+u*u,-.5);J-=d*O*n;H-=d*P*n;y-=d*A*n;p-=d*u*n}g+=J*m;h+=H*m;k+=y*m;l+=p*m;n=Math.pow(g*g+h*h+k*k+l*l,-.5);g*=n;h*=n;k*=n;l*=n}}b=b||{};let d=b.beta||1,f=!0===b.doInitialisation?!1:!0,g=1,h=0,k=0,l=0,m=1/(1E3/
a);return{update:c,getQuaternion(){return{w:g,x:h,y:k,z:l}}}}var module$src$things$joycon$joycon_webhid$madgwick={};module$src$things$joycon$joycon_webhid$madgwick.Madgwick=Madgwick$$module$src$things$joycon$joycon_webhid$madgwick;const leftMadgwick$$module$src$things$joycon$joycon_webhid$parse=new Madgwick$$module$src$things$joycon$joycon_webhid$madgwick(10),rightMadgwick$$module$src$things$joycon$joycon_webhid$parse=new Madgwick$$module$src$things$joycon$joycon_webhid$madgwick(10),rad2deg$$module$src$things$joycon$joycon_webhid$parse=180/Math.PI;function baseSum$$module$src$things$joycon$joycon_webhid$parse(a,b){let c;for(const d of a)a=b(d),void 0!==a&&(c=void 0===c?a:c+a);return c}
function mean$$module$src$things$joycon$joycon_webhid$parse(a){return baseMean$$module$src$things$joycon$joycon_webhid$parse(a,b=>b)}function baseMean$$module$src$things$joycon$joycon_webhid$parse(a,b){const c=null==a?0:a.length;return c?baseSum$$module$src$things$joycon$joycon_webhid$parse(a,b)/c:NaN}
function calculateBatteryLevel$$module$src$things$joycon$joycon_webhid$parse(a){switch(a[0]){case 8:a="full";break;case 4:a="medium";break;case 2:a="low";break;case 1:a="critical";break;case 0:a="empty";break;default:a="charging"}return a}
const ControllerType$$module$src$things$joycon$joycon_webhid$parse={1:"Left Joy-Con",2:"Right Joy-Con",3:"Pro Controller"},lastValues$$module$src$things$joycon$joycon_webhid$parse={8198:{timestamp:null,alpha:0,beta:0,gamma:0},8199:{timestamp:null,alpha:0,beta:0,gamma:0}},bias$$module$src$things$joycon$joycon_webhid$parse=.75,zeroBias$$module$src$things$joycon$joycon_webhid$parse=.0125,scale$$module$src$things$joycon$joycon_webhid$parse=Math.PI/2;
function toEulerAngles$$module$src$things$joycon$joycon_webhid$parse(a,b,c){var d=Date.now();const f=lastValues$$module$src$things$joycon$joycon_webhid$parse[c].timestamp?(d-lastValues$$module$src$things$joycon$joycon_webhid$parse[c].timestamp)/1E3:0;lastValues$$module$src$things$joycon$joycon_webhid$parse[c].timestamp=d;d=Math.sqrt(Math.pow(b.x,2)+Math.pow(b.y,2)+Math.pow(b.z,2));lastValues$$module$src$things$joycon$joycon_webhid$parse[c].alpha=(1-zeroBias$$module$src$things$joycon$joycon_webhid$parse)*
(lastValues$$module$src$things$joycon$joycon_webhid$parse[c].alpha+a.z*f);0!==d&&(lastValues$$module$src$things$joycon$joycon_webhid$parse[c].beta=bias$$module$src$things$joycon$joycon_webhid$parse*(lastValues$$module$src$things$joycon$joycon_webhid$parse[c].beta+a.x*f)+b.x*scale$$module$src$things$joycon$joycon_webhid$parse/d*(1-bias$$module$src$things$joycon$joycon_webhid$parse),lastValues$$module$src$things$joycon$joycon_webhid$parse[c].gamma=bias$$module$src$things$joycon$joycon_webhid$parse*
(lastValues$$module$src$things$joycon$joycon_webhid$parse[c].gamma+a.y*f)+b.y*-scale$$module$src$things$joycon$joycon_webhid$parse/d*(1-bias$$module$src$things$joycon$joycon_webhid$parse));return{alpha:8198===c?(-180*lastValues$$module$src$things$joycon$joycon_webhid$parse[c].alpha/Math.PI*430%90).toFixed(6):(180*lastValues$$module$src$things$joycon$joycon_webhid$parse[c].alpha/Math.PI*430%360).toFixed(6),beta:(-180*lastValues$$module$src$things$joycon$joycon_webhid$parse[c].beta/Math.PI).toFixed(6),
gamma:8198===c?(-180*lastValues$$module$src$things$joycon$joycon_webhid$parse[c].gamma/Math.PI).toFixed(6):(180*lastValues$$module$src$things$joycon$joycon_webhid$parse[c].gamma/Math.PI).toFixed(6)}}
function toEulerAnglesQuaternion$$module$src$things$joycon$joycon_webhid$parse(a){const b=a.w*a.w,c=a.x*a.x,d=a.y*a.y,f=a.z*a.z;return{alpha:(rad2deg$$module$src$things$joycon$joycon_webhid$parse*Math.atan2(2*(a.x*a.y+a.z*a.w),c-d-f+b)).toFixed(6),beta:(rad2deg$$module$src$things$joycon$joycon_webhid$parse*-Math.asin(2*(a.x*a.z-a.y*a.w))).toFixed(6),gamma:(rad2deg$$module$src$things$joycon$joycon_webhid$parse*Math.atan2(2*(a.y*a.z+a.x*a.w),-c-d+f+b)).toFixed(6)}}
function toQuaternion$$module$src$things$joycon$joycon_webhid$parse(a,b,c){if(8198===c)return leftMadgwick$$module$src$things$joycon$joycon_webhid$parse.update(a.x,a.y,a.z,b.x,b.y,b.z),leftMadgwick$$module$src$things$joycon$joycon_webhid$parse.getQuaternion();rightMadgwick$$module$src$things$joycon$joycon_webhid$parse.update(a.x,a.y,a.z,b.x,b.y,b.z);return rightMadgwick$$module$src$things$joycon$joycon_webhid$parse.getQuaternion()}
function toAcceleration$$module$src$things$joycon$joycon_webhid$parse(a){a=new DataView(a.buffer);return parseFloat((2.44E-4*a.getInt16(0,!0)).toFixed(6))}function toDegreesPerSecond$$module$src$things$joycon$joycon_webhid$parse(a){a=new DataView(a.buffer);return parseFloat((.06103*a.getInt16(0,!0)).toFixed(6))}function toRevolutionsPerSecond$$module$src$things$joycon$joycon_webhid$parse(a){a=new DataView(a.buffer);return parseFloat((1.694E-4*a.getInt16(0,!0)).toFixed(6))}
function parseDeviceInfo$$module$src$things$joycon$joycon_webhid$parse(a,b){a=a.slice(15,26);b=a.slice(0,1)[0];const c=a.slice(1,2)[0],d=a.slice(2,3),f=[];a.slice(4,10).forEach(h=>{f.push(h.toString(16))});const g=a.slice(11,12);return{_raw:a.slice(0,12),_hex:a.slice(0,12),firmwareVersion:{major:b,minor:c},type:ControllerType$$module$src$things$joycon$joycon_webhid$parse[d[0]],macAddress:f.join(":"),spiColorInUse:1===g[0]}}
function parseInputReportID$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(0,1),_hex:b.slice(0,1)}}function parseTimer$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(1,2),_hex:b.slice(1,2)}}function parseBatteryLevel$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(2,3),_hex:b.slice(2,3),level:calculateBatteryLevel$$module$src$things$joycon$joycon_webhid$parse(b.slice(2,3))}}
function parseConnectionInfo$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(2,3),_hex:b.slice(2,3)}}function parseButtonStatus$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(1,3),_hex:b.slice(1,3)}}
function parseCompleteButtonStatus$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(3,6),_hex:b.slice(3,6),y:!!(1&a[3]),x:!!(2&a[3]),b:!!(4&a[3]),a:!!(8&a[3]),r:!!(64&a[3]),zr:!!(128&a[3]),down:!!(1&a[5]),up:!!(2&a[5]),right:!!(4&a[5]),left:!!(8&a[5]),l:!!(64&a[5]),zl:!!(128&a[5]),sr:!!(16&a[3])||!!(16&a[5]),sl:!!(32&a[3])||!!(32&a[5]),minus:!!(1&a[4]),plus:!!(2&a[4]),rightStick:!!(4&a[4]),leftStick:!!(8&a[4]),home:!!(16&a[4]),capture:!!(32&a[4]),chargingGrip:!!(128&a[4])}}
function parseAnalogStick$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(3,4),_hex:b.slice(3,4)}}function parseAnalogStickLeft$$module$src$things$joycon$joycon_webhid$parse(a,b){let c=a[6]|(a[7]&15)<<8;c=(2*(c/1995-1)).toFixed(1);let d=-1*(a[7]>>4|a[8]<<4);d=(2*(d/2220+1)).toFixed(1);return{_raw:a.slice(6,9),_hex:b.slice(6,9),horizontal:c,vertical:d}}
function parseAnalogStickRight$$module$src$things$joycon$joycon_webhid$parse(a,b){let c=a[9]|(a[10]&15)<<8;c=(2*(c/1995-1)).toFixed(1);let d=-1*(a[10]>>4|a[11]<<4);d=(2*(d/2220+1)).toFixed(1);return{_raw:a.slice(9,12),_hex:b.slice(9,12),horizontal:c,vertical:d}}function parseFilter$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(4),_hex:b.slice(4)}}function parseVibrator$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(12,13),_hex:b.slice(12,13)}}
function parseAck$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(13,14),_hex:b.slice(13,14)}}function parseSubcommandID$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(14,15),_hex:b.slice(14,15)}}function parseSubcommandReplyData$$module$src$things$joycon$joycon_webhid$parse(a,b){return{_raw:a.slice(15),_hex:b.slice(15)}}
function parseAccelerometers$$module$src$things$joycon$joycon_webhid$parse(a,b){return[{x:{_raw:a.slice(13,15),_hex:b.slice(13,15),acc:toAcceleration$$module$src$things$joycon$joycon_webhid$parse(a.slice(13,15))},y:{_raw:a.slice(15,17),_hex:b.slice(15,17),acc:toAcceleration$$module$src$things$joycon$joycon_webhid$parse(a.slice(15,17))},z:{_raw:a.slice(17,19),_hex:b.slice(17,19),acc:toAcceleration$$module$src$things$joycon$joycon_webhid$parse(a.slice(17,19))}},{x:{_raw:a.slice(25,27),_hex:b.slice(25,
27),acc:toAcceleration$$module$src$things$joycon$joycon_webhid$parse(a.slice(25,27))},y:{_raw:a.slice(27,29),_hex:b.slice(27,29),acc:toAcceleration$$module$src$things$joycon$joycon_webhid$parse(a.slice(27,29))},z:{_raw:a.slice(29,31),_hex:b.slice(29,31),acc:toAcceleration$$module$src$things$joycon$joycon_webhid$parse(a.slice(29,31))}},{x:{_raw:a.slice(37,39),_hex:b.slice(37,39),acc:toAcceleration$$module$src$things$joycon$joycon_webhid$parse(a.slice(37,39))},y:{_raw:a.slice(39,41),_hex:b.slice(39,
41),acc:toAcceleration$$module$src$things$joycon$joycon_webhid$parse(a.slice(39,41))},z:{_raw:a.slice(41,43),_hex:b.slice(41,43),acc:toAcceleration$$module$src$things$joycon$joycon_webhid$parse(a.slice(41,43))}}]}
function parseGyroscopes$$module$src$things$joycon$joycon_webhid$parse(a,b){return[[{_raw:a.slice(19,21),_hex:b.slice(19,21),dps:toDegreesPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(19,21)),rps:toRevolutionsPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(19,21))},{_raw:a.slice(21,23),_hex:b.slice(21,23),dps:toDegreesPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(21,23)),rps:toRevolutionsPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(21,
23))},{_raw:a.slice(23,25),_hex:b.slice(23,25),dps:toDegreesPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(23,25)),rps:toRevolutionsPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(23,25))}],[{_raw:a.slice(31,33),_hex:b.slice(31,33),dps:toDegreesPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(31,33)),rps:toRevolutionsPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(31,33))},{_raw:a.slice(33,35),_hex:b.slice(33,35),dps:toDegreesPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(33,
35)),rps:toRevolutionsPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(33,35))},{_raw:a.slice(35,37),_hex:b.slice(35,37),dps:toDegreesPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(35,37)),rps:toRevolutionsPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(35,37))}],[{_raw:a.slice(43,45),_hex:b.slice(43,45),dps:toDegreesPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(43,45)),rps:toRevolutionsPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(43,
45))},{_raw:a.slice(45,47),_hex:b.slice(45,47),dps:toDegreesPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(45,47)),rps:toRevolutionsPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(45,47))},{_raw:a.slice(47,49),_hex:b.slice(47,49),dps:toDegreesPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(47,49)),rps:toRevolutionsPerSecond$$module$src$things$joycon$joycon_webhid$parse(a.slice(47,49))}]]}
function calculateActualAccelerometer$$module$src$things$joycon$joycon_webhid$parse(a){const b=.005*a.length;return{x:parseFloat((mean$$module$src$things$joycon$joycon_webhid$parse(a.map(c=>c[0]))*b).toFixed(6)),y:parseFloat((mean$$module$src$things$joycon$joycon_webhid$parse(a.map(c=>c[1]))*b).toFixed(6)),z:parseFloat((mean$$module$src$things$joycon$joycon_webhid$parse(a.map(c=>c[2]))*b).toFixed(6))}}
function calculateActualGyroscope$$module$src$things$joycon$joycon_webhid$parse(a){const b=.005*a.length;a=[mean$$module$src$things$joycon$joycon_webhid$parse(a.map(c=>c[0])),mean$$module$src$things$joycon$joycon_webhid$parse(a.map(c=>c[1])),mean$$module$src$things$joycon$joycon_webhid$parse(a.map(c=>c[2]))].map(c=>parseFloat((c*b).toFixed(6)));return{x:a[0],y:a[1],z:a[2]}}var module$src$things$joycon$joycon_webhid$parse={};
module$src$things$joycon$joycon_webhid$parse.calculateActualAccelerometer=calculateActualAccelerometer$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.calculateActualGyroscope=calculateActualGyroscope$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseAccelerometers=parseAccelerometers$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseAck=parseAck$$module$src$things$joycon$joycon_webhid$parse;
module$src$things$joycon$joycon_webhid$parse.parseAnalogStick=parseAnalogStick$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseAnalogStickLeft=parseAnalogStickLeft$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseAnalogStickRight=parseAnalogStickRight$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseBatteryLevel=parseBatteryLevel$$module$src$things$joycon$joycon_webhid$parse;
module$src$things$joycon$joycon_webhid$parse.parseButtonStatus=parseButtonStatus$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseCompleteButtonStatus=parseCompleteButtonStatus$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseConnectionInfo=parseConnectionInfo$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseDeviceInfo=parseDeviceInfo$$module$src$things$joycon$joycon_webhid$parse;
module$src$things$joycon$joycon_webhid$parse.parseFilter=parseFilter$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseGyroscopes=parseGyroscopes$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseInputReportID=parseInputReportID$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseSubcommandID=parseSubcommandID$$module$src$things$joycon$joycon_webhid$parse;
module$src$things$joycon$joycon_webhid$parse.parseSubcommandReplyData=parseSubcommandReplyData$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseTimer=parseTimer$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.parseVibrator=parseVibrator$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.toEulerAngles=toEulerAngles$$module$src$things$joycon$joycon_webhid$parse;
module$src$things$joycon$joycon_webhid$parse.toEulerAnglesQuaternion=toEulerAnglesQuaternion$$module$src$things$joycon$joycon_webhid$parse;module$src$things$joycon$joycon_webhid$parse.toQuaternion=toQuaternion$$module$src$things$joycon$joycon_webhid$parse;var NativeEventTarget$$module$src$things$joycon$joycon_webhid$joycon=self.EventTarget;const concatTypedArrays$$module$src$things$joycon$joycon_webhid$joycon=(a,b)=>{const c=new a.constructor(a.length+b.length);c.set(a,0);c.set(b,a.length);return c};
class JoyCon$$module$src$things$joycon$joycon_webhid$joycon extends NativeEventTarget$$module$src$things$joycon$joycon_webhid$joycon{constructor(a){super();this.device=a}open(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){a.device.opened||(yield a.device.open());a.device.addEventListener("inputreport",a._onInputReport.bind(a))})}getRequestDeviceInfo(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield a.device.sendReport(1,new Uint8Array([0,
0,0,0,0,0,0,0,0,2]));return new Promise(b=>{const c=d=>{({detail:d}=d);a.removeEventListener("deviceinfo",c);delete d._raw;delete d._hex;b(d)};a.addEventListener("deviceinfo",c)})})}getBatteryLevel(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield a.device.sendReport(1,new Uint8Array([0,0,0,0,0,0,0,0,0,80]));return new Promise(b=>{const c=d=>{({detail:d}=d);a.removeEventListener("batterylevel",c);delete d._raw;delete d._hex;b(d)};a.addEventListener("batterylevel",
c)})})}enableSimpleHIDMode(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield a.device.sendReport(1,new Uint8Array([0,0,0,0,0,0,0,0,0,3,63]))})}enableStandardFullMode(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield a.device.sendReport(1,new Uint8Array([0,0,0,0,0,0,0,0,0,3,48]))})}enableIMUMode(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield a.device.sendReport(1,new Uint8Array([0,0,0,0,0,0,
0,0,0,64,1]))})}disableIMUMode(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield a.device.sendReport(1,new Uint8Array([0,0,0,0,0,0,0,0,0,64,0]))})}enableVibration(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield a.device.sendReport(1,new Uint8Array([0,0,1,64,64,0,1,64,64,72,1]))})}disableVibration(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){yield a.device.sendReport(1,new Uint8Array([0,0,1,64,
64,0,1,64,64,72,0]))})}rumble(a,b,c){const d=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const f=new Uint8Array(9);f[0]=0;var g=Math.min(Math.max(a,40.875885),626.286133);let h=Math.min(Math.max(b,81.75177),1252.572266);h=4*(Math.round(32*Math.log2(.1*h))-96);g=Math.round(32*Math.log2(.1*g))-64;var k=Math.min(Math.max(c,0),1);k=0==k?0:.117>k?(32*Math.log2(1E3*k)-96)/(5-Math.pow(k,2))-1:.23>k?32*Math.log2(1E3*k)-96-92:2*(32*Math.log2(1E3*k)-96)-246;let l=.5*Math.round(k);const m=
l%2;0<m&&--l;l=(l>>1)+64;0<m&&(l|=32768);f[1]=h&255;f[2]=k+(h>>>8&255);f[3]=g+(l>>>8&255);f[4]+=l&255;for(g=0;4>g;g++)f[5+g]=f[1+g];yield d.device.sendReport(16,new Uint8Array(f))})}_onInputReport(a){let {data:b,reportId:c,device:d}=a;if(b){b=concatTypedArrays$$module$src$things$joycon$joycon_webhid$joycon(new Uint8Array([c]),new Uint8Array(b.buffer));var f=b.map(k=>k.toString(16));a={inputReportID:parseInputReportID$$module$src$things$joycon$joycon_webhid$parse(b,f)};switch(c){case 63:a=Object.assign({},
a,{buttonStatus:parseButtonStatus$$module$src$things$joycon$joycon_webhid$parse(b,f),analogStick:parseAnalogStick$$module$src$things$joycon$joycon_webhid$parse(b,f),filter:parseFilter$$module$src$things$joycon$joycon_webhid$parse(b,f)});break;case 33:case 48:if(a=Object.assign({},a,{timer:parseTimer$$module$src$things$joycon$joycon_webhid$parse(b,f),batteryLevel:parseBatteryLevel$$module$src$things$joycon$joycon_webhid$parse(b,f),connectionInfo:parseConnectionInfo$$module$src$things$joycon$joycon_webhid$parse(b,
f),buttonStatus:parseCompleteButtonStatus$$module$src$things$joycon$joycon_webhid$parse(b,f),analogStickLeft:parseAnalogStickLeft$$module$src$things$joycon$joycon_webhid$parse(b,f),analogStickRight:parseAnalogStickRight$$module$src$things$joycon$joycon_webhid$parse(b,f),vibrator:parseVibrator$$module$src$things$joycon$joycon_webhid$parse(b,f)}),33===c&&(a=Object.assign({},a,{ack:parseAck$$module$src$things$joycon$joycon_webhid$parse(b,f),subcommandID:parseSubcommandID$$module$src$things$joycon$joycon_webhid$parse(b,
f),subcommandReplyData:parseSubcommandReplyData$$module$src$things$joycon$joycon_webhid$parse(b,f),deviceInfo:parseDeviceInfo$$module$src$things$joycon$joycon_webhid$parse(b,f)})),48===c){const k=parseAccelerometers$$module$src$things$joycon$joycon_webhid$parse(b,f);f=parseGyroscopes$$module$src$things$joycon$joycon_webhid$parse(b,f);const l=calculateActualGyroscope$$module$src$things$joycon$joycon_webhid$parse(f.map(q=>q.map(r=>r.rps))),m=calculateActualGyroscope$$module$src$things$joycon$joycon_webhid$parse(f.map(q=>
q.map(r=>r.dps))),p=calculateActualAccelerometer$$module$src$things$joycon$joycon_webhid$parse(k.map(q=>[q.x.acc,q.y.acc,q.z.acc])),n=toQuaternion$$module$src$things$joycon$joycon_webhid$parse(l,p,d.productId);a=Object.assign({},a,{accelerometers:k,gyroscopes:f,actualAccelerometer:p,actualGyroscope:{dps:m,rps:l},actualOrientation:toEulerAngles$$module$src$things$joycon$joycon_webhid$parse(l,p,d.productId),actualOrientationQuaternion:toEulerAnglesQuaternion$$module$src$things$joycon$joycon_webhid$parse(n),
quaternion:n})}}var g;(null==(g=a.deviceInfo)?0:g.type)&&this._receiveDeviceInfo(a.deviceInfo);var h;(null==(h=a.batteryLevel)?0:h.level)&&this._receiveBatteryLevel(a.batteryLevel);this._receiveInputEvent(a)}}_receiveDeviceInfo(a){this.dispatchEvent(new CustomEvent("deviceinfo",{detail:a}))}_receiveBatteryLevel(a){this.dispatchEvent(new CustomEvent("batterylevel",{detail:a}))}}
class JoyConLeft$$module$src$things$joycon$joycon_webhid$joycon extends JoyCon$$module$src$things$joycon$joycon_webhid$joycon{constructor(a){super(a)}_receiveInputEvent(a){delete a.buttonStatus.x;delete a.buttonStatus.y;delete a.buttonStatus.b;delete a.buttonStatus.a;delete a.buttonStatus.plus;delete a.buttonStatus.r;delete a.buttonStatus.zr;delete a.buttonStatus.home;delete a.buttonStatus.rightStick;this.dispatchEvent(new CustomEvent("hidinput",{detail:a}))}}
class JoyConRight$$module$src$things$joycon$joycon_webhid$joycon extends JoyCon$$module$src$things$joycon$joycon_webhid$joycon{constructor(a){super(a)}_receiveInputEvent(a){delete a.buttonStatus.up;delete a.buttonStatus.down;delete a.buttonStatus.left;delete a.buttonStatus.right;delete a.buttonStatus.minus;delete a.buttonStatus.l;delete a.buttonStatus.zl;delete a.buttonStatus.capture;delete a.buttonStatus.leftStick;this.dispatchEvent(new CustomEvent("hidinput",{detail:a}))}}
var module$src$things$joycon$joycon_webhid$joycon={};module$src$things$joycon$joycon_webhid$joycon.JoyConLeft=JoyConLeft$$module$src$things$joycon$joycon_webhid$joycon;module$src$things$joycon$joycon_webhid$joycon.JoyConRight=JoyConRight$$module$src$things$joycon$joycon_webhid$joycon;var module$exports$Blast$generators$joycon={};const module$contents$Blast$generators$joycon_JoyConLeft=JoyConLeft$$module$src$things$joycon$joycon_webhid$joycon,module$contents$Blast$generators$joycon_JoyConRight=JoyConRight$$module$src$things$joycon$joycon_webhid$joycon;
Blockly.JavaScript.joycon_read_property=function(a){const b=a.getFieldValue("property"),c=a.getFieldValue("propertySubValue")||"",d=a.getFieldValue("propertySubValue2")||"",f=a.getFieldValue("propertySubValue3")||"";return[`readJoyConProperty(${Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_NONE)}, '${b}', '${c}', '${d}', '${f}')`,Blockly.JavaScript.ORDER_NONE]};
const module$contents$Blast$generators$joycon_readJoyConProperty=function(a,b,c,d,f,g){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if(a){var h=module$contents$Blast$Things_getWebHidDevice(a);if(h){if(!h.opened)try{yield h.open()}catch(p){module$contents$Blast$Interpreter_throwError("Failed to open device, your browser or OS probably doesn't support webHID.")}if(1406!==h.vendorId||8198!==h.productId&&8199!==h.productId)module$contents$Blast$Interpreter_throwError("The connected device is not a Joy-Con."),
g();else{var k;8198===h.productId?k=new JoyConLeft$$module$src$things$joycon$joycon_webhid$joycon(h):8199===h.productId&&(k=new JoyConRight$$module$src$things$joycon$joycon_webhid$joycon(h));yield k.open();yield k.enableStandardFullMode();yield k.enableIMUMode();var l=module$contents$Blast$Things_getThingsLog(),m=function(p){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const n=p.detail;n&&n.actualOrientation&&(l(`Received <code>hidinput</code> event from Joy-Con: <code>${JSON.stringify(n)}</code>`,
"hid",h.productname),l("Removing <code>hidinput</code> event listener","hid",h.productname),k.removeEventListener("hidinput",m),""!==d?"accelerometers"===b?g(n[b][c][d].acc):"gyroscopes"===b?g(n[b][c][d][f]):g(n[b][c][d]):g(n[b][c]))})};k.eventListenerAttached||(yield k.open(),yield k.enableStandardFullMode(),yield k.enableIMUMode(),yield k.enableVibration(),l("Adding <code>hidinput</code> event listener","hid",h.productname),k.addEventListener("hidinput",m),k.eventListenerAttached=!0)}}else module$contents$Blast$Interpreter_throwError("Connected device is not a HID device.\nMake sure you are connecting the JoyCon via webHID"),
g()}else module$contents$Blast$Interpreter_throwError("No Joy-Con block set."),g()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["readJoyConProperty",module$contents$Blast$generators$joycon_readJoyConProperty]);
Blockly.JavaScript.joycon_button_events=function(a){const b=Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_NONE),c=Blockly.JavaScript.quote_(a.getFieldValue("button"));a=Blockly.JavaScript.quote_(Blockly.JavaScript.statementToCode(a,"statements"));Blockly.JavaScript.definitions_.eventHandlers=(Blockly.JavaScript.definitions_.eventHandlers||"")+`handleJoyConButtons(${b}, ${c}, ${a});\n`;return""};
const module$contents$Blast$generators$joycon_handleJoyConButtons=function(a,b,c,d){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if(a){var f=module$contents$Blast$Things_getWebHidDevice(a);if(f){if(!f.opened)try{yield f.open()}catch(m){module$contents$Blast$Interpreter_throwError("Failed to open device, your browser or OS probably doesn't support webHID.")}if(1406!==f.vendorId||8198!==f.productId&&8199!==f.productId)module$contents$Blast$Interpreter_throwError("The connected device is not a Joy-Con."),
d();else{var g;8198===f.productId?g=new JoyConLeft$$module$src$things$joycon$joycon_webhid$joycon(f):8199===f.productId&&(g=new JoyConRight$$module$src$things$joycon$joycon_webhid$joycon(f));yield g.open();yield g.enableStandardFullMode();yield g.enableIMUMode();var h=!1,k=module$contents$Blast$Things_getThingsLog(),l=function(m){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const p=m.detail;if(p&&p.actualOrientation)if(k(`Received <code>hidinput</code> event from Joy-Con: <code>${JSON.stringify(p)}</code>`,
"hid",f.productName),p.buttonStatus[b]){if(!h){h=!0;module$contents$Blast$Interpreter_setInterrupted(!1);const n=new Interpreter("");n.stateStack[0].scope=module$contents$Blast$Interpreter_getInterpreter().globalScope;n.appendCode(c);const q=function(){try{n.step()?setTimeout(q,5):module$contents$Blast$Interpreter_setInterrupted(!1)}catch(r){module$contents$Blast$Interpreter_throwError(`Error executing program:\n ${r}`),console.error(r)}};q()}}else h=!1})};Blast.Interpreter.deviceEventHandlers.push({device:g,
type:"hidinput",fn:l});g.eventListenerAttached||(yield g.open(),yield g.enableStandardFullMode(),yield g.enableIMUMode(),yield g.enableVibration(),k("Adding <code>hidinput</code> event listener","hid",f.productName),g.addEventListener("hidinput",l),g.eventListenerAttached=!0)}}else module$contents$Blast$Interpreter_throwError("Connected device is not a HID device.\nMake sure you are connecting the JoyCon via webHID"),d()}else module$contents$Blast$Interpreter_throwError("No Joy-Con block set."),d()})};
module$contents$Blast$Interpreter_apiFunctions.push(["handleJoyConButtons",module$contents$Blast$generators$joycon_handleJoyConButtons]);var module$exports$Blast$blocks$ble_rgb_led_controller={};
Blockly.Blocks.switch_lights_rgb={init:function(){this.appendValueInput("colour").setCheck("Colour").appendField("write colour property");this.appendValueInput("thing").setCheck("Thing").appendField("to LED controller");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(255);this.setTooltip("Switches checked lights on and unchecked ones off.");this.setHelpUrl("");this.firstTime=!0},onchange:function(){!this.isInFlyout&&this.firstTime&&this.rendered&&
(this.firstTime=!1,navigator.bluetooth||(Blockly.alert("Webbluetooth is not supported by this browser.\n\n        Upgrade to Chrome version 85 or later and enable Experimental Web Platform features."),this.dispose()))}};const module$contents$Blast$blocks$ble_rgb_led_controller_SWITCH_LIGHTS_RGB_XML='\n<block type="switch_lights_rgb">\n  <value name="colour">\n    <block type="colour_picker">\n      <field name="COLOUR">#ff0000</field>\n    </block>\n  </value>\n</block>';
module$contents$Blast$Toolbox_addBlock("switch_lights_rgb","Properties",module$contents$Blast$blocks$ble_rgb_led_controller_SWITCH_LIGHTS_RGB_XML);var module$exports$Blast$generators$ble_rgb_led_controller={};Blockly.JavaScript.switch_lights_rgb=function(a){const b=Blockly.JavaScript.valueToCode(a,"colour",Blockly.JavaScript.ORDER_ATOMIC)||Blockly.JavaScript.quote_("#000000");return`switchLights(${Blockly.JavaScript.valueToCode(a,"thing",Blockly.JavaScript.ORDER_NONE)||"null"}, ${b});\n`};const module$contents$Blast$generators$ble_rgb_led_controller_LEDServiceUUID="0000fff0-0000-1000-8000-00805f9b34fb";module$contents$Blast$Bluetooth_optionalServices.push(module$contents$Blast$generators$ble_rgb_led_controller_LEDServiceUUID);
const module$contents$Blast$generators$ble_rgb_led_controller_switchLights=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if(a){var d="7e000503"+b.substring(1,7)+"00ef";yield module$contents$Blast$Bluetooth_writeWithoutResponse(a,module$contents$Blast$generators$ble_rgb_led_controller_LEDServiceUUID,"0000fff3-0000-1000-8000-00805f9b34fb",d)}else module$contents$Blast$Interpreter_throwError("No LED Controller is set.");c()})};
module$contents$Blast$Interpreter_asyncApiFunctions.push(["switchLights",module$contents$Blast$generators$ble_rgb_led_controller_switchLights]);var module$exports$Blast$blocks$mirobot={};Blockly.Blocks.mirobot_pickup={init:function(){this.appendDummyInput().appendField("robot-arm, pick up").appendField(new Blockly.FieldDropdown([["blue","BLUE"],["red","RED"],["yellow","YELLOW"],["green","GREEN"]]),"box").appendField("box");this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(0);this.setTooltip("Invokes pick-up action for the selected box.");this.setHelpUrl("")}};var module$exports$Blast$generators$mirobot={};Blockly.JavaScript.mirobot_pickup=function(a){return`mirobotPickUpBox(${Blockly.JavaScript.quote_(a.getFieldValue("box").toLowerCase())});\n`};
const module$contents$Blast$generators$mirobot_mirobotPickUp=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c="https://bot.rapidthings.eu/thing/action/grab_"+a.toLowerCase(),d={method:"POST",headers:new Headers({"Content-Type":"application/json",Accept:"application/json"})};try{const f=yield fetch(c,d);f.ok?b(f.status):module$contents$Blast$Interpreter_throwError(`Failed to get ${c}, Error: ${f.status} ${f.statusText}`)}catch(f){module$contents$Blast$Interpreter_throwError(`Failed to get ${c}, Error: ${f}`)}})};var module$exports$Blast$blocks$ruuvi_tag={};
Blockly.Blocks.read_ruuvi_property={init:function(){this.appendValueInput("Thing").setCheck("Thing").appendField("read").appendField(new Blockly.FieldDropdown([["temperature","temperature"],["humidity","humidity"],["pressure","pressure"],["acceleration X","accelerationX"],["acceleration Y","accelerationY"],["acceleration Z","accelerationZ"],["battery voltage","batteryVoltage"],["txPower","txPower"],["movement counter","movementCounter"],["measurement sequence number","measurementSequenceNumber"]]),
"measurement").appendField("property of RuuviTag");this.setOutput(!0,["String","Number"]);this.setColour(255);this.setTooltip("Reads a property of a Ruuvi Tag.");this.setHelpUrl("");this.firstTime=!0},onchange:function(){!this.isInFlyout&&this.firstTime&&this.rendered&&(this.firstTime=!1,navigator.bluetooth||(Blockly.alert("Webbluetooth is not supported by this browser.\n\n        Upgrade to Chrome version 85 or later."),this.dispose()))}};
module$contents$Blast$Toolbox_addBlock("read_ruuvi_property","Properties");module$contents$Blast$Bluetooth_scanBlocks.push("read_ruuvi_property");var module$exports$Blast$generators$ruuvi_tag={};Blockly.JavaScript.read_ruuvi_property=function(a){const b=Blockly.JavaScript.quote_(a.getFieldValue("measurement"));a=Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_ATOMIC);return[`getRuuviProperty(${b}, ${a})`,Blockly.JavaScript.ORDER_NONE]};
const module$contents$Blast$generators$ruuvi_tag_getRuuviProperty=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const d=function(h){if(30>h){var k=Blast.Bluetooth.LEScanResults[b];if(k)for(const l of k)if((k=l.manufacturerData.get(1177))&&5==k.getUint8(0))return k;return new Promise(l=>{setTimeout(()=>{l(d(h+1))},1E3)})}};module$contents$Blast$Bluetooth_startLEScan(b);var f=yield d(0);f||module$contents$Blast$Interpreter_throwError("Timed out. No BLE advertising data found for "+
b);const g=[];for(let h=0;h<f.byteLength;h++)g.push("0x"+("00"+f.getUint8(h).toString(16)).slice(-2));f=function(h){const k={},l=h[0]&255;let m=h[1]<<8|h[2]&255;32767<m&&(m-=65535);const p=((h[3]&255)<<8|h[4]&255)/400,n=((h[5]&255)<<8|h[6]&255)+5E4,q=(h[7]<<8|h[8]&255)/1E3,r=(h[9]<<8|h[10]&255)/1E3,u=(h[11]<<8|h[12]&255)/1E3,A=(h[13]&255)<<8|h[14]&255,x=h[15]&255;h=(h[16]&255)<<8|h[17]&255;k.destination_endpoint=l;k.temperature=m/200;k.humidity=p;k.pressure=n;k.accelerationX=q;k.accelerationY=r;k.accelerationZ=
u;k.batteryVoltage=(A>>>5)/1E3+1.6;k.txPower=2*(A&31)-40;k.movementCounter=x;k.measurementSequenceNumber=h;return k}(g);c(f[a])})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["getRuuviProperty",module$contents$Blast$generators$ruuvi_tag_getRuuviProperty]);var module$exports$Blast$blocks$streamdeck={};
Blockly.Blocks.streamdeck_button_event={init:function(){this.appendValueInput("id").setCheck("Thing").appendField("Stream Deck Mini");this.appendDummyInput().appendField("on button").appendField(new Blockly.FieldDropdown([["up","up"],["down","down"]]),"upDown");this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldCheckbox("FALSE",a=>this.uncheckAllOtherCheckboxes(a,"button1")),"button1").appendField(new Blockly.FieldCheckbox("FALSE",a=>this.uncheckAllOtherCheckboxes(a,
"button2")),"button2").appendField(new Blockly.FieldCheckbox("FALSE",a=>this.uncheckAllOtherCheckboxes(a,"button3")),"button3");this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldCheckbox("FALSE",a=>this.uncheckAllOtherCheckboxes(a,"button4")),"button4").appendField(new Blockly.FieldCheckbox("FALSE",a=>this.uncheckAllOtherCheckboxes(a,"button5")),"button5").appendField(new Blockly.FieldCheckbox("FALSE",a=>this.uncheckAllOtherCheckboxes(a,"button6")),"button6");this.appendDummyInput().appendField("do");
this.appendStatementInput("statements").setCheck(null);this.setColour(180);this.setTooltip("");this.setHelpUrl("");this.requested=!1;this.keyState=Array(6).fill(!1)},uncheckAllOtherCheckboxes:function(a,b){if("TRUE"===a)for(a=1;6>=a;a++)"button"+a!=b&&this.setFieldValue("FALSE","button"+a)},addEvent:function(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){module$contents$Blast$Interpreter_eventsInWorkspace.push(a.id);module$contents$Blast$Interpreter_getWorkspace().addChangeListener(b=>
a.onDispose(b))})},onchange:function(){this.isInFlyout||this.requested||!this.rendered||this.addEvent()},onDispose:function(a){a.type===Blockly.Events.BLOCK_DELETE&&a.type===Blockly.Events.BLOCK_DELETE&&-1!==a.ids.indexOf(this.id)&&this.removeFromEvents()},removeFromEvents:function(){const a=module$contents$Blast$Interpreter_eventsInWorkspace.indexOf(this.id);-1!==a&&module$contents$Blast$Interpreter_eventsInWorkspace.splice(a,1)}};
module$contents$Blast$Toolbox_addBlock("streamdeck_button_event","States and Events");
Blockly.Blocks.streamdeck_color_buttons={init:function(){this.appendValueInput("color").setCheck("Colour").appendField("write color");this.appendDummyInput().appendField("to display property of button(s)");this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldCheckbox("FALSE"),"button1").appendField(new Blockly.FieldCheckbox("FALSE"),"button2").appendField(new Blockly.FieldCheckbox("FALSE"),"button3");this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldCheckbox("FALSE"),
"button4").appendField(new Blockly.FieldCheckbox("FALSE"),"button5").appendField(new Blockly.FieldCheckbox("FALSE"),"button6");this.appendValueInput("id").setCheck("Thing").appendField("of Stream Deck Mini");this.setColour(255);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setTooltip("");this.setHelpUrl("");this.requested=!1;this.keyState=Array(6).fill(!1)}};const module$contents$Blast$blocks$streamdeck_STREAMDECK_COLOR_BUTTONS_XML='\n<block type="streamdeck_color_buttons">\n  <value name="color">\n    <block type="colour_picker">\n      <field name="COLOUR">#ffff00</field>\n    </block>\n  </value>\n</block>\n';
module$contents$Blast$Toolbox_addBlock("streamdeck_color_buttons","Properties",module$contents$Blast$blocks$streamdeck_STREAMDECK_COLOR_BUTTONS_XML);
Blockly.Blocks.streamdeck_write_on_buttons={init:function(){this.appendValueInput("value").setCheck(["String","Number","Boolean"]).appendField("write Number/String/Boolean");this.appendDummyInput().appendField("to display property of button(s)");this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldCheckbox("FALSE"),"button1").appendField(new Blockly.FieldCheckbox("FALSE"),"button2").appendField(new Blockly.FieldCheckbox("FALSE"),"button3");this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldCheckbox("FALSE"),
"button4").appendField(new Blockly.FieldCheckbox("FALSE"),"button5").appendField(new Blockly.FieldCheckbox("FALSE"),"button6");this.appendValueInput("id").setCheck("Thing").appendField("of Stream Deck Mini");this.setColour(255);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setTooltip("");this.setHelpUrl("");this.requested=!1;this.keyState=Array(6).fill(!1)}};module$contents$Blast$Toolbox_addBlock("streamdeck_write_on_buttons","Properties");
Blockly.Blocks.streamdeck_set_brightness={init:function(){this.appendValueInput("value").setCheck("Number").appendField("write brightness property");this.appendValueInput("id").setCheck("Thing").appendField("to Stream Deck Mini");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(255);this.setTooltip("");this.setHelpUrl("")}};const module$contents$Blast$blocks$streamdeck_STREAMDECK_SET_BRIGHTNESS_XML='\n<block type="streamdeck_set_brightness">\n  <value name="value">\n    <block type="math_number">\n      <field name="NUM">100</field>\n    </block>\n  </value>\n</block>\n';
module$contents$Blast$Toolbox_addBlock("streamdeck_set_brightness","Properties",module$contents$Blast$blocks$streamdeck_STREAMDECK_SET_BRIGHTNESS_XML);var module$exports$Blast$generators$streamdeck={};const module$contents$Blast$generators$streamdeck_thingsLog=module$contents$Blast$Things_getThingsLog();
Blockly.JavaScript.streamdeck_button_event=function(a){var b="TRUE"==a.getFieldValue("button1")?1:0;const c="TRUE"==a.getFieldValue("button2")?1:0,d="TRUE"==a.getFieldValue("button3")?1:0,f="TRUE"==a.getFieldValue("button4")?1:0,g="TRUE"==a.getFieldValue("button5")?1:0,h="TRUE"==a.getFieldValue("button6")?1:0,k=Blockly.JavaScript.quote_(a.getFieldValue("upDown")),l=Blockly.JavaScript.valueToCode(a,"id",Blockly.JavaScript.ORDER_NONE)||null;b=Blockly.JavaScript.quote_(`${b}${c}${d}${f}${g}${h}`);a=
Blockly.JavaScript.quote_(Blockly.JavaScript.statementToCode(a,"statements"));Blockly.JavaScript.definitions_.eventHandlers=(Blockly.JavaScript.definitions_.eventHandlers||"")+`handleStreamdeck(${l}, ${b}, ${k}, ${a});\n`;return""};
Blockly.JavaScript.streamdeck_color_buttons=function(a){var b="TRUE"==a.getFieldValue("button1")?1:0;const c="TRUE"==a.getFieldValue("button2")?1:0,d="TRUE"==a.getFieldValue("button3")?1:0,f="TRUE"==a.getFieldValue("button4")?1:0,g="TRUE"==a.getFieldValue("button5")?1:0,h="TRUE"==a.getFieldValue("button6")?1:0,k=Blockly.JavaScript.valueToCode(a,"color",Blockly.JavaScript.ORDER_NONE)||Blockly.JavaScript.quote_("#000000");a=Blockly.JavaScript.valueToCode(a,"id",Blockly.JavaScript.ORDER_NONE)||null;
b=Blockly.JavaScript.quote_(`${b}${c}${d}${f}${g}${h}`);return`streamdeckColorButtons(${a}, ${b}, ${k});\n`};
const module$contents$Blast$generators$streamdeck_handleStreamdeck=function(a,b,c,d){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if(null===a)module$contents$Blast$Interpreter_throwError("No streamdeck block set.");else{var f=module$contents$Blast$Things_getWebHidDevice(a);if(f){try{var g=yield openDevice(f)}catch(k){if("InvalidStateError"==k.name)f.close(),g=yield openDevice(f);else{module$contents$Blast$Interpreter_throwError(k);return}}for(let k=0;k<b.length;k++)if("1"===b.charAt(k)){var h=
k;break}void 0!==h&&(g.on(c,k=>{module$contents$Blast$generators$streamdeck_thingsLog(`Received <code>${c}</code> event on button <code>${k}</code>`,"hid",f.productName);if(k===h){module$contents$Blast$Interpreter_setInterrupted(!0);const l=new Interpreter("");l.stateStack[0].scope=module$contents$Blast$Interpreter_getInterpreter().globalScope;l.appendCode(d);const m=function(){try{l.step()?setTimeout(m,5):module$contents$Blast$Interpreter_setInterrupted(!1)}catch(p){module$contents$Blast$Interpreter_throwError(`Error executing program:\n ${e}`),
console.error(p)}};m()}}),module$contents$Blast$Interpreter_addCleanUpFunction(()=>{module$contents$Blast$generators$streamdeck_thingsLog("Removing all listeners","hid",f.productName);g.close();g.removeAllListeners()}))}else module$contents$Blast$Interpreter_throwError("Connected device is not a HID device.\nMake sure you are connecting the Streamdeck via webHID")}})};module$contents$Blast$Interpreter_apiFunctions.push(["handleStreamdeck",module$contents$Blast$generators$streamdeck_handleStreamdeck]);
const module$contents$Blast$generators$streamdeck_streamdeckColorButtons=function(a,b,c,d){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if(null===a)module$contents$Blast$Interpreter_throwError("No streamdeck block set.");else{var f=module$contents$Blast$Things_getWebHidDevice(a);if(f){try{var g=yield openDevice(f)}catch(m){if("InvalidStateError"==m.name)f.close(),g=yield openDevice(f);else{module$contents$Blast$Interpreter_throwError(m);d();return}}var h=parseInt(c.substring(1,
3),16),k=parseInt(c.substring(3,5),16),l=parseInt(c.substring(5,7),16);for(let m=0;m<b.length;m++)"1"===b.charAt(m)&&(module$contents$Blast$generators$streamdeck_thingsLog(`Invoke <code>fillKeyColor</code> with value <code>${[m,h,k,l].toString()}</code>`,"hid",f.productName),yield g.fillKeyColor(m,h,k,l),module$contents$Blast$generators$streamdeck_thingsLog("Finished <code>fillKeyColor</code>","hid",f.productName))}else module$contents$Blast$Interpreter_throwError("Connected device is not a HID device.\nMake sure you are connecting the Streamdeck via webHID")}d()})};
module$contents$Blast$Interpreter_asyncApiFunctions.push(["streamdeckColorButtons",module$contents$Blast$generators$streamdeck_streamdeckColorButtons]);
Blockly.JavaScript.streamdeck_write_on_buttons=function(a){var b="TRUE"==a.getFieldValue("button1")?1:0;const c="TRUE"==a.getFieldValue("button2")?1:0,d="TRUE"==a.getFieldValue("button3")?1:0,f="TRUE"==a.getFieldValue("button4")?1:0,g="TRUE"==a.getFieldValue("button5")?1:0,h="TRUE"==a.getFieldValue("button6")?1:0,k=Blockly.JavaScript.valueToCode(a,"value",Blockly.JavaScript.ORDER_NONE)||Blockly.JavaScript.quote_("");a=Blockly.JavaScript.valueToCode(a,"id",Blockly.JavaScript.ORDER_NONE)||null;b=Blockly.JavaScript.quote_(`${b}${c}${d}${f}${g}${h}`);
return`streamdeckWriteOnButtons(${a}, ${b}, ${k});\n`};
const module$contents$Blast$generators$streamdeck_streamdeckWriteOnButtons=function(a,b,c,d){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if(null===a)module$contents$Blast$Interpreter_throwError("No streamdeck block set.");else{var f=module$contents$Blast$Things_getWebHidDevice(a);if(f){try{var g=yield openDevice(f)}catch(m){if("InvalidStateError"==m.name)f.close(),g=yield openDevice(f);else{module$contents$Blast$Interpreter_throwError(m);d();return}}var h=[],k=document.createElement("canvas");
k.width=g.ICON_SIZE;k.height=g.ICON_SIZE;var l=k.getContext("2d");l.save();l.clearRect(0,0,k.width,k.height);l.font=.8*k.height+"px Arial";l.strokeStyle="blue";l.lineWidth=1;l.strokeText(c.toString(),8,60,.8*k.width);l.fillStyle="white";l.fillText(c.toString(),8,60,.8*k.width);k=l.getImageData(0,0,k.width,k.height);for(let m=0;m<b.length;m++)"1"===b.charAt(m)&&(module$contents$Blast$generators$streamdeck_thingsLog(`Invoke <code>fillKeyImageData</code> with value <code>${[m,k].toString()}</code>`,
"hid",f.productName),h.push(g.fillKeyBuffer(m,buffer.Buffer.from(k.data),{format:"rgba"})),module$contents$Blast$generators$streamdeck_thingsLog("Finished <code>fillKeyImageData</code>","hid",f.productName));l.restore();yield Promise.all(h)}else module$contents$Blast$Interpreter_throwError("Connected device is not a HID device.\nMake sure you are connecting the Streamdeck via webHID")}d()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["streamdeckWriteOnButtons",module$contents$Blast$generators$streamdeck_streamdeckWriteOnButtons]);
Blockly.JavaScript.streamdeck_set_brightness=function(a){const b=Blockly.JavaScript.valueToCode(a,"value",Blockly.JavaScript.ORDER_NONE)||Blockly.JavaScript.quote_("100");return`streamdeckSetBrightness(${Blockly.JavaScript.valueToCode(a,"id",Blockly.JavaScript.ORDER_NONE)||null}, ${b});\n`};
const module$contents$Blast$generators$streamdeck_streamdeckSetBrightness=function(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if(null===a)module$contents$Blast$Interpreter_throwError("No streamdeck block set.");else if(1>b||100<b)module$contents$Blast$Interpreter_throwError("Brightness must be between 1 and 100.");else{var d=module$contents$Blast$Things_getWebHidDevice(a);if(d){try{var f=yield openDevice(d)}catch(g){if("InvalidStateError"==g.name)d.close(),f=yield openDevice(d);
else{module$contents$Blast$Interpreter_throwError(g);c();return}}module$contents$Blast$generators$streamdeck_thingsLog(`Invoke <code>setBrightness</code> with value <code>${b}</code>`,"hid",d.productName);yield f.setBrightness(b);module$contents$Blast$generators$streamdeck_thingsLog("Finished <code>setBrightness</code>","hid",d.productName)}else module$contents$Blast$Interpreter_throwError("Connected device is not a HID device.\nMake sure you are connecting the Streamdeck via webHID")}c()})};
module$contents$Blast$Interpreter_asyncApiFunctions.push(["streamdeckSetBrightness",module$contents$Blast$generators$streamdeck_streamdeckSetBrightness]);var module$exports$Blast$blocks$web_speech={};Blockly.Blocks.text_to_speech={init:function(){this.appendValueInput("text").appendField("Text to Speech").setCheck("String");this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(0);this.setTooltip("");this.setHelpUrl("")}};module$contents$Blast$Toolbox_addBlock("text_to_speech","actions");
Blockly.Blocks.web_speech={init:function(){this.appendDummyInput().appendField("speech to text");this.setOutput(!0,"String");this.setColour(0);this.setTooltip("outputs speech command from microphone as a string");this.setHelpUrl("");this.firstTime=!0;this.recognition=null},onchange:function(){!this.isInFlyout&&this.firstTime&&this.rendered&&(this.firstTime=!1,"webkitSpeechRecognition"in window?this.recognition=new webkitSpeechRecognition:(Blockly.alert('Web Speech API is not supported by this browser.\n        Upgrade to <a href="//www.google.com/chrome">Chrome</a>\n        version 25 or later.'),
this.dispose()))}};module$contents$Blast$Toolbox_addBlock("web_speech","actions");var module$exports$Blast$generators$web_speech={};Blockly.JavaScript.text_to_speech=function(a){return`textToSpeech(${Blockly.JavaScript.valueToCode(a,"text",Blockly.JavaScript.ORDER_ATOMIC)});\n`};Blockly.JavaScript.web_speech=function(a){return[`webSpeech('${a.id}')`,Blockly.JavaScript.ORDER_NONE]};
const module$contents$Blast$generators$web_speech_webSpeech=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=module$contents$Blast$Interpreter_getWorkspace().getBlockById(a).recognition;c.continuous=!1;c.lang="en-US";let d="";c.onresult=function(f){for(let g=f.resultIndex;g<f.results.length;++g)f.results[g].isFinal&&(d+=f.results[g][0].transcript)};c.onend=function(){b(d)};c.start()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["webSpeech",module$contents$Blast$generators$web_speech_webSpeech]);
const module$contents$Blast$generators$web_speech_textToSpeech=function(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=new SpeechSynthesisUtterance;c.text=a;window.speechSynthesis.speak(c);yield new Promise(d=>{c.onend=d});b()})};module$contents$Blast$Interpreter_asyncApiFunctions.push(["textToSpeech",module$contents$Blast$generators$web_speech_textToSpeech]);var module$exports$Blast$blocks$xiamoi_thermometer={};Blockly.Blocks.read_mijia_property={init:function(){this.appendValueInput("Thing").setCheck("Thing").appendField("read").appendField(new Blockly.FieldDropdown([["temperature","temperature"],["humidity","humidity"]]),"measurement").appendField("property of Xiaomi Mijia");this.setOutput(!0,["String","Number"]);this.setColour(255);this.setTooltip("Reads the selected property of a Xiaomi Mijia Thermometer.");this.setHelpUrl("")}};
module$contents$Blast$Toolbox_addBlock("read_mijia_property","Properties");var module$exports$Blast$generators$xiamoi_thermometer={};Blockly.JavaScript.read_mijia_property=function(a){const b=Blockly.JavaScript.quote_(a.getFieldValue("measurement"));a=Blockly.JavaScript.valueToCode(a,"Thing",Blockly.JavaScript.ORDER_ATOMIC);return[`readMijiaProperty(${b}, ${a})`,Blockly.JavaScript.ORDER_NONE]};const module$contents$Blast$generators$xiamoi_thermometer_XiaomiServiceUUID="ebe0ccb0-7a0a-4b0c-8a1a-6ff2997da3a6";module$contents$Blast$Bluetooth_optionalServices.push(module$contents$Blast$generators$xiamoi_thermometer_XiaomiServiceUUID);
const module$contents$Blast$generators$xiamoi_thermometer_readMijiaProperty=function(a,b,c){b?module$contents$Blast$Bluetooth_subscribe(b,module$contents$Blast$generators$xiamoi_thermometer_XiaomiServiceUUID,"ebe0ccc1-7a0a-4b0c-8a1a-6ff2997da3a6",function(d){var f=d.target.value;const g=f.getUint8(1)&128;d=(f.getUint8(1)&127)<<8|f.getUint8(0);g&&(d-=32767);d/=100;f=f.getUint8(2);"temperature"===a?c(d):"humidity"===a&&c(f)}):(module$contents$Blast$Interpreter_throwError("No Thermometer is set."),c())};
module$contents$Blast$Interpreter_asyncApiFunctions.push(["readMijiaProperty",module$contents$Blast$generators$xiamoi_thermometer_readMijiaProperty]);
